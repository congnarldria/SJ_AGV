<?xml version="1.0"?>
<File xmlns="urn:NDC8DeviceConfigurationTemplate" version="1.0">
    <FileInfo FileType="dct"
        FileRevision="1"
        FileFormat="1"
        Description="CVC600 SDIO"
        CreationDate="2011-04-19"
        CreationTime="16:00:00"
        CreatedBy="Ulf Larsson"
        ModificationDate="2015-04-14"
        ModificationTime="12:00:00"
        ModifiedBy="MBJ"
        ModifiedWith=""
        ModifiedWithSerial="" >
    </FileInfo>

    <TemplateParameters>
        <TemplateParameter SymbolName="BusID"
            PublicName="CAN Bus Id"
            DataType="UNSIGNED16"
            Min="1"
            Max="1"
            Default="1"
            Remark="CAN Bus Id."/>

        <TemplateParameter SymbolName="NodeId"
            DataType="UNSIGNED16"
            Default="2"
            Min="2"
            Max="2"/>

       <TemplateParameter  SymbolName="SD_Controller"
            PublicName="Used as S/D Controller"
            DataType="BOOLEAN"
            Default="false"
            Remark="Select if to use Steering and Driving Regulator" />

        <TemplateParameter SymbolName="SD_Choice"
            PublicName="Config of SD Controller"
            DataType="UNSIGNED16" Min="1" Max="2" Default="1"
            Remark="Select type of encoder for the SD Controller">
            <ValueTranslation Value="1" String="Incr Steer Encoder, Incr Drive Encoder"/>
            <ValueTranslation Value="2" String="CAN Steer Encoder, Incr Drive Encoder"/>
        </TemplateParameter>

        <TemplateParameter SymbolName="CanEncoder1"
            PublicName="CAN Steer Encoder Node Id (if used)"
            DataType="UNSIGNED16" Min="5" Max="31"
            Default="5"
            Remark="Select a Node ID if CAN Steer Encoder is used. Ignored if not used."/>
        
        <TemplateParameter  SymbolName="UseSpotAntennas"
            PublicName="Using Spot Antennas"
            DataType="BOOLEAN"
            Default="false"
            Remark="Select if to use Spot Antennas (1-2)" />

        <TemplateParameter  SymbolName="NumberOfEdgeDetectDigInp"
            PublicName="Using Edge Detection on Digital Input"
            DataType="UNSIGNED8" Min="0" Max="4" Default="0"
            Remark="Up to four digital inputs can be used for edge detection">
            <ValueTranslation Value="0" String="Edge detection is disabled" />
            <ValueTranslation Value="1" String="Edge detection is done on one input" />
            <ValueTranslation Value="2" String="Edge detection is done on two input" />
            <ValueTranslation Value="3" String="Edge detection is done on three input" />
            <ValueTranslation Value="4" String="Edge detection is done on four input" />
        </TemplateParameter>

        <TemplateParameter  SymbolName="UseAuxPWMOutput"
            PublicName="Using Auxiliary PWM Outputs"
            DataType="BOOLEAN"
            Default="false"
            Remark="Select if to use Auxiliary PWM Outputs (1-3)" />

        <TemplateParameter  SymbolName="AuxRegulator1"
            PublicName="Use Regulator 1 for Auxiliary Control"
            DataType="UNSIGNED16" Min="0" Max="4" Default="0"
            Remark="Select if to use Regulator 1 for Auxiliary Position Control">
            <ValueTranslation Value="0" String="Do not use Auxiliary Regulator 1" />
            <ValueTranslation Value="1" String="Position Regulator using Encoder 1 as feedback" />
            <ValueTranslation Value="2" String="Speed Regulator using Encoder 1 as feedback" />
            <ValueTranslation Value="3" String="Position Regulator using Analog Input 5 as feedback" />
            <ValueTranslation Value="4" String="Speed Regulator using Analog Input 5 as feedback" />
        </TemplateParameter>

        <TemplateParameter  SymbolName="AuxEncoder1"
            PublicName="Use Auxiliary Encoder 1"
            DataType="UNSIGNED16" Min="0" Max="5" Default="0"
            Remark="Select if to use Encoder 1 as an Auxiliary feedback" >
            <ValueTranslation Value="0" String="Do not use Auxiliary Encoder 1" />
            <ValueTranslation Value="1" String="Use as Angle Encoder without Sync" />
            <ValueTranslation Value="2" String="Use as Angle Encoder with Sync" />
            <ValueTranslation Value="3" String="Use as Distance Encoder without Sync" />
            <ValueTranslation Value="4" String="Use as Distance Encoder with Sync" />
            <ValueTranslation Value="5" String="Auxiliary Encoder 1 as Speed Encoder" />
        </TemplateParameter>

        <TemplateParameter  SymbolName="AuxRegulator2"
            PublicName="Use Regulator 2 for Auxiliary Control"
            DataType="UNSIGNED16" Min="0" Max="4" Default="0"
            Remark="Select if to use Regulator 2 for Auxiliary Position Control">
            <ValueTranslation Value="0" String="Do not use Auxiliary Regulator 2" />
            <ValueTranslation Value="1" String="Position Regulator using Encoder 2 as feedback" />
            <ValueTranslation Value="2" String="Speed Regulator using Encoder 2 as feedback" />
            <ValueTranslation Value="3" String="Position Regulator using Analog Input 6 as feedback" />
            <ValueTranslation Value="4" String="Speed Regulator using Analog Input 6 as feedback" />
        </TemplateParameter>

        <TemplateParameter  SymbolName="AuxEncoder2"
            PublicName="Use Auxiliary Encoder 2"
            DataType="UNSIGNED16" Min="0" Max="5" Default="0"
            Remark="Select if to use Encoder 2 as an Auxiliary feedback" >
            <ValueTranslation Value="0" String="Do not use Auxiliary Encoder 2" />
            <ValueTranslation Value="1" String="Use as Angle Encoder without Sync" />
            <ValueTranslation Value="2" String="Use as Angle Encoder with Sync" />
            <ValueTranslation Value="3" String="Use as Distance Encoder without Sync" />
            <ValueTranslation Value="4" String="Use as Distance Encoder with Sync" />
            <ValueTranslation Value="5" String="Auxiliary Encoder 2 as Speed Encoder" />
        </TemplateParameter>

        <TemplateParameter  SymbolName="RegulatorOutputPDOBehaviour"
            PublicName="Regulator output PDO behaviour"
            DataType="UNSIGNED16" Min="0" Max="1"
            Default="0"
            Remark="Determines how to send the reglator output PDO on the canbus.
0: With sync (default)
1: After each regulation execution period (each 5ms)
This parameter is only applicable if any of the regulators are used.
"/>

        <TemplateParameter  SymbolName="TransmissionType"
            PublicName="CanOpen Transmission Type"
            DataType="UNSIGNED16" Min="1" Max="255"
            Default="1"
            Remark="Synchronous communication (1) means that all PDO's will be transmitted in conjunction with CANopen SYNC. Asynchronous communication (255) means that PDO's will be sent on data change. Asynchronous communication requires definition of inhibit time." />

        <TemplateParameter  SymbolName="PdoInhibitTime"
            PublicName="Transmit PDO inhibit time"
            DataType="UNSIGNED16" Min="1" Max="500"
            Default="20"
            Remark="Transmit PDO inhibit time given in units of [ms]." />
    </TemplateParameters>

    <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
        <xsl:param name="BusID" />
        <xsl:param name="NodeId" />
        <xsl:param name="SD_Controller" />
        <xsl:param name="SD_Choice" />
        <xsl:param name="CanEncoder1" />
        <xsl:param name="UseSpotAntennas" />
        <xsl:param name="NumberOfEdgeDetectDigInp" />
        <xsl:param name="UseAuxPWMOutput" />
        <xsl:param name="AuxRegulator1" />
        <xsl:param name="AuxEncoder1" />
        <xsl:param name="AuxRegulator2" />
        <xsl:param name="AuxEncoder2" />
        <xsl:param name="RegulatorOutputPDOBehaviour"/>
        <xsl:param name="TransmissionType"/>
        <xsl:param name="PdoInhibitTime"/>

        <xsl:variable name="HelpDeviceName">
            <xsl:if test='$BusID = "1"'>
                <xsl:if test='$NodeId = "2"'>
                    <xsl:value-of select="'SDIO'"/> 
                </xsl:if>
                <xsl:if test='$NodeId != "2"'>
                    <xsl:value-of select="concat('SDIO_',$NodeId)"/> 
                </xsl:if>
           </xsl:if>
           <xsl:if test='$BusID = "2"'> 
              <xsl:value-of select="concat('SDIO_',$BusID,'_',$NodeId)"/> 
            </xsl:if>
        </xsl:variable>
        <xsl:variable name="UseMagnetic" select="'false'"/>
        <xsl:variable name="CAN_Steer_Encoder">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test="$SD_Choice = 2">
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test="$SD_Choice = 4">
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="CAN_Drive_Encoder">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test="$SD_Choice = 3">
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test="$SD_Choice = 4">
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="Incr_Steer_Encoder">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test="$SD_Choice = 1">
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test="$SD_Choice = 3">
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="Incr_Drive_Encoder">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test="$SD_Choice = 1">
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test="$SD_Choice = 2">
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="UseEdgeDetectDigInp">
            <xsl:choose>
                <xsl:when test='$NumberOfEdgeDetectDigInp = 0'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>true</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxReg1Base">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator1 = 0'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator1 > 4'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>true</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxReg1Spd">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator1 = 2'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator1 = 4'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc1Base">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator1 = 1'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator1 = 2'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder1 &gt; 0'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc1Ang">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEnc1Base = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder1 = 1'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder1 = 2'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc1Dist">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEnc1Base = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder1 = 3'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder1 = 4'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc1Spd">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEnc1Base = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder1 = 5'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc1Sync">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEnc1Base = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder1 = 2'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder1 = 4'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxReg2Base">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator2 = 0'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator2 > 4'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>true</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxReg2Spd">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator2 = 2'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator2 = 4'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc2Base">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator2 = 1'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxRegulator2 = 2'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder2 &gt; 0'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc2Ang">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEnc2Base = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder2 = 1'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder2 = 2'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc2Dist">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEnc2Base = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder2 = 3'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder2 = 4'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc2Spd">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEnc2Base = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder2 = 5'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="AuxEnc2Sync">
            <xsl:choose>
                <xsl:when test='$SD_Controller = "true"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEnc2Base = "false"'>
                    <xsl:text>false</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder2 = 2'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:when test='$AuxEncoder2 = 4'>
                    <xsl:text>true</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>false</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:template match="/" >
            <File xmlns="urn:NDC8DeviceConfigurationFile" >
                <FileInfo FileType="dc"
                    FileRevision="1"
                    FileFormat="40"
                    Description="NDC8 Device Configuration File"
                    CreationDate="2011-04-19"
                    CreationTime="14:00:00"
                    CreatedBy="Ulf Larsson"
                    ModificationDate="2015-04-14"
                    ModificationTime="12:00:00"
                    ModifiedBy="MBJ"
                    ModifiedWith=""
                    ModifiedWithSerial="" >
                </FileInfo>

                <Configuration Protocol="CANopen"
                    BusId="{$BusID}"
                    NodeId="{$NodeId}"
                    Optional="false">
                    <xsl:choose>
                        <xsl:when test='$SD_Controller = "true"'>
                            <xsl:choose>
                                <xsl:when test='$UseSpotAntennas = "true"'>
                                    <xsl:attribute name="Remark">CVC600 as SD Controller with SpotAntennas</xsl:attribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="Remark">CVC600 as SD Controller</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:choose>
                                <xsl:when test='$UseSpotAntennas = "true"'>
                                    <xsl:attribute name="Remark">CVC600 as IO Controller with SpotAntennas</xsl:attribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="Remark">CVC600 as IO Controller</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:otherwise>
                    </xsl:choose>

                    <Guarding Type="NodeGuarding" Timeout="500" />
                    <Identification DeviceType="0x09000000"
                        ArticleNumber="P41976V1.2.1"
                        ArticleNumberMatch="P41976V1.2.???" />

                    <Emergencies>
                        <Emergency Code="0x8120" Action="PLC" Description="Warning, Error passive."/>
                        <Emergency Code="0x3000" Action="PLC" SysEvent="229" Description="Ground fault error."/>
                    </Emergencies>

                    <ReadParameters>
                        <!-- General CANopen device information -->
                        <ReadParameter Property="DeviceType"
                            Index="0x1000"
                            SubIndex="0"
                            DataType="UNSIGNED32" />
                        <ReadParameter Property="VendorID"
                            Index="0x1018"
                            SubIndex="1"
                            DataType="UNSIGNED32"
                            ValueRepresentation="Hex" />

                        <!-- Additional EVS device information -->
                        <ReadParameter Property="BootSWArticleNumber"
                            Index="0x5F01"
                            SubIndex="1"
                            DataType="VISIBLE_STRING" />
                        <ReadParameter Property="ApplicationSWArticleNumber"
                            Index="0x5F01"
                            SubIndex="4"
                            DataType="VISIBLE_STRING" />
                        <ReadParameter Property="HardwareVersion"
                            Index="0x5F01"
                            SubIndex="10"
                            DataType="VISIBLE_STRING" />
                        <ReadParameter Property="HardwareSerialNumber"
                            Index="0x5F01"
                            SubIndex="13"
                            DataType="VISIBLE_STRING" />
                        <ReadParameter Property="MainCPLDVersion"
                            Index="0x5F01"
                            SubIndex="19"
                            DataType="VISIBLE_STRING" />
                    </ReadParameters>

                    <SetupValues>
                        <xsl:if test='$SD_Controller = "true"'>
                            <SetupValue SymbolAddress="Reg1Config.ParameterGroup" Value="0"/>
                            <SetupValue SymbolAddress="Reg1Config.UseRegulator" Value="true"/>
                            <SetupValue SymbolAddress="Reg2Config.ParameterGroup" Value="0"/>
                            <SetupValue SymbolAddress="Reg2Config.UseRegulator" Value="true"/>
                            <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                <SetupValue SymbolAddress="Reg1Config.FeedbackType" Value="1"/>
                                <SetupValue SymbolAddress="Enc1Config.Type" Value="1"/>
                                <SetupValue SymbolAddress="Enc1Config.Use" Value="true"/>
                                <SetupValue SymbolAddress="Enc1.Flags.SyncGate" Value="1"/>
                            </xsl:if>
                            <xsl:if test='$CAN_Steer_Encoder = "true"'>
                                <SetupValue SymbolAddress="Reg1Config.FeedbackType" Value="3"/>
                                <SetupValue SymbolAddress="CanEnc1Config.Type" Value="1"/>
                                <SetupValue SymbolAddress="CanEnc1Config.Use" Value="true"/>
                            </xsl:if>
                            <xsl:if test='$Incr_Drive_Encoder = "true"'>
                                <SetupValue SymbolAddress="Reg2Config.FeedbackType" Value="2"/>
                                <SetupValue SymbolAddress="Enc2Config.Type" Value="0"/>
                                <SetupValue SymbolAddress="Enc2Config.Use" Value="true"/>
                            </xsl:if>
                            <xsl:if test='$CAN_Drive_Encoder = "true"'>
                                <SetupValue SymbolAddress="Reg2Config.FeedbackType" Value="4"/>
                                <SetupValue SymbolAddress="CanEnc2Config.Type" Value="0"/>
                                <SetupValue SymbolAddress="CanEnc2Config.Use" Value="true"/>
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$UseSpotAntennas = "true"'>
                            <SetupValue SymbolAddress="Spot1Config.UseSpot" Value="true" />
                            <SetupValue SymbolAddress="Spot2Config.UseSpot" Value="true" />
                        </xsl:if>

                        <xsl:if test='$AuxReg1Base = "true"'>
                            <SetupValue SymbolAddress="Reg1Config.ParameterGroup" Value="0" />
                            <SetupValue SymbolAddress="Reg1Config.UseRegulator" Value="true" />
                            <xsl:if test='$AuxRegulator1 = 1'>
                                <SetupValue SymbolAddress="Reg1Config.FeedbackType" Value="1" />
                            </xsl:if>
                            <xsl:if test='$AuxRegulator1 = 2'>
                                <SetupValue SymbolAddress="Reg1Config.FeedbackType" Value="2" />
                            </xsl:if>
                            <xsl:if test='$AuxRegulator1 = 3'>
                                <SetupValue SymbolAddress="Reg1Config.FeedbackType" Value="5" />
                            </xsl:if>
                            <xsl:if test='$AuxRegulator1 = 4'>
                                <SetupValue SymbolAddress="Reg1Config.FeedbackType" Value="6" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$AuxReg2Base = "true"'>
                            <SetupValue SymbolAddress="Reg2Config.ParameterGroup" Value="0" />
                            <SetupValue SymbolAddress="Reg2Config.UseRegulator" Value="true" />
                            <xsl:if test='$AuxRegulator2 = 1'>
                                <SetupValue SymbolAddress="Reg2Config.FeedbackType" Value="1" />
                            </xsl:if>
                            <xsl:if test='$AuxRegulator2 = 2'>
                                <SetupValue SymbolAddress="Reg2Config.FeedbackType" Value="2" />
                            </xsl:if>
                            <xsl:if test='$AuxRegulator2 = 3'>
                                <SetupValue SymbolAddress="Reg2Config.FeedbackType" Value="5" />
                            </xsl:if>
                            <xsl:if test='$AuxRegulator2 = 4'>
                                <SetupValue SymbolAddress="Reg2Config.FeedbackType" Value="6" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$AuxEnc1Base = "true"'>
                            <SetupValue SymbolAddress="Enc1Config.Use" Value="true" />

                            <xsl:choose>
                                <xsl:when test='$AuxEnc1Ang = "true"'>
                                    <SetupValue SymbolAddress="Enc1Config.Type" Value="1" />
                                </xsl:when>
                                <xsl:otherwise>
                                    <SetupValue SymbolAddress="Enc1Config.Type" Value="0" />
                                </xsl:otherwise>
                            </xsl:choose>

                            <xsl:if test='$AuxEnc1Sync = "true"'>
                                <SetupValue SymbolAddress="Enc1.Flags.SyncGate" Value="1" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$AuxEnc2Base = "true"'>
                            <SetupValue SymbolAddress="Enc2Config.Use" Value="true" />

                            <xsl:choose>
                                <xsl:when test='$AuxEnc2Ang = "true"'>
                                    <SetupValue SymbolAddress="Enc2Config.Type" Value="1" />
                                </xsl:when>
                                <xsl:otherwise>
                                    <SetupValue SymbolAddress="Enc2Config.Type" Value="0" />
                                </xsl:otherwise>
                            </xsl:choose>

                            <xsl:if test='$AuxEnc2Sync = "true"'>
                                <SetupValue SymbolAddress="Enc2.Flags.SyncGate" Value="1" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$UseAuxPWMOutput = "true"'>
                            <SetupValue SymbolAddress="IoConfig.UseAnalogOut" Value="true" />
                        </xsl:if>

                        <SetupValue SymbolAddress="RpdoGuardingTimeout.Rpdo1" Value="0" />

                        <xsl:if test='$SD_Controller = "true"'>
                            <SetupValue SymbolAddress="RpdoGuardingTimeout.Rpdo2" Value="500" />
                        </xsl:if>
                        <xsl:if test='$SD_Controller = "false"'>
                            <SetupValue SymbolAddress="RpdoGuardingTimeout.Rpdo2" Value="0" />
                        </xsl:if>
                        <xsl:if  test='$CAN_Steer_Encoder = "false"'>
                            <SetupValue SymbolAddress="RpdoGuardingTimeout.Rpdo3" Value="0" />
                        </xsl:if>
                        <xsl:if test='$CAN_Drive_Encoder = "false"'>
                            <SetupValue SymbolAddress="RpdoGuardingTimeout.Rpdo4" Value="0" />
                        </xsl:if>

                        <SetupValue SymbolAddress="CoTpdo1.TransmissionType" Value="{$TransmissionType}" />
                        <xsl:if test="$TransmissionType = 255">
                            <SetupValue SymbolAddress="CoTpdo1.InhibitTime" Value="{10* $PdoInhibitTime}" />
                        </xsl:if>
                        <SetupValue SymbolAddress="CoTpdo2.TransmissionType" Value="{$TransmissionType}" />
                        <xsl:if test="$TransmissionType = 255">
                            <SetupValue SymbolAddress="CoTpdo2.InhibitTime" Value="{10* $PdoInhibitTime}" />
                        </xsl:if>
                        <xsl:if test='$SD_Controller = "true"'>
                            <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                <SetupValue SymbolAddress="CoTpdo3.TransmissionType" Value="1" />
                            </xsl:if>
                            <xsl:if test='$CAN_Steer_Encoder = "true"'>
                                <SetupValue SymbolAddress="CoTpdo7.TransmissionType" Value="1" />
                                <SetupValue SymbolAddress="CoRpdo3.CobId" Value="{$CanEncoder1+384}" />
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='$AuxEnc1Base = "true"'>
                            <SetupValue SymbolAddress="CoTpdo3.TransmissionType" Value="1" />
                        </xsl:if>
                        <xsl:if test='$SD_Controller = "true"'>
                            <xsl:if test='$Incr_Drive_Encoder = "true"'>
                                <SetupValue SymbolAddress="CoTpdo4.TransmissionType" Value="1" />
                            </xsl:if>
                            <xsl:if test='$CAN_Drive_Encoder = "true"'>
                                <SetupValue SymbolAddress="CoTpdo8.TransmissionType" Value="1" />
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='$AuxEnc2Base = "true"'>
                            <SetupValue SymbolAddress="CoTpdo4.TransmissionType" Value="1" />
                        </xsl:if>
                        <xsl:if test='$UseSpotAntennas = "true"'>
                            <SetupValue SymbolAddress="CoTpdo5.TransmissionType" Value="0" />
                            <SetupValue SymbolAddress="CoTpdo6.TransmissionType" Value="0" />
                        </xsl:if>
                        <xsl:if test='$UseEdgeDetectDigInp = "true"'>
                            <SetupValue SymbolAddress="CoTpdo9.TransmissionType" Value="0" />
                            <xsl:if test='$NumberOfEdgeDetectDigInp = 3'>
                                <SetupValue SymbolAddress="CoTpdo10.TransmissionType" Value="0" />
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='($SD_Controller = "true" or $AuxReg1Base = "true" or $AuxReg2Base = "true")'>
                            <xsl:if test='$RegulatorOutputPDOBehaviour != 0'>
                                <SetupValue SymbolAddress="CoTpdo8.TransmissionType" Value="254" />
                            </xsl:if>
                        </xsl:if>
                    </SetupValues>

                    <ConfigParameters>

                        <xsl:if test='$UseEdgeDetectDigInp = "true"'>
                            <xsl:if test='$NumberOfEdgeDetectDigInp >= 1'>
                                <ConfigParameter Property="EdgeDetectInput1" SymbolAddress="DigInpEdgeConfig.FirstDigInpEdgeConfig"/>
                            </xsl:if>
                            <xsl:if test='$NumberOfEdgeDetectDigInp >= 2'>
                                <ConfigParameter Property="EdgeDetectInput2" SymbolAddress="DigInpEdgeConfig.SecondDigInpEdgeConfig"/>
                            </xsl:if>
                            <xsl:if test='$NumberOfEdgeDetectDigInp >= 3'>
                                <ConfigParameter Property="EdgeDetectInput3" SymbolAddress="DigInpEdgeConfig.ThirdDigInpEdgeConfig"/>
                            </xsl:if>
                            <xsl:if test='$NumberOfEdgeDetectDigInp = 4'>
                                <ConfigParameter Property="EdgeDetectInput4" SymbolAddress="DigInpEdgeConfig.FourthDigInpEdgeConfig"/>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='$SD_Controller = "true"'>
                            <ConfigParameter Property="SteerRegP" SymbolAddress="Reg1ParamGroup0.P"/>
                            <ConfigParameter Property="SteerRegI" SymbolAddress="Reg1ParamGroup0.I"/>
                            <ConfigParameter Property="SteerRegILimit" SymbolAddress="Reg1ParamGroup0.ILimit"/>
                            <ConfigParameter Property="SteerRegD" SymbolAddress="Reg1ParamGroup0.D"/>
                            <ConfigParameter Property="SteerRegPIDLimit" SymbolAddress="Reg1ParamGroup0.PIDLimit" />
                            <ConfigParameter Property="SteerRegOutOffset" SymbolAddress="Reg1ParamGroup0.OutOffset" />
                            <ConfigParameter Property="SteerRegOutLimit" SymbolAddress="Reg1ParamGroup0.OutLimit"/>
                            <ConfigParameter Property="SteerRegFailureDelay" SymbolAddress="Reg1ParamGroup0.FailureDelay"/>
                            <ConfigParameter Property="SteerRegCheckOutHysteres" SymbolAddress="Reg1ParamGroup0.CheckOutHysteres"/>
                            <ConfigParameter Property="DriveRegFeedForward" SymbolAddress="Reg2ParamGroup0.FeedForward"/>
                            <ConfigParameter Property="DriveRegOffset" SymbolAddress="Reg2ParamGroup0.Offset"/>
                            <ConfigParameter Property="DriveRegP" SymbolAddress="Reg2ParamGroup0.P"/>
                            <ConfigParameter Property="DriveRegI" SymbolAddress="Reg2ParamGroup0.I"/>
                            <ConfigParameter Property="DriveRegILimit" SymbolAddress="Reg2ParamGroup0.ILimit"/>
                            <ConfigParameter Property="DriveRegD" SymbolAddress="Reg2ParamGroup0.D"/>
                            <ConfigParameter Property="DriveRegPIDLimit" SymbolAddress="Reg2ParamGroup0.PIDLimit" />
                            <ConfigParameter Property="DriveRegOutOffset" SymbolAddress="Reg2ParamGroup0.OutOffset" />
                            <ConfigParameter Property="DriveRegOutLimit" SymbolAddress="Reg2ParamGroup0.OutLimit"/>
                            <ConfigParameter Property="DriveRegFailureDelay" SymbolAddress="Reg2ParamGroup0.FailureDelay"/>
                            <ConfigParameter Property="DriveRegCheckOutHysteres" SymbolAddress="Reg2ParamGroup0.CheckOutHysteres"/>
                            <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                <ConfigParameter Property="SteerEncScale" SymbolAddress="Enc1Config.Scale"/>
                                <ConfigParameter Property="SteerEncOffset" SymbolAddress="Enc1Config.Offset"/>
                                <ConfigParameter Property="SteerEncSyncFilter" SymbolAddress="Enc1Config.SyncFilter"/>
                                <ConfigParameter Property="SteerEncSyncEnable" SymbolAddress="Enc1Config.SyncEnable"/>
                                <ConfigParameter Property="SteerEncSyncEmergency" SymbolAddress="Enc1Config.SyncEmergency"/>
                                <ConfigParameter Property="SyncGateInput" SymbolAddress="Enc1Config.SyncGateInput"/>
                            </xsl:if>
                            <xsl:if test='$CAN_Steer_Encoder = "true"'>
                                <ConfigParameter Property="SteerEncScale" SymbolAddress="CanEnc1Config.Scale"/>
                                <ConfigParameter Property="SteerEncOffset" SymbolAddress="CanEnc1Config.Offset"/>
                                <ConfigParameter Property="SteerEncMax" SymbolAddress="CanEnc1Config.EncMax"/>
                                <ConfigParameter Property="SteerEncGuardTimeout" SymbolAddress="RpdoGuardingTimeout.Rpdo3"/>
                            </xsl:if>
                            <xsl:if test='$Incr_Drive_Encoder = "true"'>
                                <ConfigParameter Property="DriveEncScale" SymbolAddress="Enc2Config.Scale"/>
                            </xsl:if>
                            <xsl:if test='$CAN_Drive_Encoder = "true"'>
                                <ConfigParameter Property="DriveEncScale" SymbolAddress="CanEnc2Config.Scale"/>
                                <ConfigParameter Property="DriveEncMax" SymbolAddress="CanEnc2Config.EncMax"/>
                                <ConfigParameter Property="DriveEncGuardTimeout" SymbolAddress="RpdoGuardingTimeout.Rpdo4"/>
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$AuxReg1Spd = "true"'>
                            <ConfigParameter Property="AuxRegulator1_FeedForward" SymbolAddress="Reg1ParamGroup0.FeedForward" />
                            <ConfigParameter Property="AuxRegulator1_Offset" SymbolAddress="Reg1ParamGroup0.Offset" />
                        </xsl:if>
                        <xsl:if test='$AuxReg1Base = "true"'>
                            <ConfigParameter Property="AuxRegulator1_P" SymbolAddress="Reg1ParamGroup0.P" />
                            <ConfigParameter Property="AuxRegulator1_I" SymbolAddress="Reg1ParamGroup0.I" />
                            <ConfigParameter Property="AuxRegulator1_ILimit" SymbolAddress="Reg1ParamGroup0.ILimit" />
                            <ConfigParameter Property="AuxRegulator1_D" SymbolAddress="Reg1ParamGroup0.D" />
                            <ConfigParameter Property="AuxRegulator1_PIDLimit" SymbolAddress="Reg1ParamGroup0.PIDLimit" />
                            <ConfigParameter Property="AuxRegulator1_OutOffset" SymbolAddress="Reg1ParamGroup0.OutOffset" />
                            <ConfigParameter Property="AuxRegulator1_OutLimit" SymbolAddress="Reg1ParamGroup0.OutLimit"/>
                            <ConfigParameter Property="AuxRegulator1_FailureDelay" SymbolAddress="Reg1ParamGroup0.FailureDelay" />
                            <ConfigParameter Property="AuxRegulator1_CheckOutHysteres" SymbolAddress="Reg1ParamGroup0.CheckOutHysteres" />
                        </xsl:if>
                        <xsl:if test='$AuxEnc1Base = "true"'>
                            <ConfigParameter Property="AuxEnc1Scale" SymbolAddress="Enc1Config.Scale" />
                            <xsl:if test='$AuxEnc1Spd = "false"' >
                                <ConfigParameter Property="AuxEnc1PositionPreset" SymbolAddress="Enc1.Position" />
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='$AuxEnc1Sync = "true"'>
                            <ConfigParameter Property="AuxEnc1Offset" SymbolAddress="Enc1Config.Offset" />
                            <ConfigParameter Property="AuxEnc1SyncEnable" SymbolAddress="Enc1Config.SyncEnable" />
                            <ConfigParameter Property="AuxEnc1SyncFilter" SymbolAddress="Enc1Config.SyncFilter" />
                            <ConfigParameter Property="AuxEnc1SyncEmergency" SymbolAddress="Enc1Config.SyncEmergency" />
                            <ConfigParameter Property="AuxEnc1SyncGateInput" SymbolAddress="Enc1Config.SyncGateInput"/>
                        </xsl:if>

                        <xsl:if test='$AuxReg2Spd = "true"'>
                            <ConfigParameter Property="AuxRegulator2_FeedForward" SymbolAddress="Reg2ParamGroup0.FeedForward" />
                            <ConfigParameter Property="AuxRegulator2_Offset" SymbolAddress="Reg2ParamGroup0.Offset" />
                        </xsl:if>
                        <xsl:if test='$AuxReg2Base = "true"'>
                            <ConfigParameter Property="AuxRegulator2_P" SymbolAddress="Reg2ParamGroup0.P" />
                            <ConfigParameter Property="AuxRegulator2_I" SymbolAddress="Reg2ParamGroup0.I" />
                            <ConfigParameter Property="AuxRegulator2_ILimit" SymbolAddress="Reg2ParamGroup0.ILimit" />
                            <ConfigParameter Property="AuxRegulator2_D" SymbolAddress="Reg2ParamGroup0.D" />
                            <ConfigParameter Property="AuxRegulator2_PIDLimit" SymbolAddress="Reg2ParamGroup0.PIDLimit" />
                            <ConfigParameter Property="AuxRegulator2_OutOffset" SymbolAddress="Reg2ParamGroup0.OutOffset" />
                            <ConfigParameter Property="AuxRegulator2_OutLimit" SymbolAddress="Reg2ParamGroup0.OutLimit"/>
                            <ConfigParameter Property="AuxRegulator2_FailureDelay" SymbolAddress="Reg2ParamGroup0.FailureDelay" />
                            <ConfigParameter Property="AuxRegulator2_CheckOutHysteres" SymbolAddress="Reg2ParamGroup0.CheckOutHysteres" />
                        </xsl:if>
                        <xsl:if test='$AuxEnc2Base = "true"'>
                            <ConfigParameter Property="AuxEnc2Scale" SymbolAddress="Enc2Config.Scale" />
                            <xsl:if test='$AuxEnc2Spd = "false"' >
                                <ConfigParameter Property="AuxEnc2PositionPreset" SymbolAddress="Enc2.Position" />
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='$AuxEnc2Sync = "true"'>
                            <ConfigParameter Property="AuxEnc2Offset" SymbolAddress="Enc2Config.Offset" />
                            <ConfigParameter Property="AuxEnc2SyncEnable" SymbolAddress="Enc2Config.SyncEnable" />
                            <ConfigParameter Property="AuxEnc2SyncFilter" SymbolAddress="Enc2Config.SyncFilter" />
                            <ConfigParameter Property="AuxEnc2SyncEmergency" SymbolAddress="Enc2Config.SyncEmergency" />
                            <ConfigParameter Property="AuxEnc2SyncGateInput" SymbolAddress="Enc2Config.SyncGateInput"/>
                        </xsl:if>

                        <xsl:if test='$SD_Controller = "true"'>
                            <ConfigParameter Property="FSA1Failure_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp7" />
                        </xsl:if>
                        <xsl:if test='$SD_Controller = "false"'>
                            <xsl:if test='$AuxReg1Base = "true"'>
                                <ConfigParameter Property="FSA1Failure_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp7" />
                            </xsl:if>
                            <xsl:if test='$AuxReg1Base = "false"'>
                                <ConfigParameter Property="DigitalInput7_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp7" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$SD_Controller = "true"'>
                            <ConfigParameter Property="FSA2Failure_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp8" />
                        </xsl:if>
                        <xsl:if test='$SD_Controller = "false"'>
                            <xsl:if test='$AuxReg2Base = "true"'>
                                <ConfigParameter Property="FSA2Failure_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp8" />
                            </xsl:if>
                            <xsl:if test='$AuxReg2Base = "false"'>
                                <ConfigParameter Property="DigitalInput8_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp8" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$UseSpotAntennas = "false"'>
                            <ConfigParameter Property="DigitalInput9_Polarity" SymbolAddress="DigInputPolarity.DigInp_9_12.DigInp9" />
                            <ConfigParameter Property="DigitalInput10_Polarity" SymbolAddress="DigInputPolarity.DigInp_9_12.DigInp10" />
                        </xsl:if>

                        <ConfigParameter Property="DigitalInput11_Polarity" SymbolAddress="DigInputPolarity.DigInp_9_12.DigInp11" />
                        <ConfigParameter Property="DigitalInput12_Polarity" SymbolAddress="DigInputPolarity.DigInp_9_12.DigInp12" />

                        <xsl:if test='$Incr_Steer_Encoder = "false"'>
                            <xsl:if test='$AuxEnc1Sync = "false"'>
                                <ConfigParameter Property="DigitalInput3_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp3" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$AuxEnc2Sync = "false"'>
                            <ConfigParameter Property="DigitalInput6_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp6" />
                        </xsl:if>

                        <xsl:if test='$Incr_Steer_Encoder = "false"'>
                            <xsl:if test='$AuxEnc1Base = "false"'>
                                <ConfigParameter Property="DigitalInput1_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp1" />
                                <ConfigParameter Property="DigitalInput2_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp2" />
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='$Incr_Drive_Encoder = "false"'>
                            <xsl:if test='$AuxEnc2Base = "false"'>
                                <ConfigParameter Property="DigitalInput4_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp4" />
                                <ConfigParameter Property="DigitalInput5_Polarity" SymbolAddress="DigInputPolarity.DigInp_1_8.DigInp5" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$SD_Controller = "false"'>
                            <xsl:if test='$AuxReg1Base = "false"'>
                                <ConfigParameter Property="DigitalOutput13_Polarity" SymbolAddress="DigOutputPolarity.DigOut_9_16.DigOut13" />
                                <ConfigParameter Property="DigitalOutput14_Polarity" SymbolAddress="DigOutputPolarity.DigOut_9_16.DigOut14" />
                            </xsl:if>
                            <xsl:if test='$AuxReg2Base = "false"'>
                                <ConfigParameter Property="DigitalOutput15_Polarity" SymbolAddress="DigOutputPolarity.DigOut_9_16.DigOut15" />
                                <ConfigParameter Property="DigitalOutput16_Polarity" SymbolAddress="DigOutputPolarity.DigOut_9_16.DigOut16" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$SD_Controller = "false"'>
                            <xsl:if test='$AuxReg1Base = "false"'>
                                <ConfigParameter Property="DigitalOutput7_Polarity" SymbolAddress="DigOutputPolarity.DigOut_1_8.DigOut7" />
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='$Incr_Drive_Encoder = "false"'>
                            <xsl:if test='$AuxReg2Base = "false"'>
                                <ConfigParameter Property="DigitalOutput8_Polarity" SymbolAddress="DigOutputPolarity.DigOut_1_8.DigOut8" />
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$UseAuxPWMOutput = "false"'>
                            <ConfigParameter Property="DigitalOutput9_Polarity" SymbolAddress="DigOutputPolarity.DigOut_9_16.DigOut9" />
                        </xsl:if>
                        <xsl:if test='$UseAuxPWMOutput = "false"'>
                            <ConfigParameter Property="DigitalOutput10_Polarity" SymbolAddress="DigOutputPolarity.DigOut_9_16.DigOut10" />
                        </xsl:if>
                        <ConfigParameter Property="DigitalOutput2_Polarity" SymbolAddress="DigOutputPolarity.DigOut_1_8.DigOut2" />
                        <xsl:if test='$UseAuxPWMOutput = "false"'>
                            <ConfigParameter Property="DigitalOutput11_Polarity" SymbolAddress="DigOutputPolarity.DigOut_9_16.DigOut11" />
                        </xsl:if>
                        <ConfigParameter Property="DigitalOutput12_Polarity" SymbolAddress="DigOutputPolarity.DigOut_9_16.DigOut12" />
                        <ConfigParameter Property="DigitalOutput3_Polarity" SymbolAddress="DigOutputPolarity.DigOut_1_8.DigOut3" />
                        <ConfigParameter Property="DigitalOutput4_Polarity" SymbolAddress="DigOutputPolarity.DigOut_1_8.DigOut4" />
                        <ConfigParameter Property="DigitalOutput5_Polarity" SymbolAddress="DigOutputPolarity.DigOut_1_8.DigOut5" />
                        <ConfigParameter Property="DigitalOutput6_Polarity" SymbolAddress="DigOutputPolarity.DigOut_1_8.DigOut6" />
                        <ConfigParameter Property="AnInp1_Scale" SymbolAddress="AnInputScale.AnInp1" />
                        <ConfigParameter Property="AnInp2_Scale" SymbolAddress="AnInputScale.AnInp2" />
                        <ConfigParameter Property="AnInp1_Delta" SymbolAddress="AnInputDelta.AnInp1" />
                        <ConfigParameter Property="AnInp2_Delta" SymbolAddress="AnInputDelta.AnInp2" />

                        <xsl:if test='$UseSpotAntennas = "false"'>
                            <ConfigParameter Property="AnInp3_Scale" SymbolAddress="AnInputScale.AnInp3" />
                            <ConfigParameter Property="AnInp4_Scale" SymbolAddress="AnInputScale.AnInp4" />
                            <ConfigParameter Property="AnInp3_Delta" SymbolAddress="AnInputDelta.AnInp3" />
                            <ConfigParameter Property="AnInp4_Delta" SymbolAddress="AnInputDelta.AnInp4" />

                        </xsl:if>
                        <ConfigParameter Property="AnInp5_Scale" SymbolAddress="AnInputScale.AnInp5" />
                        <ConfigParameter Property="AnInp6_Scale" SymbolAddress="AnInputScale.AnInp6" />
                        <ConfigParameter Property="AnInp7_Scale" SymbolAddress="AnInputScale.AnInp7" />
                        <ConfigParameter Property="AnInp8_Scale" SymbolAddress="AnInputScale.AnInp8" />
                        <ConfigParameter Property="AnInp9_Scale" SymbolAddress="AnInputScale.AnInp9" />
                        <ConfigParameter Property="AnInp10_Scale" SymbolAddress="AnInputScale.AnInp10" />
                        <ConfigParameter Property="AnInp11_Scale" SymbolAddress="AnInputScale.AnInp11" />
                        <ConfigParameter Property="AnInp5_Delta" SymbolAddress="AnInputDelta.AnInp5" />
                        <ConfigParameter Property="AnInp6_Delta" SymbolAddress="AnInputDelta.AnInp6" />
                        <ConfigParameter Property="AnInp7_Delta" SymbolAddress="AnInputDelta.AnInp7" />
                        <ConfigParameter Property="AnInp8_Delta" SymbolAddress="AnInputDelta.AnInp8" />
                        <ConfigParameter Property="AnInp9_Delta" SymbolAddress="AnInputDelta.AnInp9" />
                        <ConfigParameter Property="AnInp10_Delta" SymbolAddress="AnInputDelta.AnInp10" />
                        <ConfigParameter Property="AnInp11_Delta" SymbolAddress="AnInputDelta.AnInp11" />

                        <ConfigParameter Property="AnInp1_Offset" SymbolAddress="AnInputOffset.AnInp1" />
                        <ConfigParameter Property="AnInp2_Offset" SymbolAddress="AnInputOffset.AnInp2" />
                        <xsl:if test='$UseSpotAntennas = "false"'>
                            <ConfigParameter Property="AnInp3_Offset" SymbolAddress="AnInputOffset.AnInp3" />
                            <ConfigParameter Property="AnInp4_Offset" SymbolAddress="AnInputOffset.AnInp4" />
                        </xsl:if>
                        <ConfigParameter Property="AnInp5_Offset" SymbolAddress="AnInputOffset.AnInp5" />
                        <ConfigParameter Property="AnInp6_Offset" SymbolAddress="AnInputOffset.AnInp6" />
                        <ConfigParameter Property="AnInp7_Offset" SymbolAddress="AnInputOffset.AnInp7" />
                        <ConfigParameter Property="AnInp8_Offset" SymbolAddress="AnInputOffset.AnInp8" />
                        <ConfigParameter Property="AnInp9_Offset" SymbolAddress="AnInputOffset.AnInp9" />
                        <ConfigParameter Property="AnInp10_Offset" SymbolAddress="AnInputOffset.AnInp10" />
                        <ConfigParameter Property="AnInp11_Offset" SymbolAddress="AnInputOffset.AnInp11" />

                        <xsl:if test='$UseSpotAntennas = "true"'>
                            <ConfigParameter Property="Spot1AntennaKnee" SymbolAddress="Spot1Config.AntennaKnee" />
                            <ConfigParameter Property="Spot2AntennaKnee" SymbolAddress="Spot2Config.AntennaKnee" />
                        </xsl:if>
                        
                        <ConfigParameter Property="GroundFaultEvent" SymbolAddress="GroundFault.Emergency" />
                    </ConfigParameters>

                    <TxPdos>
                        <xsl:if test="$TransmissionType = 1">
                            <TxPdo CobId="{384+$NodeId}" ReceiveTimeout="200" TransmissionType="{$TransmissionType}" PdoType="User">
                                <PdoMap>
                                    <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput1" SymbolAddress="DigInput.DigInp_1_8.DigInp1" Length="1"/>
                                        <PdoMapParameter Property="Reserved_DigitalInput2" SymbolAddress="DigInput.DigInp_1_8.DigInp2" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$Incr_Steer_Encoder = "false"'>
                                        <xsl:if test='$AuxEnc1Base = "true"'>
                                            <PdoMapParameter Property="Reserved_DigitalInput1" SymbolAddress="DigInput.DigInp_1_8.DigInp1" Length="1"/>
                                            <PdoMapParameter Property="Reserved_DigitalInput2" SymbolAddress="DigInput.DigInp_1_8.DigInp2" Length="1"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxEnc1Base = "false"'>
                                            <PdoMapParameter Property="DigitalInput1" SymbolAddress="DigInput.DigInp_1_8.DigInp1" Length="1"/>
                                            <PdoMapParameter Property="DigitalInput2" SymbolAddress="DigInput.DigInp_1_8.DigInp2" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>

                                    <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput3" SymbolAddress="DigInput.DigInp_1_8.DigInp3" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$Incr_Steer_Encoder = "false"'>
                                        <xsl:if test='$AuxEnc1Sync = "false"'>
                                            <PdoMapParameter Property="DigitalInput3" SymbolAddress="DigInput.DigInp_1_8.DigInp3" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$AuxEnc1Sync = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput3" SymbolAddress="DigInput.DigInp_1_8.DigInp3" Length="1"/>
                                    </xsl:if>

                                    <xsl:if test='$Incr_Drive_Encoder = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput4" SymbolAddress="DigInput.DigInp_1_8.DigInp4" Length="1"/>
                                        <PdoMapParameter Property="Reserved_DigitalInput5" SymbolAddress="DigInput.DigInp_1_8.DigInp5" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$Incr_Drive_Encoder = "false"'>
                                        <xsl:if test='$AuxEnc2Base = "true"'>
                                            <PdoMapParameter Property="Reserved_DigitalInput4" SymbolAddress="DigInput.DigInp_1_8.DigInp4" Length="1"/>
                                            <PdoMapParameter Property="Reserved_DigitalInput5" SymbolAddress="DigInput.DigInp_1_8.DigInp5" Length="1"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxEnc2Base = "false"'>
                                            <PdoMapParameter Property="DigitalInput4" SymbolAddress="DigInput.DigInp_1_8.DigInp4" Length="1"/>
                                            <PdoMapParameter Property="DigitalInput5" SymbolAddress="DigInput.DigInp_1_8.DigInp5" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>

                                    <xsl:if test='$AuxEnc2Sync = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput6" SymbolAddress="DigInput.DigInp_1_8.DigInp6" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$AuxEnc2Sync = "false"'>
                                        <PdoMapParameter Property="DigitalInput6" SymbolAddress="DigInput.DigInp_1_8.DigInp6" Length="1"/>
                                    </xsl:if>

                                    <xsl:if test='$SD_Controller = "true"'>
                                        <PdoMapParameter Property="FSA1Failure" SymbolAddress="DigInput.DigInp_1_8.DigInp7" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$SD_Controller = "false"'>
                                        <xsl:if test='$AuxReg1Base = "true"'>
                                            <PdoMapParameter Property="FSA1Failure" SymbolAddress="DigInput.DigInp_1_8.DigInp7" Length="1"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxReg1Base = "false"'>
                                            <PdoMapParameter Property="DigitalInput7" SymbolAddress="DigInput.DigInp_1_8.DigInp7" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$SD_Controller = "true"'>
                                        <PdoMapParameter Property="FSA2Failure" SymbolAddress="DigInput.DigInp_1_8.DigInp8" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$SD_Controller = "false"'>
                                        <xsl:if test='$AuxReg2Base = "true"'>
                                            <PdoMapParameter Property="FSA2Failure" SymbolAddress="DigInput.DigInp_1_8.DigInp8" Length="1"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxReg2Base = "false"'>
                                            <PdoMapParameter Property="DigitalInput8" SymbolAddress="DigInput.DigInp_1_8.DigInp8" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$UseSpotAntennas = "true"'>
                                        <xsl:if test='$UseMagnetic = "true"'>
                                            <PdoMapParameter Property="SpotAntenna1Valid" SymbolAddress="DigInput.DigInp_9_12.DigInp9" Length="1"/>
                                            <PdoMapParameter Property="SpotAntenna2Valid" SymbolAddress="DigInput.DigInp_9_12.DigInp10" Length="1"/>
                                        </xsl:if>

                                        <xsl:if test='$UseMagnetic = "false"'>
                                            <PdoMapParameter Property="Reserved_DigitalInput9" SymbolAddress="DigInput.DigInp_9_12.DigInp9" Length="1"/>
                                            <PdoMapParameter Property="Reserved_DigitalInput10" SymbolAddress="DigInput.DigInp_9_12.DigInp10" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$UseSpotAntennas = "false"'>
                                        <PdoMapParameter Property="DigitalInput9" SymbolAddress="DigInput.DigInp_9_12.DigInp9" Length="1"/>
                                        <PdoMapParameter Property="DigitalInput10" SymbolAddress="DigInput.DigInp_9_12.DigInp10" Length="1"/>
                                    </xsl:if>
                                    <PdoMapParameter Property="DigitalInput11" SymbolAddress="DigInput.DigInp_9_12.DigInp11" Length="1"/>
                                    <PdoMapParameter Property="DigitalInput12" SymbolAddress="DigInput.DigInp_9_12.DigInp12" Length="1"/>

                                    <PdoMapParameter Property="" SymbolAddress="" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="" Length="1"/>

                                    <PdoMapParameter Property="AnalogInput5" SymbolAddress="AnInput.AnInp5" Length="16" />
                                    <PdoMapParameter Property="AnalogInput6" SymbolAddress="AnInput.AnInp6" Length="16" />
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>
                        <xsl:if test="$TransmissionType != 1">
                            <TxPdo CobId="{384+$NodeId}" TransmissionType="{$TransmissionType}" PdoType="User">
                                <PdoMap>
                                    <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput1" SymbolAddress="DigInput.DigInp_1_8.DigInp1" Length="1"/>
                                        <PdoMapParameter Property="Reserved_DigitalInput2" SymbolAddress="DigInput.DigInp_1_8.DigInp2" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$Incr_Steer_Encoder = "false"'>
                                        <xsl:if test='$AuxEnc1Base = "true"'>
                                            <PdoMapParameter Property="Reserved_DigitalInput1" SymbolAddress="DigInput.DigInp_1_8.DigInp1" Length="1"/>
                                            <PdoMapParameter Property="Reserved_DigitalInput2" SymbolAddress="DigInput.DigInp_1_8.DigInp2" Length="1"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxEnc1Base = "false"'>
                                            <PdoMapParameter Property="DigitalInput1" SymbolAddress="DigInput.DigInp_1_8.DigInp1" Length="1"/>
                                            <PdoMapParameter Property="DigitalInput2" SymbolAddress="DigInput.DigInp_1_8.DigInp2" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>

                                    <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput3" SymbolAddress="DigInput.DigInp_1_8.DigInp3" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$Incr_Steer_Encoder = "false"'>
                                        <xsl:if test='$AuxEnc1Sync = "false"'>
                                            <PdoMapParameter Property="DigitalInput3" SymbolAddress="DigInput.DigInp_1_8.DigInp3" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$AuxEnc1Sync = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput3" SymbolAddress="DigInput.DigInp_1_8.DigInp3" Length="1"/>
                                    </xsl:if>

                                    <xsl:if test='$Incr_Drive_Encoder = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput4" SymbolAddress="DigInput.DigInp_1_8.DigInp4" Length="1"/>
                                        <PdoMapParameter Property="Reserved_DigitalInput5" SymbolAddress="DigInput.DigInp_1_8.DigInp5" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$Incr_Drive_Encoder = "false"'>
                                        <xsl:if test='$AuxEnc2Base = "true"'>
                                            <PdoMapParameter Property="Reserved_DigitalInput4" SymbolAddress="DigInput.DigInp_1_8.DigInp4" Length="1"/>
                                            <PdoMapParameter Property="Reserved_DigitalInput5" SymbolAddress="DigInput.DigInp_1_8.DigInp5" Length="1"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxEnc2Base = "false"'>
                                            <PdoMapParameter Property="DigitalInput4" SymbolAddress="DigInput.DigInp_1_8.DigInp4" Length="1"/>
                                            <PdoMapParameter Property="DigitalInput5" SymbolAddress="DigInput.DigInp_1_8.DigInp5" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>

                                    <xsl:if test='$AuxEnc2Sync = "true"'>
                                        <PdoMapParameter Property="Reserved_DigitalInput6" SymbolAddress="DigInput.DigInp_1_8.DigInp6" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$AuxEnc2Sync = "false"'>
                                        <PdoMapParameter Property="DigitalInput6" SymbolAddress="DigInput.DigInp_1_8.DigInp6" Length="1"/>
                                    </xsl:if>

                                    <xsl:if test='$SD_Controller = "true"'>
                                        <PdoMapParameter Property="FSA1Failure" SymbolAddress="DigInput.DigInp_1_8.DigInp7" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$SD_Controller = "false"'>
                                        <xsl:if test='$AuxReg1Base = "true"'>
                                            <PdoMapParameter Property="FSA1Failure" SymbolAddress="DigInput.DigInp_1_8.DigInp7" Length="1"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxReg1Base = "false"'>
                                            <PdoMapParameter Property="DigitalInput7" SymbolAddress="DigInput.DigInp_1_8.DigInp7" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$SD_Controller = "true"'>
                                        <PdoMapParameter Property="FSA2Failure" SymbolAddress="DigInput.DigInp_1_8.DigInp8" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$SD_Controller = "false"'>
                                        <xsl:if test='$AuxReg2Base = "true"'>
                                            <PdoMapParameter Property="FSA2Failure" SymbolAddress="DigInput.DigInp_1_8.DigInp8" Length="1"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxReg2Base = "false"'>
                                            <PdoMapParameter Property="DigitalInput8" SymbolAddress="DigInput.DigInp_1_8.DigInp8" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$UseSpotAntennas = "true"'>
                                        <xsl:if test='$UseMagnetic = "true"'>
                                            <PdoMapParameter Property="SpotAntenna1Valid" SymbolAddress="DigInput.DigInp_9_12.DigInp9" Length="1"/>
                                            <PdoMapParameter Property="SpotAntenna2Valid" SymbolAddress="DigInput.DigInp_9_12.DigInp10" Length="1"/>
                                        </xsl:if>

                                        <xsl:if test='$UseMagnetic = "false"'>
                                            <PdoMapParameter Property="Reserved_DigitalInput9" SymbolAddress="DigInput.DigInp_9_12.DigInp9" Length="1"/>
                                            <PdoMapParameter Property="Reserved_DigitalInput10" SymbolAddress="DigInput.DigInp_9_12.DigInp10" Length="1"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$UseSpotAntennas = "false"'>
                                        <PdoMapParameter Property="DigitalInput9" SymbolAddress="DigInput.DigInp_9_12.DigInp9" Length="1"/>
                                        <PdoMapParameter Property="DigitalInput10" SymbolAddress="DigInput.DigInp_9_12.DigInp10" Length="1"/>
                                    </xsl:if>
                                    <PdoMapParameter Property="DigitalInput11" SymbolAddress="DigInput.DigInp_9_12.DigInp11" Length="1"/>
                                    <PdoMapParameter Property="DigitalInput12" SymbolAddress="DigInput.DigInp_9_12.DigInp12" Length="1"/>

                                    <PdoMapParameter Property="" SymbolAddress="" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="" Length="1"/>

                                    <PdoMapParameter Property="AnalogInput5" SymbolAddress="AnInput.AnInp5" Length="16" />
                                    <PdoMapParameter Property="AnalogInput6" SymbolAddress="AnInput.AnInp6" Length="16" />
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>

                        <xsl:if test="$TransmissionType = 1">
                            <TxPdo CobId="{640+$NodeId}" ReceiveTimeout="200" TransmissionType="{$TransmissionType}" PdoType="User">
                                <PdoMap>
                                    <PdoMapParameter Property="AnalogInput1" SymbolAddress="AnInput.AnInp1" Length="16" />
                                    <PdoMapParameter Property="AnalogInput2" SymbolAddress="AnInput.AnInp2" Length="16" />

                                    <xsl:if test='$UseSpotAntennas = "true"'>
                                        <xsl:if test='$UseMagnetic = "false"'>
                                            <PdoMapParameter Property="Reserved_AnInp3" SymbolAddress="AnInput.AnInp3" Length="16" />
                                            <PdoMapParameter Property="Reserved_AnInp4" SymbolAddress="AnInput.AnInp4" Length="16" />
                                        </xsl:if>
                                        <xsl:if test='$UseMagnetic = "true"'>
                                            <PdoMapParameter Property="SpotAntenna1Offset" SymbolAddress="AnInput.AnInp3" Length="16" />
                                            <PdoMapParameter Property="SpotAntenna2Offset" SymbolAddress="AnInput.AnInp4" Length="16" />
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$UseSpotAntennas = "false"'>
                                        <PdoMapParameter Property="AnalogInput3" SymbolAddress="AnInput.AnInp3" Length="16" />
                                        <PdoMapParameter Property="AnalogInput4" SymbolAddress="AnInput.AnInp4" Length="16" />
                                    </xsl:if>
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>
                        <xsl:if test="$TransmissionType != 1">
                            <TxPdo CobId="{640+$NodeId}" TransmissionType="{$TransmissionType}" PdoType="User">
                                <PdoMap>
                                    <PdoMapParameter Property="AnalogInput1" SymbolAddress="AnInput.AnInp1" Length="16" />
                                    <PdoMapParameter Property="AnalogInput2" SymbolAddress="AnInput.AnInp2" Length="16" />

                                    <xsl:if test='$UseSpotAntennas = "true"'>
                                        <xsl:if test='$UseMagnetic = "false"'>
                                            <PdoMapParameter Property="Reserved_AnInp3" SymbolAddress="AnInput.AnInp3" Length="16" />
                                            <PdoMapParameter Property="Reserved_AnInp4" SymbolAddress="AnInput.AnInp4" Length="16" />
                                        </xsl:if>
                                        <xsl:if test='$UseMagnetic = "true"'>
                                            <PdoMapParameter Property="SpotAntenna1Offset" SymbolAddress="AnInput.AnInp3" Length="16" />
                                            <PdoMapParameter Property="SpotAntenna2Offset" SymbolAddress="AnInput.AnInp4" Length="16" />
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test='$UseSpotAntennas = "false"'>
                                        <PdoMapParameter Property="AnalogInput3" SymbolAddress="AnInput.AnInp3" Length="16" />
                                        <PdoMapParameter Property="AnalogInput4" SymbolAddress="AnInput.AnInp4" Length="16" />
                                    </xsl:if>
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>

                        <xsl:if test='$SD_Controller = "true"'>
                            <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                <TxPdo CobId="{896+$NodeId}" ReceiveTimeout="200" TransmissionType="1" PdoType="Background">
                                    <PdoMap>
                                        <PdoMapParameter Property="Enc1Angle" SymbolAddress="Enc1.Position" Length="16" />
                                        <PdoMapParameter Property="Enc1AngularSpeed" SymbolAddress="Enc1.Speed" Length="16" />
                                        <PdoMapParameter Property="Enc1SyncValid" SymbolAddress="Enc1.Status.SyncValid" Length="1" />
                                        <PdoMapParameter Property="Enc1Warning" SymbolAddress="Enc1.Status.Warning" Length="1" />
                                        <PdoMapParameter Property="" SymbolAddress="" Length="14"/>
                                    </PdoMap>
                                </TxPdo>
                            </xsl:if>
                            <xsl:if test='$CAN_Steer_Encoder = "true"'>
                                <TxPdo CobId="{928+$NodeId}" ReceiveTimeout="200" TransmissionType="1" PdoType="Background">
                                    <PdoMap>
                                        <PdoMapParameter Property="Enc1Angle" SymbolAddress="CanEnc1.Position" Length="16" />
                                        <PdoMapParameter Property="Enc1AngularSpeed" SymbolAddress="CanEnc1.Speed" Length="16" />
                                        <xsl:if test='$CAN_Drive_Encoder = "true"'>
                                            <PdoMapParameter Property="Enc2Dist" SymbolAddress="CanEnc2.Position" Length="16"/>
                                            <PdoMapParameter Property="Enc2Speed" SymbolAddress="CanEnc2.Speed" Length="16"/>
                                        </xsl:if>
                                        <xsl:if test='$CAN_Drive_Encoder = "false"'>
                                            <PdoMapParameter Property="" SymbolAddress="CanEnc2.Position" Length="16"/>
                                            <PdoMapParameter Property="" SymbolAddress="CanEnc2.Speed" Length="16"/>
                                        </xsl:if>
                                    </PdoMap>
                                </TxPdo>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test='$AuxEnc1Base = "true"'>
                            <TxPdo CobId="{896+$NodeId}" ReceiveTimeout="200" TransmissionType="1" PdoType="Background">
                                <PdoMap>
                                    <PdoMapParameter Property="AuxEnc1Position" SymbolAddress="Enc1.Position" Length="16" />
                                    <PdoMapParameter Property="AuxEnc1Speed" SymbolAddress="Enc1.Speed" Length="16" />
                                    <xsl:if test='$AuxEnc1Sync = "true"'>
                                        <PdoMapParameter Property="AuxEnc1SyncValid" SymbolAddress="Enc1.Status.SyncValid" Length="1" />
                                        <PdoMapParameter Property="AuxEnc1Warning" SymbolAddress="Enc1.Status.Warning" Length="1" />
                                    </xsl:if>
                                    <xsl:if test='$AuxEnc1Sync = "false"'>
                                        <PdoMapParameter Property="" SymbolAddress="Enc1.Status.SyncValid" Length="1" />
                                        <PdoMapParameter Property="" SymbolAddress="Enc1.Status.Warning" Length="1" />
                                    </xsl:if>
                                    <PdoMapParameter Property="" SymbolAddress="" Length="14"/>
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>

                        <xsl:if test='$SD_Controller = "true"'>
                            <xsl:if test='$Incr_Drive_Encoder = "true"'>
                                <TxPdo CobId="{1152+$NodeId}" ReceiveTimeout="200" TransmissionType="1" PdoType="Background">
                                    <PdoMap>
                                        <PdoMapParameter Property="Enc2Dist" SymbolAddress="Enc2.Position" Length="16"/>
                                        <PdoMapParameter Property="Enc2Speed" SymbolAddress="Enc2.Speed" Length="16"/>
                                        <PdoMapParameter Property="" SymbolAddress="Enc2.Status.SyncValid" Length="1"/>
                                        <PdoMapParameter Property="" SymbolAddress="Enc2.Status.Warning" Length="1"/>
                                        <PdoMapParameter Property="" SymbolAddress="" Length="14"/>
                                    </PdoMap>
                                </TxPdo>
                            </xsl:if>
                        </xsl:if>

                        <xsl:if test='$AuxEnc2Base = "true"'>
                            <TxPdo CobId="{1152+$NodeId}" ReceiveTimeout="200" TransmissionType="1" PdoType="Background">
                                <PdoMap>
                                    <PdoMapParameter Property="AuxEnc2Position" SymbolAddress="Enc2.Position" Length="16" />
                                    <PdoMapParameter Property="AuxEnc2Speed" SymbolAddress="Enc2.Speed" Length="16" />
                                    <xsl:if test='$AuxEnc2Sync = "true"'>
                                        <PdoMapParameter Property="AuxEnc2SyncValid" SymbolAddress="Enc2.Status.SyncValid" Length="1" />
                                        <PdoMapParameter Property="AuxEnc2Warning" SymbolAddress="Enc2.Status.Warning" Length="1" />
                                    </xsl:if>
                                    <xsl:if test='$AuxEnc2Sync = "false"'>
                                        <PdoMapParameter Property="" SymbolAddress="Enc2.Status.SyncValid" Length="1" />
                                        <PdoMapParameter Property="" SymbolAddress="Enc2.Status.Warning" Length="1" />
                                    </xsl:if>
                                    <PdoMapParameter Property="" SymbolAddress="" Length="14"/>
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>

                        <xsl:if test='$UseSpotAntennas = "true"'>
                            <TxPdo CobId="{416+$NodeId}" TransmissionType="0" PdoType="Background">
                                <PdoMap>
                                    <PdoMapParameter Property="Spot1Offset" SymbolAddress="Spot1.Offset" Length="16" />
                                    <PdoMapParameter Property="Spot1StartTime" SymbolAddress="Spot1.StartTime" Length="16" />
                                    <PdoMapParameter Property="Spot1StopTime" SymbolAddress="Spot1.StopTime" Length="16" />
                                </PdoMap>
                            </TxPdo>

                            <TxPdo CobId="{672+$NodeId}" TransmissionType="0" PdoType="Background">
                                <PdoMap>
                                    <PdoMapParameter Property="Spot2Offset" SymbolAddress="Spot2.Offset" Length="16" />
                                    <PdoMapParameter Property="Spot2StartTime" SymbolAddress="Spot2.StartTime" Length="16" />
                                    <PdoMapParameter Property="Spot2StopTime" SymbolAddress="Spot2.StopTime" Length="16" />
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>

                        <xsl:if test='$UseEdgeDetectDigInp = "true"'>
                            <TxPdo CobId="{448+$NodeId}" TransmissionType="0" PdoType="Background">
                                <PdoMap>
                                    <xsl:if test='$NumberOfEdgeDetectDigInp = 1'>
                                        <PdoMapParameter Property="RisingEdge1" SymbolAddress="DigInpEdgeRuntime1.FirstDigInpRise" Length="16" />
                                        <PdoMapParameter Property="FallingEdge1" SymbolAddress="DigInpEdgeRuntime1.FirstDigInpFall" Length="16" />
                                    </xsl:if>
                                    <xsl:if test='$NumberOfEdgeDetectDigInp >= 2'>
                                        <PdoMapParameter Property="RisingEdge1" SymbolAddress="DigInpEdgeRuntime1.FirstDigInpRise" Length="16" />
                                        <PdoMapParameter Property="FallingEdge1" SymbolAddress="DigInpEdgeRuntime1.FirstDigInpFall" Length="16" />
                                        <PdoMapParameter Property="RisingEdge2" SymbolAddress="DigInpEdgeRuntime1.SecondDigInpRise" Length="16" />
                                        <PdoMapParameter Property="FallingEdge2" SymbolAddress="DigInpEdgeRuntime1.SecondDigInpFall" Length="16" />
                                    </xsl:if>
                                </PdoMap>
                            </TxPdo>
                            <xsl:if test='$NumberOfEdgeDetectDigInp = 3'>
                                <TxPdo CobId="{704+$NodeId}" TransmissionType="0" PdoType="Background">
                                    <PdoMap>
                                        <PdoMapParameter Property="RisingEdge3" SymbolAddress="DigInpEdgeRuntime2.ThirdDigInpRise" Length="16" />
                                        <PdoMapParameter Property="FallingEdge3" SymbolAddress="DigInpEdgeRuntime2.ThirdDigInpFall" Length="16" />
                                    </PdoMap>
                                </TxPdo>
                            </xsl:if>
                            <xsl:if test='$NumberOfEdgeDetectDigInp = 4'>
                                <TxPdo CobId="{704+$NodeId}" TransmissionType="0" PdoType="Background">
                                    <PdoMap>
                                        <PdoMapParameter Property="RisingEdge3" SymbolAddress="DigInpEdgeRuntime2.ThirdDigInpRise" Length="16" />
                                        <PdoMapParameter Property="FallingEdge3" SymbolAddress="DigInpEdgeRuntime2.ThirdDigInpFall" Length="16" />
                                        <PdoMapParameter Property="RisingEdge4" SymbolAddress="DigInpEdgeRuntime2.FourthDigInpRise" Length="16" />
                                        <PdoMapParameter Property="FallingEdge4" SymbolAddress="DigInpEdgeRuntime2.FourthDigInpFall" Length="16" />
                                    </PdoMap>
                                </TxPdo>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="$TransmissionType = 1">
                            <TxPdo CobId="{960+$NodeId}" ReceiveTimeout="200" TransmissionType="{$TransmissionType}" PdoType="User">
                                <PdoMap>
                                    <PdoMapParameter Property="AnalogInput7" SymbolAddress="AnInput.AnInp7" Length="16" />
                                    <PdoMapParameter Property="AnalogInput8" SymbolAddress="AnInput.AnInp8" Length="16" />
                                    <PdoMapParameter Property="AnalogInput9" SymbolAddress="AnInput.AnInp9" Length="16" />
                                    <PdoMapParameter Property="AnalogInput10" SymbolAddress="AnInput.AnInp10" Length="16" />
                                </PdoMap>
                            </TxPdo>
                            <TxPdo CobId="{1216+$NodeId}" ReceiveTimeout="200" TransmissionType="{$TransmissionType}" PdoType="User">
                                <PdoMap>
                                    <PdoMapParameter Property="AnalogInput11" SymbolAddress="AnInput.AnInp11" Length="16" />
                                    <PdoMapParameter Property="" SymbolAddress="" Length="48" />
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>
                        <xsl:if test="$TransmissionType != 1">
                            <TxPdo CobId="{960+$NodeId}" TransmissionType="{$TransmissionType}" PdoType="User">
                                <PdoMap>
                                    <PdoMapParameter Property="AnalogInput7" SymbolAddress="AnInput.AnInp7" Length="16" />
                                    <PdoMapParameter Property="AnalogInput8" SymbolAddress="AnInput.AnInp8" Length="16" />
                                    <PdoMapParameter Property="AnalogInput9" SymbolAddress="AnInput.AnInp9" Length="16" />
                                    <PdoMapParameter Property="AnalogInput10" SymbolAddress="AnInput.AnInp10" Length="16" />
                                </PdoMap>
                            </TxPdo>
                            <TxPdo CobId="{1216+$NodeId}" TransmissionType="{$TransmissionType}" PdoType="User">
                                <PdoMap>
                                    <PdoMapParameter Property="AnalogInput11" SymbolAddress="AnInput.AnInp11" Length="16" />
                                    <PdoMapParameter Property="" SymbolAddress="" Length="48" />
                                </PdoMap>
                            </TxPdo>
                        </xsl:if>
                        <TxPdo CobId="{1184+$NodeId}" TransmissionType="1" PdoType="Background">
                            <PdoMap>
                                <PdoMapParameter Property="Reg1Output" SymbolAddress="Reg1.OutValue" Length="16"/>
                                <PdoMapParameter Property="Reg2Output" SymbolAddress="Reg2.OutValue" Length="16"/>
                            </PdoMap>
                        </TxPdo>
                    </TxPdos>

                    <RxPdos>
                        <RxPdo CobId="{512+$NodeId}" TransmissionType="{$TransmissionType}" PdoType="User">
                            <PdoMap>
                                <PdoMapParameter Property="AllOK_DigitalOutput1" SymbolAddress="DigOutput.DigOut_1_8.DigOut1" Length="1"/>
                                <PdoMapParameter Property="DigitalOutput2" SymbolAddress="DigOutput.DigOut_1_8.DigOut2" Length="1"/>
                                <PdoMapParameter Property="DigitalOutput3" SymbolAddress="DigOutput.DigOut_1_8.DigOut3" Length="1"/>
                                <PdoMapParameter Property="DigitalOutput4" SymbolAddress="DigOutput.DigOut_1_8.DigOut4" Length="1"/>
                                <PdoMapParameter Property="DigitalOutput5" SymbolAddress="DigOutput.DigOut_1_8.DigOut5" Length="1"/>
                                <PdoMapParameter Property="DigitalOutput6" SymbolAddress="DigOutput.DigOut_1_8.DigOut6" Length="1"/>

                                <xsl:if test='$SD_Controller = "true"'>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_1_8.DigOut7" Length="1"/>
                                </xsl:if>
                                <xsl:if test='$SD_Controller = "false"'>
                                    <xsl:if test='$AuxReg1Base = "false"'>
                                        <PdoMapParameter Property="DigitalOutput7" SymbolAddress="DigOutput.DigOut_1_8.DigOut7" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$AuxReg1Base = "true"'>
                                        <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_1_8.DigOut7" Length="1"/>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test='$Incr_Drive_Encoder = "true"'>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_1_8.DigOut8" Length="1"/>
                                </xsl:if>
                                <xsl:if test='$Incr_Drive_Encoder = "false"'>
                                    <xsl:if test='$AuxReg2Base = "false"'>
                                        <PdoMapParameter Property="DigitalOutput8" SymbolAddress="DigOutput.DigOut_1_8.DigOut8" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$AuxReg2Base = "true"'>
                                        <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_1_8.DigOut8" Length="1"/>
                                    </xsl:if>
                                </xsl:if>

                                <xsl:if test='$UseAuxPWMOutput = "true"'>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut9" Length="1"/>
                                </xsl:if>
                                <xsl:if test='$UseAuxPWMOutput = "false"'>
                                    <PdoMapParameter Property="DigitalOutput9" SymbolAddress="DigOutput.DigOut_9_16.DigOut9" Length="1"/>
                                </xsl:if>

                                <xsl:if test='$UseAuxPWMOutput = "true"'>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut10" Length="1"/>
                                </xsl:if>
                                <xsl:if test='$UseAuxPWMOutput = "false"'>
                                    <PdoMapParameter Property="DigitalOutput10" SymbolAddress="DigOutput.DigOut_9_16.DigOut10" Length="1"/>
                                </xsl:if>

                                <xsl:if test='$UseAuxPWMOutput = "true"'>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut11" Length="1"/>
                                </xsl:if>
                                <xsl:if test='$UseAuxPWMOutput = "false"'>
                                    <PdoMapParameter Property="DigitalOutput11" SymbolAddress="DigOutput.DigOut_9_16.DigOut11" Length="1"/>
                                </xsl:if>

                                <PdoMapParameter Property="DigitalOutput12" SymbolAddress="DigOutput.DigOut_9_16.DigOut12" Length="1"/>

                                <xsl:if test='$SD_Controller = "true"'>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut13" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut14" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut15" Length="1"/>
                                    <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut16" Length="1"/>
                                </xsl:if>
                                <xsl:if test='$SD_Controller = "false"'>
                                    <xsl:if test='$AuxReg1Base = "false"'>
                                        <PdoMapParameter Property="DigitalOutput13" SymbolAddress="DigOutput.DigOut_9_16.DigOut13" Length="1"/>
                                        <PdoMapParameter Property="DigitalOutput14" SymbolAddress="DigOutput.DigOut_9_16.DigOut14" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$AuxReg1Base = "true"'>
                                        <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut13" Length="1"/>
                                        <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut14" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$AuxReg2Base = "false"'>
                                        <PdoMapParameter Property="DigitalOutput15" SymbolAddress="DigOutput.DigOut_9_16.DigOut15" Length="1"/>
                                        <PdoMapParameter Property="DigitalOutput16" SymbolAddress="DigOutput.DigOut_9_16.DigOut16" Length="1"/>
                                    </xsl:if>
                                    <xsl:if test='$AuxReg2Base = "true"'>
                                        <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut15" Length="1"/>
                                        <PdoMapParameter Property="" SymbolAddress="DigOutput.DigOut_9_16.DigOut16" Length="1"/>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test='$UseAuxPWMOutput = "true"'>
                                    <PdoMapParameter Property="PWMOutput1" SymbolAddress="AnOutput.AnOut1" Length="16" />
                                    <PdoMapParameter Property="PWMOutput2" SymbolAddress="AnOutput.AnOut2" Length="16" />
                                    <PdoMapParameter Property="PWMOutput3" SymbolAddress="AnOutput.AnOut3" Length="16" />
                                </xsl:if>
                                <xsl:if test='$UseAuxPWMOutput = "false"'>
                                    <PdoMapParameter Property="" SymbolAddress="AnOutput.AnOut1" Length="16" />
                                    <PdoMapParameter Property="" SymbolAddress="AnOutput.AnOut2" Length="16" />
                                    <PdoMapParameter Property="" SymbolAddress="AnOutput.AnOut3" Length="16" />
                                </xsl:if>
                            </PdoMap>
                        </RxPdo>

                        <xsl:if test='($SD_Controller = "true" or $AuxReg1Base = "true" or $AuxReg2Base = "true")'>
                            <RxPdo CobId="{768+$NodeId}" TransmissionType="1" PdoType="Background">
                                <PdoMap>
                                    <xsl:if test='$SD_Controller = "true"'>
                                        <PdoMapParameter Property="SetAngle" SymbolAddress="Reg1.SetValue" Length="16" />
                                        <PdoMapParameter Property="SteerEnable" SymbolAddress="Reg1.Enable" Length="1" />
                                        <PdoMapParameter Property="" SymbolAddress="" Length="7"/>
                                        <PdoMapParameter Property="SetSpeed" SymbolAddress="Reg2.SetValue" Length="16" />
                                        <PdoMapParameter Property="DriveEnable" SymbolAddress="Reg2.Enable" Length="1" />
                                        <PdoMapParameter Property="" SymbolAddress="" Length="7"/>
                                    </xsl:if>
                                    <xsl:if test='$SD_Controller = "false"'>
                                        <xsl:if test='$AuxReg1Base = "false"'>
                                            <PdoMapParameter Property="" SymbolAddress="Reg1.SetValue" Length="16" />
                                            <PdoMapParameter Property="" SymbolAddress="Reg1.Enable" Length="1" />
                                            <PdoMapParameter Property="" SymbolAddress="" Length="7"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxReg1Base = "true"'>
                                            <PdoMapParameter Property="AuxReg1SetValue" SymbolAddress="Reg1.SetValue" Length="16" />
                                            <PdoMapParameter Property="AuxReg1Enable" SymbolAddress="Reg1.Enable" Length="1" />
                                            <PdoMapParameter Property="" SymbolAddress="" Length="7"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxReg2Base = "false"'>
                                            <PdoMapParameter Property="" SymbolAddress="Reg2.SetValue" Length="16" />
                                            <PdoMapParameter Property="" SymbolAddress="Reg2.Enable" Length="1" />
                                            <PdoMapParameter Property="" SymbolAddress="" Length="7"/>
                                        </xsl:if>
                                        <xsl:if test='$AuxReg2Base = "true"'>
                                            <PdoMapParameter Property="AuxReg2SetValue" SymbolAddress="Reg2.SetValue" Length="16" />
                                            <PdoMapParameter Property="AuxReg2Enable" SymbolAddress="Reg2.Enable" Length="1" />
                                            <PdoMapParameter Property="" SymbolAddress="" Length="7"/>
                                        </xsl:if>
                                    </xsl:if>
                                    <PdoMapParameter Property="" SymbolAddress="RtDigOutputState" Length="8" />
                                </PdoMap>
                            </RxPdo>
                        </xsl:if>
                    </RxPdos>

                    <ComponentSubType Name="{$HelpDeviceName}"
                        BaseType="GenericCanDevice">
                        <Interfaces>
                            <Interface Name="SDIO"/>
                        </Interfaces>

                        <Properties>
                        <!--  First, Configuration Data Properties for Regulators and Encoders  -->
                            <xsl:if test='$SD_Controller = "true"'>
                                <Property SymbolName="SteerRegP"
                                    PublicName="Steering Regulator P Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Steering Regulator P Gain"/>

                                <Property SymbolName="SteerRegI"
                                    PublicName="Steering Regulator I Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Steering Regulator I Gain"/>

                                <Property SymbolName="SteerRegILimit"
                                    PublicName="Steering Regulator I Gain Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="10000" Min="0" Max="32767"
                                    ParameterClass="Config"
                                    Remark="Steering Regulator I Gain Limit"/>

                                <Property SymbolName="SteerRegD"
                                    PublicName="Steering Regulator D Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Steering Regulator D Gain"/>

                                <Property SymbolName="SteerRegPIDLimit"
                                    PublicName="Steering Reg PID Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Max="32767"
                                    Unit="mV"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Limits the effect of feedback on the steering regulator.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="SteerRegOutOffset"
                                    PublicName="Steer Regulator Out Offset"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Min="-32767"
                                    Max="32767"
                                    Unit="mV"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Output offset for the steering regulator.
This offset is added to the regulator output after the PID regulation.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="SteerRegOutLimit"
                                    PublicName="Steering Regulator Out Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Max="32767"
                                    Unit="mV"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Total output limit of the steering regulator.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="SteerRegFailureDelay"
                                    PublicName="Steering Regulator Failure Delay"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Default="1000"
                                    ParameterClass="Config"
                                    Remark="Delay before safe state in absence of correct feedback movement"/>

                                <Property SymbolName="SteerRegCheckOutHysteres"
                                    PublicName="Steering Regulator Check Output Hysteres"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Default="2000"
                                    ParameterClass="Config"
                                    Remark="Feedback movement is checked when the regulator output is larger than this level"/>

                                <Property SymbolName="SteerEncScale"
                                    PublicName="Steering Encoder Scale"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Unit="Pulses/360 deg"
                                    Min="1"
                                    Max="65535"
                                    Visibility="Service"
                                    ParameterClass="Config"
                                    Remark="Steering Encoder Scale"/>

                                <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                    <Property SymbolName="SteerEncOffset"
                                        PublicName="Steering Encoder Offset"
                                        DataType="INTEGER16"
                                        AccessType="rw"
                                        Visibility="Service"
                                        Unit="1/100 deg"
                                        Min="-3000"
                                        Max="3000"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Steering Encoder Offset (Position of Sync pulse)"/>

                                    <Property SymbolName="SteerEncSyncFilter"
                                        PublicName="Steering Encoder Sync Filter"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="Internal"
                                        Unit="pulses"
                                        Default="5"
                                        ParameterClass="Config"
                                        Remark="Steering Encoder Sync Filter Window, unit [pulses]. Filter is applied with half of the value to the right and half of the value to the left of the last valid sync pulse. 0 = Filter disabled. OBS! Disabling the sync filter can be a serious safety issue!"/>

                                    <Property SymbolName="SteerEncSyncEmergency"
                                        PublicName="Steering Encoder Sync Emergency"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Visibility="Internal"
                                        Default="1"
                                        ParameterClass="Config"
                                        Remark="Steering Encoder Sync Emergency. 0 = Sync Emergency disabled. OBS! Disabling the sync emergency can be a serious safety issue!"/>

                                    <Property SymbolName="SteerEncSyncEnable"
                                        PublicName="Steering Encoder Sync Enable"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Visibility="Service"
                                        Default="1"
                                        ParameterClass="Config"
                                        Remark="Enable signal for encoder sync mechanism. Usually needed when having a multiturning steering encoder"/>

                                    <Property SymbolName="SyncGateInput"
                                        PublicName="Digital input used for sync gate"
                                        DataType="UNSIGNED8"
                                        AccessType="rw"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital input used for sync gate. 0 = disabled"/>

                                </xsl:if>

                                <xsl:if test='$CAN_Steer_Encoder = "true"'>
                                    <Property SymbolName="SteerEncMax"
                                        PublicName="Steer Encoder Max"
                                        DataType="UNSIGNED32"
                                        AccessType="rw"
                                        Visibility="Service"
                                        Unit="Max number of Pulses"
                                        Default="4096"
                                        ParameterClass="Config"
                                        Remark="Wrapping value of output from the encoder, ie the range. Ex. For a 10 bit encoder the range is 1024."/>

                                    <Property SymbolName="SteerEncOffset"
                                        PublicName="Steering Encoder Offset"
                                        DataType="INTEGER16"
                                        AccessType="rw"
                                        Visibility="Service"
                                        Unit="1/100 deg"
                                        Min="-18000"
                                        Max="18000"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Steering Encoder Offset (Position of Sync pulse)"/>

                                    <Property SymbolName="SteerEncGuardTimeout"
                                        PublicName="Steering Enc Guard Timeout"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="Internal"
                                        Unit="ms"
                                        Default="500"
                                        ParameterClass="Config"
                                        Remark="Guard Timeout on the Can encoder used for steering (to disable set the value to 0)."/>
                                </xsl:if>

                                <Property SymbolName="DriveRegFeedForward"
                                    PublicName="Driving Regulator FeedForward Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="100"
                                    ParameterClass="Config"
                                    Remark="Driving Regulator FeedForward Gain"/>

                                <Property SymbolName="DriveRegOffset"
                                    PublicName="Driving Regulator Offset"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Driving Regulator Offset"/>

                                <Property SymbolName="DriveRegP"
                                    PublicName="Driving Regulator P Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Driving Regulator P Gain"/>

                                <Property SymbolName="DriveRegI"
                                    PublicName="Driving Regulator I Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Driving Regulator I Gain"/>

                                <Property SymbolName="DriveRegILimit"
                                    PublicName="Driving Regulator I Gain Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="10000" Min="0" Max="32767"
                                    ParameterClass="Config"
                                    Remark="Driving Regulator I Gain Limit"/>

                                <Property SymbolName="DriveRegD"
                                    PublicName="Driving Regulator D Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Driving Regulator D Gain"/>

                                <Property SymbolName="DriveRegPIDLimit"
                                    PublicName="Drive Reg PID Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Max="32767"
                                    Unit="mV"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Limits the effect of feedback on the drive regulator.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="DriveRegOutOffset"
                                    PublicName="Drive Regulator Out Offset"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Min="-32767"
                                    Max="32767"
                                    Unit="mV"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Output offset for the drive regulator.
This offset is added to the regulator output after the PID regulation.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="DriveRegOutLimit"
                                    PublicName="Drive Regulator Out Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Max="32767"
                                    Unit="mV"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Total output limit of the drive regulator. 
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="DriveRegFailureDelay"
                                    PublicName="Drive Regulator Failure Delay"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Default="1000"
                                    ParameterClass="Config"
                                    Remark="Delay before safe state in absence of correct feedback movement"/>

                                <Property SymbolName="DriveRegCheckOutHysteres"
                                    PublicName="Drive Regulator Check Out Hysteres"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Default="2000"
                                    ParameterClass="Config"
                                    Remark="Feedback movement is checked when the regulator output is larger than this level"/>

                                <Property SymbolName="DriveEncScale"
                                    PublicName="Driving Encoder Scale"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Unit="Pulses/m"
                                    Min="1"
                                    Max="65535"
                                    Visibility="Service"
                                    ParameterClass="Config"
                                    Remark="Driving Encoder Scale"/>

                                <xsl:if test='$CAN_Drive_Encoder = "true"'>
                                    <Property SymbolName="DriveEncMax"
                                        PublicName="Drive Encoder Max"
                                        DataType="UNSIGNED32"
                                        AccessType="rw"
                                        Visibility="Service"
                                        Unit="Max number of Pulses"
                                        Default="4096"
                                        ParameterClass="Config"
                                        Remark="Wrapping value of output from the encoder, ie the range. Ex. For a 10 bit encoder the range is 1024."/>

                                    <Property SymbolName="DriveEncGuardTimeout"
                                        PublicName="Drive Enc Guard Timeout"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="Internal"
                                        Unit="ms"
                                        Default="500"
                                        ParameterClass="Config"
                                        Remark="Guard Timeout on the Can encoder used for drive (to disable set the value to 0)."/>
                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$AuxReg1Base = "true"'>

                                <xsl:if test='$AuxReg1Spd = "true"'>
                                    <Property SymbolName="AuxRegulator1_FeedForward"
                                        PublicName="Auxiliary Regulator 1 FeedForward"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Auxiliary Regulator 1 FeedForward"/>

                                    <Property SymbolName="AuxRegulator1_Offset"
                                        PublicName="Auxiliary Regulator 1 Offset"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Auxiliary Regulator 1 Offset"/>
                                </xsl:if>

                                <Property SymbolName="AuxRegulator1_P"
                                    PublicName="Auxiliary Position Regulator 1 P Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Position Regulator 1 P Gain"/>

                                <Property SymbolName="AuxRegulator1_I"
                                    PublicName="Auxiliary Position Regulator 1 I Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Position Regulator 1 I Gain"/>

                                <Property SymbolName="AuxRegulator1_ILimit"
                                    PublicName="Auxiliary Position Regulator 1 I Gain Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Position Regulator 1 I Gain Limit"/>

                                <Property SymbolName="AuxRegulator1_D"
                                    PublicName="Auxiliary Position Regulator 1 D Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Position Regulator 1 D Gain"/>

                                <Property SymbolName="AuxRegulator1_PIDLimit"
                                    PublicName="AuxRegulator1 Reg PID Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Max="32767"
                                    Unit="mV"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Limits the effect of feedback on the aux1 regulator.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="AuxRegulator1_OutOffset"
                                    PublicName="AuxRegulator1 Regulator Out Offset"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Min="-32767"
                                    Max="32767"
                                    Unit="mV"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Output offset for the Aux1 regulator.
This offset is added to the regulator output after the PID regulation.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="AuxRegulator1_OutLimit"
                                    PublicName="AuxRegulator1 Regulator Out Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Max="32767"
                                    Unit="mV"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Total output limit of the aux1 regulator.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="AuxRegulator1_FailureDelay"
                                    PublicName="Auxiliary Regulator 1 Failure Delay"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="1000"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Regulator1  Delay before safe state in absence of correct feedback movement"/>

                                <Property SymbolName="AuxRegulator1_CheckOutHysteres"
                                    PublicName="Auxiliary Regulator 1 Check Out Hysteres"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Default="2000"
                                    ParameterClass="Config"
                                    Remark="Feedback movement is checked when the regulator output is larger than this level"/>

                            </xsl:if>
                            
                            <xsl:if test='$AuxEnc1Base = "true"' >
                                <Property SymbolName="AuxEnc1Scale"
                                    PublicName="Auxiliary Encoder 1 Scale"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Min="1"
                                    Max="65535"
                                    Visibility="Service"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Encoder 1 Scale"/>
                                <xsl:if test='$AuxEnc1Spd = "false"' >
                                    <Property SymbolName="AuxEnc1PositionPreset"
                                        PublicName="Auxiliary Encoder 1 Position Preset value"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="Service"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Auxiliary Encoder 1 Position Preset value (extern sync)"/>
                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$AuxEnc1Sync = "true"' >
                                <Property SymbolName="AuxEnc1Offset"
                                    PublicName="Auxiliary Encoder 1 Offset"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Visibility="Service"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Encoder 1 Offset"/>
                                <Property SymbolName="AuxEnc1SyncEnable"
                                    PublicName="Auxiliary Encoder 1 Sync Enable"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="1"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Encoder 1 Sync Enable"/>
                                <Property SymbolName="AuxEnc1SyncFilter"
                                    PublicName="Auxiliary Encoder 1 Sync Filter"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Unit="pulses"
                                    Default="5"
                                    ParameterClass="Config"
                                    Remark="Size of filter window [pulses]. Filter is applied with half of the value to the right and half of the value to the left of the last valid sync pulse. 0=Filter disabled. OBS! Disabling the sync filter can be a serious safety issue!"/>
                                <Property SymbolName="AuxEnc1SyncEmergency"
                                    PublicName="Auxiliary Encoder 1 Sync Emergency"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="1"
                                    ParameterClass="Config"
                                    Remark="Steering Encoder Sync Emergency. 0 = Sync Emergency disabled. OBS! Disabling the sync emergency can be a serious safety issue!"/>
                                <Property SymbolName="AuxEnc1SyncGateInput"
                                    PublicName="Auxiliary Encoder 1 digital input used for sync gate"
                                    DataType="UNSIGNED8"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Encoder 1 digital input used for sync gate. 0 = disabled"/>
                            </xsl:if>

                            <xsl:if test='$AuxReg2Base = "true"'>

                                <xsl:if test='$AuxReg2Spd = "true"'>
                                    <Property SymbolName="AuxRegulator2_FeedForward"
                                        PublicName="Auxiliary Regulator 2 FeedForward"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Auxiliary Regulator 2 FeedForward"/>

                                    <Property SymbolName="AuxRegulator2_Offset"
                                        PublicName="Auxiliary Regulator 2 Offset"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Auxiliary Regulator 2 Offset"/>
                                </xsl:if>

                                <Property SymbolName="AuxRegulator2_P"
                                    PublicName="Auxiliary Position Regulator 2 P Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Position Regulator 2 P Gain"/>

                                <Property SymbolName="AuxRegulator2_I"
                                    PublicName="Auxiliary Position Regulator 2 I Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Position Regulator 2 I Gain"/>

                                <Property SymbolName="AuxRegulator2_ILimit"
                                    PublicName="Auxiliary Position Regulator 2 I Gain Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Position Regulator 2 I Gain Limit"/>

                                <Property SymbolName="AuxRegulator2_D"
                                    PublicName="Auxiliary Position Regulator 2 D Gain"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Position Regulator 2 D Gain"/>

                                <Property SymbolName="AuxRegulator2_PIDLimit"
                                    PublicName="AuxRegulator2 Reg PID Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Max="32767"
                                    Unit="mV"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Limits the effect of feedback on the aux2 regulator.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="AuxRegulator2_OutOffset"
                                    PublicName="AuxRegulator2 Regulator Out Offset"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Min="-32767"
                                    Max="32767"
                                    Unit="mV"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Output offset for the Aux2 regulator.
This offset is added to the regulator output after the PID regulation.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="AuxRegulator2_OutLimit"
                                    PublicName="AuxRegulator2 Regulator Out Limit"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Max="32767"
                                    Unit="mV"
                                    Default="10000"
                                    ParameterClass="Config"
                                    Remark="Total output limit of the aux2 regulator.
The unit is mV in an SDIO-FSA system.
For system only feeding the regulator output on the canbus, the value is pure binary."/>

                                <Property SymbolName="AuxRegulator2_FailureDelay"
                                    PublicName="Auxiliary Regulator 2 Failure Delay"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="1000"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Regulator 2 Delay before safe state in absence of correct feedback movement"/>

                                <Property SymbolName="AuxRegulator2_CheckOutHysteres"
                                    PublicName="Auxiliary Regulator 2 Check Out Hysteres"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="Internal"
                                    Default="2000"
                                    ParameterClass="Config"
                                    Remark="Feedback movement is checked when the regulator output is larger than this level"/>

                            </xsl:if>

                            <xsl:if test='$AuxEnc2Base = "true"' >
                                <Property SymbolName="AuxEnc2Scale"
                                    PublicName="Auxiliary Encoder 2 Scale"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Min="1"
                                    Max="65535"
                                    Visibility="Service"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Encoder 2 Scale"/>
                                <xsl:if test='$AuxEnc2Spd = "false"' >
                                    <Property SymbolName="AuxEnc2PositionPreset"
                                        PublicName="Auxiliary Encoder 2 Position Preset value"
                                        DataType="UNSIGNED16"
                                        AccessType="rw"
                                        Visibility="Service"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Auxiliary Encoder 2 Position Preset value (extern sync)"/>
                                </xsl:if>
                            </xsl:if>
                            
                            <xsl:if test='$AuxEnc2Sync = "true"' >
                                <Property SymbolName="AuxEnc2Offset"
                                    PublicName="Auxiliary Encoder 2 Offset"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Visibility="Service"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Encoder 2 Offset"/>
                                <Property SymbolName="AuxEnc2SyncEnable"
                                    PublicName="Auxiliary Encoder 2 Sync Enable"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="1"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Encoder 2 Sync Enable"/>
                                <Property SymbolName="AuxEnc2SyncFilter"
                                    PublicName="Auxiliary Encoder 2 Sync Filter"
                                    DataType="UNSIGNED16"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Unit="pulses"
                                    Default="5"
                                    ParameterClass="Config"
                                    Remark="Size of filter window [pulses]. Filter is applied with half of the value to the right and half of the value to the left of the last valid sync pulse. 0=Filter disabled. OBS! Disabling the sync filter can be a serious safety issue!"/>
                                <Property SymbolName="AuxEnc2SyncEmergency"
                                    PublicName="Auxiliary Encoder 2 Sync Emergency"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="1"
                                    ParameterClass="Config"
                                    Remark="Steering Encoder Sync Emergency. 0 = Sync Emergency disabled. OBS! Disabling the sync emergency can be a serious safety issue!"/>
                                <Property SymbolName="AuxEnc2SyncGateInput"
                                    PublicName="Auxiliary Encoder 2 digital input used for sync gate"
                                    DataType="UNSIGNED8"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Auxiliary Encoder 2 digital input used for sync gate. 0 = disabled."/>
                            </xsl:if>

                            <!--  Second, Configuration Data Properties for Auxiliary I/O  -->
                            <xsl:if test='$Incr_Steer_Encoder = "false"'>
                                <xsl:if test='$AuxEnc1Base = "false"'>
                                    <Property SymbolName="DigitalInput1_Polarity"
                                        PublicName="Digital Input 1 Polarity, pin #A22"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Input 1 Polarity, pin #A22">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>

                                    <Property SymbolName="DigitalInput2_Polarity"
                                        PublicName="Digital Input 2 Polarity, pin #A14"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Input 2 Polarity, pin #A14">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                                </xsl:if>
                                <xsl:if test='$AuxEnc1Sync = "false"'>
                                    <Property SymbolName="DigitalInput3_Polarity"
                                        PublicName="Digital Input 3 Polarity, pin #A7"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Input 3 Polarity, pin #A7">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$Incr_Drive_Encoder = "false"'>
                                <xsl:if test='$AuxEnc2Base = "false"'>
                                    <Property SymbolName="DigitalInput4_Polarity"
                                        PublicName="Digital Input 4 Polarity, pin #A6"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Input 4 Polarity, pin #A6">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>

                                    <Property SymbolName="DigitalInput5_Polarity"
                                        PublicName="Digital Input 5 Polarity, pin #A13"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Input 5 Polarity, pin #A13">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>

                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$AuxEnc2Sync = "false"'>
                                <Property SymbolName="DigitalInput6_Polarity"
                                    PublicName="Digital Input 6 Polarity, pin #A21"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Digital Input 6 Polarity, pin #A21">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                            </xsl:if>


                            <xsl:if test='$SD_Controller = "true"'>
                                <Property SymbolName="FSA1Failure_Polarity"
                                    PublicName="Digital Input 7 Polarity, pin #A20"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="FSA 1 Failure Polarity, pin #A20">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                            </xsl:if>
                            <xsl:if test='$SD_Controller = "false"'>
                                <xsl:if test='$AuxReg1Base = "true"'>
                                    <Property SymbolName="FSA1Failure_Polarity"
                                        PublicName="Digital Input 7 Polarity, pin #A20"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="FSA 1 Failure Polarity, pin #A20">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>

                                </xsl:if>
                                <xsl:if test='$AuxReg1Base = "false"'>
                                    <Property SymbolName="DigitalInput7_Polarity"
                                        PublicName="Digital Input 7 Polarity, pin #A20"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Input 7 Polarity, pin #A20">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$SD_Controller = "true"'>
                               <Property SymbolName="FSA2Failure_Polarity"
                                   PublicName="FSA 2 Failure Polarity, pin #A19"
                                   DataType="BOOLEAN"
                                   AccessType="rw"
                                   Renameable="true"
                                   Visibility="OEM"
                                   Default="0"
                                   ParameterClass="Config"
                                   Remark="FSA 2 Failure Polarity, pin #A19">
                                       <ValueTranslation Value="0" String="Active High"/>
                                       <ValueTranslation Value="1" String="Active Low"/>
                                </Property>

                            </xsl:if>
                            <xsl:if test='$SD_Controller = "false"'>
                                <xsl:if test='$AuxReg2Base = "true"'>
                                   <Property SymbolName="FSA2Failure_Polarity"
                                       PublicName="FSA 2 Failure Polarity, pin #A19"
                                       DataType="BOOLEAN"
                                       AccessType="rw"
                                       Renameable="true"
                                       Visibility="OEM"
                                       Default="0"
                                       ParameterClass="Config"
                                       Remark="FSA 2 Failure Polarity, pin #A19">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>

                                </xsl:if>
                                <xsl:if test='$AuxReg2Base = "false"'>
                                   <Property SymbolName="DigitalInput8_Polarity"
                                       PublicName="Digital Input 8 Polarity, pin #A19"
                                       DataType="BOOLEAN"
                                       AccessType="rw"
                                       Renameable="true"
                                       Visibility="OEM"
                                       Default="0"
                                       ParameterClass="Config"
                                       Remark="Digital Input 8 Polarity, pin #A19">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>

                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$UseSpotAntennas = "false"'>
                                <Property SymbolName="DigitalInput9_Polarity"
                                    PublicName="Digital Input 9 Polarity, pin #B22"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Digital Input 9 Polarity, pin #B22">
                                       <ValueTranslation Value="0" String="Active High"/>
                                       <ValueTranslation Value="1" String="Active Low"/>
                                </Property>

                                <Property SymbolName="DigitalInput10_Polarity"
                                    PublicName="Digital Input 10 Polarity, pin #B23"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Digital Input 10 Polarity, pin #B23">
                                       <ValueTranslation Value="0" String="Active High"/>
                                       <ValueTranslation Value="1" String="Active Low"/>
                                </Property>

                            </xsl:if>

                            <Property SymbolName="DigitalInput11_Polarity"
                                PublicName="Digital Input 11 Polarity, pin #A18"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="OEM"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Digital Input 11 Polarity, pin #A18">
                                   <ValueTranslation Value="0" String="Active High"/>
                                   <ValueTranslation Value="1" String="Active Low"/>
                            </Property>

                            <Property SymbolName="DigitalInput12_Polarity"
                                PublicName="Digital Input 12 Polarity, pin #A17"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="OEM"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Digital Input 12 Polarity, pin #A17">
                                   <ValueTranslation Value="0" String="Active High"/>
                                   <ValueTranslation Value="1" String="Active Low"/>
                            </Property>


                            <xsl:if test='$UseEdgeDetectDigInp = "true"'>
                            <xsl:if test='$NumberOfEdgeDetectDigInp >= 1'>
                                <Property SymbolName="EdgeDetectInput1"
                                    PublicName="Set the digital input to use. NOTE! This points out the input that will be the first used for edge detection."
                                    DataType="UNSIGNED8"
                                    AccessType="ro"
                                    Renameable="false"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Runtime"
                                    Remark="Set the digital input to use. NOTE! This points out the input that will be the first used for edge detection." />
                            </xsl:if>
                            <xsl:if test='$NumberOfEdgeDetectDigInp >= 2'>
                                <Property SymbolName="EdgeDetectInput2"
                                    PublicName="Set the digital input to use. NOTE! This points out the input that will be the second used for edge detection."
                                    DataType="UNSIGNED8"
                                    AccessType="ro"
                                    Renameable="false"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Runtime"
                                    Remark="Set the digital input to use. NOTE! This points out the input that will be the second used for edge detection." />
                            </xsl:if>
                            <xsl:if test='$NumberOfEdgeDetectDigInp >= 3'>
                                <Property SymbolName="EdgeDetectInput3"
                                    PublicName="Set the digital input to use. NOTE! This points out the input that will be the third used for edge detection."
                                    DataType="UNSIGNED8"
                                    AccessType="ro"
                                    Renameable="false"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Runtime"
                                    Remark="Set the digital input to use. NOTE! This points out the input that will be the third used for edge detection." />
                            </xsl:if>
                            <xsl:if test='$NumberOfEdgeDetectDigInp >= 4'>
                                <Property SymbolName="EdgeDetectInput4"
                                    PublicName="Set the digital input to use. NOTE! This points out the input that will be the fourth used for edge detection."
                                    DataType="UNSIGNED8"
                                    AccessType="ro"
                                    Renameable="false"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Runtime"
                                    Remark="Set the digital input to use. NOTE! This points out the input that will be the fourth used for edge detection." />
                            </xsl:if>
                            </xsl:if>


                            <Property SymbolName="DigitalOutput2_Polarity"
                                PublicName="Digital Output 2 Polarity, pin #B7"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="OEM"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Digital Output 2 Polarity, pin #B7">
                                   <ValueTranslation Value="0" String="Active High"/>
                                   <ValueTranslation Value="1" String="Active Low"/>
                            </Property>
                            <Property SymbolName="DigitalOutput3_Polarity"
                                PublicName="Digital Output 3 Polarity, pin #B6"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="OEM"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Digital Output 3 Polarity, pin #B6">
                                   <ValueTranslation Value="0" String="Active High"/>
                                   <ValueTranslation Value="1" String="Active Low"/>
                            </Property>
                            <Property SymbolName="DigitalOutput4_Polarity"
                                PublicName="Digital Output 4 Polarity, pin #B5"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="OEM"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Digital Output 4 Polarity, pin #B5">
                                   <ValueTranslation Value="0" String="Active High"/>
                                   <ValueTranslation Value="1" String="Active Low"/>
                            </Property>
                            <Property SymbolName="DigitalOutput5_Polarity"
                                PublicName="Digital Output 5 Polarity, pin #B4"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="OEM"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Digital Output 5 Polarity, pin #B4">
                                   <ValueTranslation Value="0" String="Active High"/>
                                   <ValueTranslation Value="1" String="Active Low"/>
                            </Property>
                            <Property SymbolName="DigitalOutput6_Polarity"
                                PublicName="Digital Output 6 Polarity, pin #B1"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="OEM"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Digital Output 6 Polarity, pin #B1">
                                   <ValueTranslation Value="0" String="Active High"/>
                                   <ValueTranslation Value="1" String="Active Low"/>
                            </Property>

                            <xsl:if test='$SD_Controller = "false"'>
                                <xsl:if test='$AuxReg1Base = "false"'>
                                    <Property SymbolName="DigitalOutput7_Polarity"
                                        PublicName="Digital Output 7 Polarity, pin #B3"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Output 7 Polarity, pin #B3">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>

                                </xsl:if>
                            </xsl:if>
                            <xsl:if test='$Incr_Drive_Encoder = "false"'>
                                <xsl:if test='$AuxReg2Base = "false"'>
                                    <Property SymbolName="DigitalOutput8_Polarity"
                                        PublicName="Digital Output 8 Polarity, pin #B2"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Output 8 Polarity, pin #B2">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$UseAuxPWMOutput = "false"'>
                                <Property SymbolName="DigitalOutput9_Polarity"
                                    PublicName="Digital Output 9 Polarity, pin #A5"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Digital Output 9 Polarity, pin #A5">
                                       <ValueTranslation Value="0" String="Active High"/>
                                       <ValueTranslation Value="1" String="Active Low"/>
                                </Property>

                            </xsl:if>
                            <xsl:if test='$UseAuxPWMOutput = "false"'>
                                <Property SymbolName="DigitalOutput10_Polarity"
                                    PublicName="Digital Output 10 Polarity, pin #A12"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Digital Output 10 Polarity, pin #A12">
                                       <ValueTranslation Value="0" String="Active High"/>
                                       <ValueTranslation Value="1" String="Active Low"/>
                                </Property>
                            </xsl:if>

                            <xsl:if test='$UseAuxPWMOutput = "false"'>
                                <Property SymbolName="DigitalOutput11_Polarity"
                                    PublicName="Digital Output 11 Polarity, pin #A11"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="OEM"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Digital Output 11 Polarity, pin #A11">
                                       <ValueTranslation Value="0" String="Active High"/>
                                       <ValueTranslation Value="1" String="Active Low"/>
                                </Property>
                            </xsl:if>

                            <Property SymbolName="DigitalOutput12_Polarity"
                                PublicName="Digital Output 12 Polarity, pin #A3"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="OEM"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Digital Output 12 Polarity, pin #A3">
                                   <ValueTranslation Value="0" String="Active High"/>
                                   <ValueTranslation Value="1" String="Active Low"/>
                            </Property>


                            <xsl:if test='$SD_Controller = "false"'>
                                <xsl:if test='$AuxReg1Base = "false"'>
                                    <Property SymbolName="DigitalOutput13_Polarity"
                                        PublicName="Digital Output 13 Polarity, pin #A10"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Output 13 Polarity, pin #A10">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>

                                    <Property SymbolName="DigitalOutput14_Polarity"
                                        PublicName="Digital Output 14 Polarity, pin #A2"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Output 14 Polarity, pin #A2">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                                </xsl:if>
                                <xsl:if test='$AuxReg2Base = "false"'>
                                    <Property SymbolName="DigitalOutput15_Polarity"
                                        PublicName="Digital Output 15 Polarity, pin #A9"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Output 15 Polarity, pin #A9">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                                    <Property SymbolName="DigitalOutput16_Polarity"
                                        PublicName="Digital Output 16 Polarity, pin #A16"
                                        DataType="BOOLEAN"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="OEM"
                                        Default="0"
                                        ParameterClass="Config"
                                        Remark="Digital Output 16 Polarity, pin #A16">
                                           <ValueTranslation Value="0" String="Active High"/>
                                           <ValueTranslation Value="1" String="Active Low"/>
                                    </Property>
                                </xsl:if>
                            </xsl:if>


                            <Property SymbolName="AnInp1_Scale"
                                PublicName="Analog Input 1 Scale, pin #B15"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 1 Scale, pin #B15"/>
                            <Property SymbolName="AnInp2_Scale"
                                PublicName="Analog Input 2 Scale, pin #B17"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 2 Scale, pin #B17"/>

                            <xsl:if test='$UseSpotAntennas = "false"'>
                                <Property SymbolName="AnInp3_Scale"
                                    PublicName="Analog Input 3 Scale, pin #B10"
                                    DataType="INTEGER32"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Service"
                                    Default="1000"
                                    ParameterClass="Config"
                                    Remark="Analog Input 3 Scale, pin #B10"/>
                                <Property SymbolName="AnInp4_Scale"
                                    PublicName="Analog Input 4 Scale, pin #B18"
                                    DataType="INTEGER32"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Service"
                                    Default="1000"
                                    ParameterClass="Config"
                                    Remark="Analog Input 4 Scale, pin #B18"/>
                            </xsl:if>

                            <Property SymbolName="AnInp5_Scale"
                                PublicName="Analog Input 5 Scale, pin #B11"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 5 Scale, pin #B11"/>
                            <Property SymbolName="AnInp6_Scale"
                                PublicName="Analog Input 6 Scale, pin #B19"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 6 Scale, pin #B19"/>

                            <Property SymbolName="AnInp7_Scale"
                                PublicName="Analog Input 7 Scale, pin #B12"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 7 Scale, pin #B12"/>
                            <Property SymbolName="AnInp8_Scale"
                                PublicName="Analog Input 8 Scale, pin #B20"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 8 Scale, pin #B20"/>
                            <Property SymbolName="AnInp9_Scale"
                                PublicName="Analog Input 9 Scale, pin #B13"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 9 Scale, pin #B13"/>
                            <Property SymbolName="AnInp10_Scale"
                                PublicName="Analog Input 10 Scale, pin #B21"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 10 Scale, pin #B21"/>
                            <Property SymbolName="AnInp11_Scale"
                                PublicName="Analog Input 11 Scale, pin #B14"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="1000"
                                ParameterClass="Config"
                                Remark="Analog Input 11 Scale, pin #B14"/>

                            <Property SymbolName="AnInp1_Delta"
                                PublicName="Analog Input 1 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                            <Property SymbolName="AnInp2_Delta"
                                PublicName="Analog Input 2 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>

                            <xsl:if test='$UseSpotAntennas = "false"'>
                                <Property SymbolName="AnInp3_Delta"
                                    PublicName="Analog Input 3 Delta"
                                    DataType="UNSIGNED32"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Service"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                                <Property SymbolName="AnInp4_Delta"
                                    PublicName="Analog Input 4 Delta"
                                    DataType="UNSIGNED32"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Service"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                            </xsl:if>

                            <Property SymbolName="AnInp5_Delta"
                                PublicName="Analog Input 5 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                            <Property SymbolName="AnInp6_Delta"
                                PublicName="Analog Input 6 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                            <Property SymbolName="AnInp7_Delta"
                                PublicName="Analog Input 7 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                            <Property SymbolName="AnInp8_Delta"
                                PublicName="Analog Input 8 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                            <Property SymbolName="AnInp9_Delta"
                                PublicName="Analog Input 9 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                            <Property SymbolName="AnInp10_Delta"
                                PublicName="Analog Input 10 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>
                            <Property SymbolName="AnInp11_Delta"
                                PublicName="Analog Input 11 Delta"
                                DataType="UNSIGNED32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Asynchroneous transmission will be triggered if input has changed more than this value since last transmission."/>

                            <Property SymbolName="AnInp1_Offset"
                                PublicName="Analog Input 1 Offset, pin #B15"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 1 Offset, pin #B15"/>
                            <Property SymbolName="AnInp2_Offset"
                                PublicName="Analog Input 2 Offset, pin #B17"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 2 Offset, pin #B17"/>

                            <xsl:if test='$UseSpotAntennas = "false"'>
                                <Property SymbolName="AnInp3_Offset"
                                    PublicName="Analog Input 3 Offset, pin #B10"
                                    DataType="INTEGER32"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Service"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Analog Input 3 Offset, pin #B10"/>
                                <Property SymbolName="AnInp4_Offset"
                                    PublicName="Analog Input 4 Offset, pin #B18"
                                    DataType="INTEGER32"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Service"
                                    Default="0"
                                    ParameterClass="Config"
                                    Remark="Analog Input 4 Offset, pin #B18"/>
                            </xsl:if>

                            <Property SymbolName="AnInp5_Offset"
                                PublicName="Analog Input 5 Offset, pin #B11"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 5 Offset, pin #B11"/>
                            <Property SymbolName="AnInp6_Offset"
                                PublicName="Analog Input 6 Offset, pin #B19"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 6 Offset, pin #B19"/>

                            <Property SymbolName="AnInp7_Offset"
                                PublicName="Analog Input 7 Offset, pin #B12"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 7 Offset, pin #B12"/>
                            <Property SymbolName="AnInp8_Offset"
                                PublicName="Analog Input 8 Offset, pin #B20"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 8 Offset, pin #B20"/>
                            <Property SymbolName="AnInp9_Offset"
                                PublicName="Analog Input 9 Offset, pin #B13"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 9 Offset, pin #B13"/>
                            <Property SymbolName="AnInp10_Offset"
                                PublicName="Analog Input 10 Offset, pin #B21"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 10 Offset, pin #B21"/>
                            <Property SymbolName="AnInp11_Offset"
                                PublicName="Analog Input 11 Offset, pin #B14"
                                DataType="INTEGER32"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Service"
                                Default="0"
                                ParameterClass="Config"
                                Remark="Analog Input 11 Offset, pin #B14"/>

                            <xsl:if test='$UseSpotAntennas = "true"'>
                                <Property SymbolName="Spot1AntennaKnee"
                                    PublicName="Spot1AntennaKnee"
                                    DataType="INTEGER32"
                                    AccessType="rw"
                                    Renameable="false"
                                    Visibility="OEM"
                                    Default="8"
                                    ParameterClass="Config"
                                    Remark="Defines the knee of the partlinear mV to mm transferfunction for the antenna. Default for spot magnets is 8. Default for magnetic tape is 11.">
                                </Property>
                                <Property SymbolName="Spot2AntennaKnee"
                                    PublicName="Spot2AntennaKnee"
                                    DataType="INTEGER32"
                                    AccessType="rw"
                                    Renameable="false"
                                    Visibility="OEM"
                                    Default="8"
                                    ParameterClass="Config"
                                    Remark="Defines the knee of the partlinear mV to mm transferfunction for the antenna. Default for spot magnets is 8. Default for magnetic tape is 11.">
                                </Property>
                            </xsl:if>

                            <!--  Process Data Properties for Regulators and Encoders  -->

                            <xsl:if test='$SD_Controller = "true"'>
                                <Property SymbolName="Enc1AngularSpeed"
                                    PublicName="Encoder 1 Angular Speed"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Unit="1/100 deg / s"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Encoder 1 Angular Speed"/>

                                <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                    <Property SymbolName="Enc1Angle"
                                        PublicName="Encoder 1 Angle"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="1/100 deg"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Retentive="1"
                                        Remark="Encoder 1 Angle"/>

                                    <Property SymbolName="Enc1SyncValid"
                                        PublicName="Encoder 1 Sync Valid"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Service"
                                        ParameterClass="Runtime"
                                        Remark="Encoder 1 Sync Valid"/>

                                    <Property SymbolName="Enc1Warning"
                                        PublicName="Encoder 1 Warning"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Service"
                                        ParameterClass="Runtime"
                                        Remark="Encoder 1 Warning"/>
                                </xsl:if>

                                <xsl:if test='$CAN_Steer_Encoder = "true"'>
                                    <Property SymbolName="Enc1Angle"
                                        PublicName="Encoder 1 Angle"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="1/100 deg"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Encoder 1 Angle"/>
                                </xsl:if>

                                <Property SymbolName="Enc2Dist"
                                    PublicName="Encoder 2 Distance"
                                    DataType="UNSIGNED16"
                                    AccessType="ro"
                                    Unit="mm"
                                    Visibility="Service"
                                    ParameterClass="Runtime"
                                    Remark="Encoder 2 Distance"/>

                                <Property SymbolName="Enc2Speed"
                                    PublicName="Encoder 2 Speed"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Unit="mm/s"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Encoder 2 Speed"/>

                                <Property SymbolName="SetAngle"
                                    PublicName="Set Angle"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Unit="1/100 deg"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Set Angle"/>

                                <Property SymbolName="SteerEnable"
                                    PublicName="Steering Control Enable"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    ParameterClass="Runtime"
                                    Remark="Steering Control Enable"/>

                                <Property SymbolName="SetSpeed"
                                    PublicName="Set Speed"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Unit="mm/s"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Set Speed"/>

                                <Property SymbolName="DriveEnable"
                                    PublicName="Driving Control Enable"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    ParameterClass="Runtime"
                                    Remark="Driving Control Enable"/>
                            </xsl:if>

                            <xsl:if test='$AuxReg1Base = "true"'>
                                <Property SymbolName="AuxReg1SetValue"
                                    PublicName="Auxiliary Position Regulator 1 Set Value"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Position Regulator 1 Set Value"/>

                                <Property SymbolName="AuxReg1Enable"
                                    PublicName="Auxiliary Position Regulator 1 Enable"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Position Regulator 1 Enable"/>
                            </xsl:if>
                            <xsl:if test='$AuxReg2Base = "true"'>
                                <Property SymbolName="AuxReg2SetValue"
                                    PublicName="Auxiliary Position Regulator 2 Set Value"
                                    DataType="INTEGER16"
                                    AccessType="rw"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Position Regulator 2 Set Value"/>

                                <Property SymbolName="AuxReg2Enable"
                                    PublicName="Auxiliary Position Regulator 2 Enable"
                                    DataType="BOOLEAN"
                                    AccessType="rw"
                                    Visibility="OEM"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Position Regulator 2 Enable"/>
                            </xsl:if>
                            <xsl:if test='$AuxEnc1Base = "true"'>
                                <xsl:if test='$AuxEnc1Ang = "true"'>
                                    <Property SymbolName="AuxEnc1Position"
                                        PublicName="Auxiliary Encoder 1 Position"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Operator"
                                        Retentive="1"
                                        ParameterClass="Runtime"
                                        Remark="Auxiliary Encoder 1 Position"/>
                                </xsl:if>
                                <xsl:if test='$AuxEnc1Dist = "true"'>
                                    <Property SymbolName="AuxEnc1Position"
                                        PublicName="Auxiliary Encoder 1 Position"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Operator"
                                        Retentive="1"
                                        ParameterClass="Runtime"
                                        Remark="Auxiliary Encoder 1 Position"/>
                                </xsl:if>
                                <xsl:if test='$AuxEnc1Spd = "true"'>
                                    <Property SymbolName="AuxEnc1Position"
                                        PublicName="Auxiliary Encoder 1 Position"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Auxiliary Encoder 1 Position"/>
                                </xsl:if>
                                <Property SymbolName="AuxEnc1Speed"
                                    PublicName="Auxiliary Encoder 1 Speed"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Encoder 1 Speed"/>
                            </xsl:if>
                            <xsl:if test='$AuxEnc2Base = "true"'>
                                <xsl:if test='$AuxEnc2Ang = "true"'>
                                    <Property SymbolName="AuxEnc2Position"
                                        PublicName="Auxiliary Encoder 2 Position"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Operator"
                                        Retentive="1"
                                        ParameterClass="Runtime"
                                        Remark="Auxiliary Encoder 2 Position"/>
                                </xsl:if>
                                <xsl:if test='$AuxEnc2Dist = "true"'>
                                    <Property SymbolName="AuxEnc2Position"
                                        PublicName="Auxiliary Encoder 2 Position"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Operator"
                                        Retentive="1"
                                        ParameterClass="Runtime"
                                        Remark="Auxiliary Encoder 2 Position"/>
                                </xsl:if>
                                <xsl:if test='$AuxEnc2Spd = "true"'>
                                    <Property SymbolName="AuxEnc2Position"
                                        PublicName="Auxiliary Encoder 2 Position"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Auxiliary Encoder 2 Position"/>
                                </xsl:if>
                                <Property SymbolName="AuxEnc2Speed"
                                    PublicName="Auxiliary Encoder 2 Speed"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Encoder 2 Speed"/>
                            </xsl:if>
                            <xsl:if test='$AuxEnc1Sync = "true"'>
                                <Property SymbolName="AuxEnc1SyncValid"
                                    PublicName="Auxiliary Encoder 1 Sync Valid"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Service"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Encoder 1 Sync Valid"/>
                                <Property SymbolName="AuxEnc1Warning"
                                    PublicName="Auxiliary Encoder 1 Warning"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Service"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Encoder 1 Warning"/>
                            </xsl:if>
                            <xsl:if test='$AuxEnc2Sync = "true"'>
                                <Property SymbolName="AuxEnc2SyncValid"
                                    PublicName="Auxiliary Encoder 2 Sync Valid"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Service"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Encoder 2 Sync Valid"/>
                                <Property SymbolName="AuxEnc2Warning"
                                    PublicName="Auxiliary Encoder 2 Warning"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Service"
                                    ParameterClass="Runtime"
                                    Remark="Auxiliary Encoder 2 Warning"/>
                            </xsl:if>

                            <xsl:if test='$UseSpotAntennas = "true"'>
                                <Property SymbolName="Spot1Offset"
                                    PublicName="Spot Antenna 1 Offset, measured offset to spot object"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Visibility="OEM"
                                    ParameterClass="Runtime"
                                    Remark="Spot Antenna 1 Offset, measured offset to spot object"/>

                                <Property SymbolName="Spot1StartTime"
                                    PublicName="Spot Antenna 1 Start time, time when when the spot started relative the last sync"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Spot Antenna 1 Start time, time when the spot started relative the last sync"/>

                                <Property SymbolName="Spot1StopTime"
                                    PublicName="Spot Antenna 1 Stop time, time when the spot ended relative the last sync"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Spot Antenna 1 Stop time, time when the spot ended relative the last sync"/>

                                <Property SymbolName="Spot2Offset"
                                    PublicName="Spot Antenna 2 Offset, measured offset to spot object"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Visibility="OEM"
                                    ParameterClass="Runtime"
                                    Remark="Spot Antenna 2 Offset, measured offset to spot object"/>

                                <Property SymbolName="Spot2StartTime"
                                    PublicName="Spot Antenna 2 Start time, time when the spot started relative the last sync"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Spot Antenna 2 Start time, time when the spot started relative the last sync"/>

                                <Property SymbolName="Spot2StopTime"
                                    PublicName="Spot Antenna 2 Stop time, time when the spot ended relative the last sync"
                                    DataType="INTEGER16"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Spot Antenna 2 Stop time, time when the spot ended relative the last sync"/>
                            </xsl:if>

                            <!--  Process Data Properties for Auxiliary I/O  -->

                            <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                <Property SymbolName="Reserved_DigitalInput1"
                                    PublicName="Reserved Digital Input 1 (Enc 1 A, pin #A14)"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Reserved Digital Input 1 (Enc 1 A, pin #A14)"/>

                                <Property SymbolName="Reserved_DigitalInput2"
                                    PublicName="Reserved Digital Input 2 (Enc 1 B, pin #A22)"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Reserved Digital Input 2 (Enc 1 B, pin #A22)"/>
                            </xsl:if>
                            <xsl:if test='$Incr_Steer_Encoder = "false"'>
                                <xsl:if test='$AuxEnc1Base = "false"'>
                                    <Property SymbolName="DigitalInput1"
                                        PublicName="Digital Input 1 value, pin #A22"
                                        DataType="BOOLEAN"
                                        IOType="Digital Input Sensor"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 1 value, pin #A22"/>

                                    <Property SymbolName="DigitalInput2"
                                        PublicName="Digital Input 2 value, pin #A14"
                                        DataType="BOOLEAN"
                                        IOType="Digital Input Sensor"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 2 value, pin #A14"/>
                                </xsl:if>
                                <xsl:if test='$AuxEnc1Base = "true"'>
                                    <Property SymbolName="Reserved_DigitalInput1"
                                        PublicName="Reserved Digital Input 1 (Enc 1 A, pin #A14)"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Digital Input 1 (Enc 1 A, pin #A14)"/>

                                    <Property SymbolName="Reserved_DigitalInput2"
                                        PublicName="Reserved Digital Input 2 (Enc 1 B, pin #A22)"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Digital Input 2 (Enc 1 B, pin #A22)"/>
                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$Incr_Steer_Encoder = "true"'>
                                <Property SymbolName="Reserved_DigitalInput3"
                                    PublicName="Reserved Digital Input 3 (Enc 1 Sync, pin #A7)"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Reserved Digital Input 3 (Enc 1 Sync, pin #A7)"/>
                            </xsl:if>
                            <xsl:if test='$Incr_Steer_Encoder = "false"'>
                                <xsl:if test='$AuxEnc1Sync = "false"'>
                                    <Property SymbolName="DigitalInput3"
                                        PublicName="Digital Input 3 value, pin #A7"
                                        DataType="BOOLEAN"
                                        IOType="Digital Input Sensor"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 3 value, pin #A7"/>
                                </xsl:if>
                                <xsl:if test='$AuxEnc1Sync = "true"'>
                                    <Property SymbolName="Reserved_DigitalInput3"
                                        PublicName="Reserved Digital Input 3 (Enc 1 Sync, pin #A7)"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Digital Input 3 (Enc 1 Sync, pin #A7)"/>
                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$Incr_Drive_Encoder = "true"'>
                                <Property SymbolName="Reserved_DigitalInput4"
                                    PublicName="Reserved Digital Input 4 (Enc 2 A, pin #A6)"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Reserved Digital Input 4 (Enc 2 A, pin #A6)"/>

                                <Property SymbolName="Reserved_DigitalInput5"
                                    PublicName="Reserved Digital Input 5 (Enc 2 B, pin #A13)"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Reserved Digital Input 5 (Enc 2 B, pin #A13)"/>
                            </xsl:if>


                            <xsl:if test='$Incr_Drive_Encoder = "false"'>
                                <xsl:if test='$AuxEnc2Base = "false"'>
                                    <Property SymbolName="DigitalInput4"
                                        PublicName="Digital Input 4 value, pin #A6"
                                        DataType="BOOLEAN"
                                        IOType="Digital Input Sensor"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 4 value, pin #A6"/>

                                    <Property SymbolName="DigitalInput5"
                                        PublicName="Digital Input 5 value, pin #A13"
                                        DataType="BOOLEAN"
                                        IOType="Digital Input Sensor"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 5 value, pin #A13"/>
                                </xsl:if>
                                <xsl:if test='$AuxEnc2Base = "true"'>
                                    <Property SymbolName="Reserved_DigitalInput4"
                                        PublicName="Reserved Digital Input 4 (Enc 2 A, pin #A6)"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Digital Input 4 (Enc 2 A, pin #A6)"/>

                                    <Property SymbolName="Reserved_DigitalInput5"
                                        PublicName="Reserved Digital Input 5 (Enc 2 B, pin #A13)"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Digital Input 5 (Enc 2 B, pin #A13)"/>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test='$AuxEnc2Sync = "false"'>
                                <Property SymbolName="DigitalInput6"
                                    PublicName="Digital Input 6 value, pin #A21"
                                    DataType="BOOLEAN"
                                    IOType="Digital Input Sensor"
                                    AccessType="ro"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Digital Input 6 value, pin #A21"/>
                            </xsl:if>
                            <xsl:if test='$AuxEnc2Sync = "true"'>
                                <Property SymbolName="Reserved_DigitalInput6"
                                    PublicName="Reserved Digital Input 6 (Enc 2 Sync, pin #A21)"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Visibility="Internal"
                                    ParameterClass="Runtime"
                                    Remark="Reserved Digital Input 6 (Enc 2 Sync, pin #A21)"/>
                            </xsl:if>

                            <xsl:if test='$SD_Controller = "true"'>
                                <Property SymbolName="FSA1Failure"
                                    PublicName="FSA 1 Failure value, pin #A20"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="FSA 1 Failure value, pin #A20"/>
                                <Property SymbolName="FSA2Failure"
                                    PublicName="FSA 2 Failure value, pin #A19"
                                    DataType="BOOLEAN"
                                    AccessType="ro"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="FSA 2 Failure value, pin #A19"/>
                            </xsl:if>
                            <xsl:if test='$SD_Controller = "false"'>
                                <xsl:if test='$AuxReg1Base = "false"'>
                                    <Property SymbolName="DigitalInput7"
                                        PublicName="Digital Input 7 value, pin #A20"
                                        DataType="BOOLEAN"
                                        IOType="Digital Input Sensor"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 7 value, pin #A20"/>
                                </xsl:if>
                                <xsl:if test='$AuxReg1Base = "true"'>
                                    <Property SymbolName="FSA1Failure"
                                        PublicName="FSA 1 Failure value, pin #A20"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="FSA 1 Failure value, pin #A20"/>
                                </xsl:if>
                                <xsl:if test='$AuxReg2Base = "false"'>
                                    <Property SymbolName="DigitalInput8"
                                        PublicName="Digital Input 8 value, pin #A19"
                                        DataType="BOOLEAN"
                                        IOType="Digital Input Sensor"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 8 value, pin #A19"/>
                                </xsl:if>
                                <xsl:if test='$AuxReg2Base = "true"'>
                                    <Property SymbolName="FSA2Failure"
                                        PublicName="FSA 2 Failure value, pin #A19"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="FSA 2 Failure value, pin #A19"/>
                                </xsl:if>
                            </xsl:if>

                            <xsl:if test='$UseSpotAntennas = "false"'>
                                <Property SymbolName="DigitalInput9"
                                    PublicName="Digital Input 9 value, pin #B22"
                                    DataType="BOOLEAN"
                                    IOType="Digital Input Sensor"
                                    AccessType="ro"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Digital Input 9 value, pin #B22"/>

                                <Property SymbolName="DigitalInput10"
                                    PublicName="Digital Input 10 value, pin #B23"
                                    DataType="BOOLEAN"
                                    IOType="Digital Input Sensor"
                                    AccessType="ro"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Digital Input 10 value, pin #B23"/>
                            </xsl:if>
                            <xsl:if test='$UseSpotAntennas = "true"'>
                                <xsl:if test='$UseMagnetic = "true"'>
                                    <Property SymbolName="SpotAntenna1Valid"
                                        PublicName="Digital Input 9 value, pin #B22"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 9 value, pin #B22"/>

                                    <Property SymbolName="SpotAntenna2Valid"
                                        PublicName="Digital Input 10 value, pin #B23"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input 10 value, pin #B23"/>
                                </xsl:if>

                                <xsl:if test='$UseMagnetic = "false"'>
                                    <Property SymbolName="Reserved_DigitalInput9"
                                        PublicName="Reserved Digital Input 9 (Spot 1 Valid, pin #B22)"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Digital Input 9 (Spot 1 Valid, pin #B22)"/>

                                    <Property SymbolName="Reserved_DigitalInput10"
                                        PublicName="Reserved Digital Input 10 (Spot 2 Valid, pin #B23)"
                                        DataType="BOOLEAN"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Digital Input 10 (Spot 2 Valid, pin #B23)"/>
                                </xsl:if>
                            </xsl:if>

                            <Property SymbolName="DigitalInput11"
                                PublicName="Digital Input 11 value, pin #A18"
                                DataType="BOOLEAN"
                                IOType="Digital Input Sensor"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Digital Input 11 value, pin #A18"/>

                            <Property SymbolName="DigitalInput12"
                                PublicName="Digital Input 12 value, pin #A17"
                                DataType="BOOLEAN"
                                IOType="Digital Input Sensor"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Digital Input 12 value, pin #A17"/>

                            <Property SymbolName="AllOK_DigitalOutput1" 
                                PublicName="Reserved Digital Output 1 (All-OK, pin #B8)" 
                                DataType="BOOLEAN" 
                                AccessType="ro" 
                                Visibility="Internal"
                                Default="1"
                                ParameterClass="Runtime" 
                                Remark="Reserved Digital Output 1 (All-OK, pin #B8)"/>

                            <Property SymbolName="DigitalOutput2"
                                PublicName="Digital Output 2 value, pin #B7"
                                DataType="BOOLEAN"
                                IOType="Digital Output"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Digital Output 2 value, pin #B7"/>

                            <Property SymbolName="DigitalOutput3"
                                PublicName="Digital Output 3 value, pin #B6"
                                DataType="BOOLEAN"
                                IOType="Digital Output"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Digital Output 3 value, pin #B6"/>

                            <Property SymbolName="DigitalOutput4"
                                PublicName="Digital Output 4 value, pin #B5"
                                DataType="BOOLEAN"
                                IOType="Digital Output"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Digital Output 4 value, pin #B5"/>

                            <Property SymbolName="DigitalOutput5"
                                PublicName="Digital Output 5 value, pin #B4"
                                DataType="BOOLEAN"
                                IOType="Digital Output"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Digital Output 5 value, pin #B4"/>

                            <Property SymbolName="DigitalOutput6"
                                PublicName="Digital Output 6 value, pin #B1"
                                DataType="BOOLEAN"
                                IOType="Digital Output"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Digital Output 6 value, pin #B1"/>

                            <xsl:if test='$SD_Controller = "false"'>
                                <xsl:if test='$AuxReg1Base = "false"'>
                                    <Property SymbolName="DigitalOutput7"
                                        PublicName="Digital Output 7 value, pin #B3"
                                        DataType="BOOLEAN"
                                        IOType="Digital Output"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Output 7 value, pin #B3"/>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test='$Incr_Drive_Encoder = "false"'>
                                <xsl:if test='$AuxReg2Base = "false"'>
                                    <Property SymbolName="DigitalOutput8"
                                        PublicName="Digital Output 8 value, pin #B2"
                                        DataType="BOOLEAN"
                                        IOType="Digital Output"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Output 8 value, pin #B2"/>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test='$UseAuxPWMOutput = "false"'>
                                <Property SymbolName="DigitalOutput9"
                                    PublicName="Digital Output 9 value, pin #A5"
                                    DataType="BOOLEAN"
                                    IOType="Digital Output"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Digital Output 9 value, pin #A5"/>
                                <Property SymbolName="DigitalOutput10"
                                    PublicName="Digital Output 10 value, pin #A12"
                                    DataType="BOOLEAN"
                                    IOType="Digital Output"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Digital Output 10 value, pin #A12"/>
                                <Property SymbolName="DigitalOutput11"
                                    PublicName="Digital Output 11 value, pin #A11"
                                    DataType="BOOLEAN"
                                    IOType="Digital Output"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Digital Output 11 value, pin #A11"/>
                            </xsl:if>

                            <Property SymbolName="DigitalOutput12"
                                PublicName="Digital Output 12 value, pin #A3"
                                DataType="BOOLEAN"
                                IOType="Digital Output"
                                AccessType="rw"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Digital Output 12 value, pin #A3"/>

                            <xsl:if test='$SD_Controller = "false"'>
                                <xsl:if test='$AuxReg1Base = "false"'>
                                    <Property SymbolName="DigitalOutput13"
                                        PublicName="Digital Output 13 value, pin #A10"
                                        DataType="BOOLEAN"
                                        IOType="Digital Output"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Output 13 value, pin #A10"/>

                                    <Property SymbolName="DigitalOutput14"
                                        PublicName="Digital Output 14 value, pin #A2"
                                        DataType="BOOLEAN"
                                        IOType="Digital Output"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Output 14 value, pin #A2"/>
                                </xsl:if>

                                <xsl:if test='$AuxReg2Base = "false"'>
                                    <Property SymbolName="DigitalOutput15"
                                        PublicName="Digital Output 15 value, pin #A9"
                                        DataType="BOOLEAN"
                                        IOType="Digital Output"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Output 15 value, pin #A9"/>

                                    <Property SymbolName="DigitalOutput16"
                                        PublicName="Digital Output 16 value, pin #A16"
                                        DataType="BOOLEAN"
                                        IOType="Digital Output"
                                        AccessType="rw"
                                        Renameable="true"
                                        Visibility="Operator"
                                        ParameterClass="Runtime"
                                        Remark="Digital Output 16 value, pin #A16"/>
                                </xsl:if>
                            </xsl:if>



                            <Property SymbolName="AnalogInput1"
                                PublicName="Analog Input 1 value, pin #B15"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 1 value, pin #B15. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <Property SymbolName="AnalogInput2"
                                PublicName="Analog Input 2 value, pin #B17"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 2 value, pin #B17. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <xsl:if test='$UseSpotAntennas = "false"'>
                                <Property SymbolName="AnalogInput3"
                                    PublicName="Analog Input 3 value, pin #B10"
                                    DataType="INTEGER16"
                                    IOType="Analog Input"
                                    AccessType="ro"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Analog Input 3 value, pin #B10. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                                <Property SymbolName="AnalogInput4"
                                    PublicName="Analog Input 4 value, pin #B18"
                                    DataType="INTEGER16"
                                    IOType="Analog Input"
                                    AccessType="ro"
                                    Renameable="true"
                                    Visibility="Operator"
                                    ParameterClass="Runtime"
                                    Remark="Analog Input 4 value, pin #B18. The value is the applied input voltage (in Volts) * Scale + Offset"/>
                            </xsl:if>
                            <xsl:if test='$UseSpotAntennas = "true"'>
                                <xsl:if test='$UseMagnetic = "false"'>
                                    <Property SymbolName="Reserved_AnInp3"
                                        PublicName="Reserved Analog Input 3 (Spot 1 Offset Value, pin #B10)"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Analog Input 3 (Spot 1 Offset Value, pin #B10)"/>

                                    <Property SymbolName="Reserved_AnInp4"
                                        PublicName="Reserved Analog Input 4 (Spot 2 Offset Value, pin #B18)"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Analog Input 4 (Spot 2 Offset Value, pin #B18)"/>
                                </xsl:if>
                                <xsl:if test='$UseMagnetic = "true"'>
                                    <Property SymbolName="SpotAntenna1Offset"
                                        PublicName="Reserved Analog Input 3 (Spot 1 Offset Value, pin #B10)"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Analog Input 3 (Spot 1 Offset Value, pin #B10)"/>

                                    <Property SymbolName="SpotAntenna2Offset"
                                        PublicName="Reserved Analog Input 4 (Spot 2 Offset Value, pin #B18)"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Reserved Analog Input 4 (Spot 2 Offset Value, pin #B18)"/>
                                </xsl:if>
                            </xsl:if>

                            <Property SymbolName="AnalogInput5"
                                PublicName="Analog Input 5 value, pin #B11"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 5 value, pin #B11. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <Property SymbolName="AnalogInput6"
                                PublicName="Analog Input 6 value, pin #B19"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 6 value, pin #B19. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <Property SymbolName="AnalogInput7"
                                PublicName="Analog Input 7 value, pin #B12"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 7 value, pin #B12. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <Property SymbolName="AnalogInput8"
                                PublicName="Analog Input 8 value, pin #B20"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 8 value, pin #B20. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <Property SymbolName="AnalogInput9"
                                PublicName="Analog Input 9 value, pin #B13"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 9 value, pin #B13. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <Property SymbolName="AnalogInput10"
                                PublicName="Analog Input 10 value, pin #B21"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 10 value, pin #B21. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <Property SymbolName="AnalogInput11"
                                PublicName="Analog Input 11 value, pin #B14"
                                DataType="INTEGER16"
                                IOType="Analog Input"
                                AccessType="ro"
                                Renameable="true"
                                Visibility="Operator"
                                ParameterClass="Runtime"
                                Remark="Analog Input 11 value, pin #B14. The value is the applied input voltage (in Volts) * Scale + Offset"/>

                            <xsl:if test='$UseAuxPWMOutput = "true"'>
                                <Property SymbolName="PWMOutput1"
                                    PublicName="PWM Output 1 value, pin #A5"
                                    DataType="INTEGER16"
                                    IOType="Analog Output"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Operator"
                                    Min="0"
                                    Max="1000"
                                    Default="0"
                                    Unit="0.1%"
                                    ParameterClass="Runtime"
                                    Remark="PWM Output 1 value, pin #A5. The value is the duty cycle of the output."/>

                                <Property SymbolName="PWMOutput2"
                                    PublicName="PWM Output 2 value, pin #A12"
                                    DataType="INTEGER16"
                                    IOType="Analog Output"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Operator"
                                    Min="0"
                                    Max="1000"
                                    Default="0"
                                    Unit="0.1%"
                                    ParameterClass="Runtime"
                                    Remark="PWM Output 2 value, pin #A12. The value is the duty cycle of the output."/>

                                <Property SymbolName="PWMOutput3"
                                    PublicName="PWM Output 3 value, pin #A11"
                                    DataType="INTEGER16"
                                    IOType="Analog Output"
                                    AccessType="rw"
                                    Renameable="true"
                                    Visibility="Operator"
                                    Min="0"
                                    Max="1000"
                                    Default="0"
                                    Unit="0.1%"
                                    ParameterClass="Runtime"
                                    Remark="PWM Output 3 value, pin #A11. The value is the duty cycle of the output."/>
                            </xsl:if>

                            <xsl:if test='$UseEdgeDetectDigInp = "true"'>
                                <xsl:if test='$NumberOfEdgeDetectDigInp >= 1'>
                                    <Property SymbolName="RisingEdge1"
                                        PublicName="Digital Input time for the first input choosen, time when Input was activated relative the last sync"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="ms"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input time for the first input choosen, time when Input was activated relative the last sync"/>
                                    <Property SymbolName="FallingEdge1"
                                        PublicName="Digital Input time for the first input choosen, time when Input was deactivated relative the last sync"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="ms"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input time for the first input choosen, time when Input was deactivated relative the last sync"/>
                                </xsl:if>
                                <xsl:if test='$NumberOfEdgeDetectDigInp >= 2'>
                                    <Property SymbolName="RisingEdge2"
                                        PublicName="Digital Input time for the second input choosen, time when Input was activated relative the last sync"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="ms"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input time for the second input choosen, time when Input was activated relative the last sync"/>
                                    <Property SymbolName="FallingEdge2"
                                        PublicName="Digital Input time for the second input choosen, time when Input was deactivated relative the last sync"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="ms"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input time for the second input choosen, time when Input was deactivated relative the last sync"/>
                                </xsl:if>
                                <xsl:if test='$NumberOfEdgeDetectDigInp >= 3'>
                                    <Property SymbolName="RisingEdge3"
                                        PublicName="Digital Input time for the third input choosen, time when Input was activated relative the last sync"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="ms"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input time for the third input choosen, time when Input was activated relative the last sync"/>
                                    <Property SymbolName="FallingEdge3"
                                        PublicName="Digital Input time for the third input choosen, time when Input was deactivated relative the last sync"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="ms"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input time for the third input choosen, time when Input was deactivated relative the last sync"/>
                                </xsl:if>
                                <xsl:if test='$NumberOfEdgeDetectDigInp = 4'>
                                    <Property SymbolName="RisingEdge4"
                                        PublicName="Digital Input time for the fourth input choosen, time when Input was activated relative the last sync"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="ms"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input time for the fourth input choosen, time when Input was activated relative the last sync"/>
                                    <Property SymbolName="FallingEdge4"
                                        PublicName="Digital Input time for the fourth input choosen, time when Input was deactivated relative the last sync"
                                        DataType="INTEGER16"
                                        AccessType="ro"
                                        Unit="ms"
                                        Visibility="Internal"
                                        ParameterClass="Runtime"
                                        Remark="Digital Input time for the fourth input choosen, time when Input was deactivated relative the last sync"/>
                                </xsl:if>
                            </xsl:if>

                            <Property SymbolName="Reg1Output"
                                PublicName="Regulator 1 output value"
                                DataType="INTEGER16"
                                AccessType="ro"
                                Visibility="Internal"
                                ParameterClass="Runtime"
                                Remark="Regulator 1 output value"/>

                            <Property SymbolName="Reg2Output"
                                PublicName="Regulator 2 output value"
                                DataType="INTEGER16"
                                AccessType="ro"
                                Visibility="Internal"
                                ParameterClass="Runtime"
                                Remark="Regulator 2 output value"/>

                            <Property SymbolName="GroundFaultEvent"
                                PublicName="GroundFaultEvent"
                                DataType="BOOLEAN"
                                AccessType="rw"
                                Unit=""
                                Default="1"
                                Visibility="OEM"
                                ParameterClass="Config"
                                Remark="If set to true, a ground fault will cause a system event 229."/>

                            <MasterProperty SymbolName="GroundFaultActive"
                                PublicName="GroundFaultActive"
                                DataType="BOOLEAN"
                                AccessType="ro"
                                Unit=""
                                Visibility="OEM"
                                ParameterClass="Runtime"
                                Remark="True if a ground fault is present"
                                ReadPeriod="Periodic,2000,0x3500,2,0"/>

                            <MasterProperty SymbolName="Temperature"
                                PublicName="Temperature"
                                DataType="INTEGER32"
                                AccessType="ro"
                                Unit="decicelsius"
                                Visibility="OEM"
                                ParameterClass="Runtime"
                                Remark="Current temperature"	
                                ReadPeriod="Periodic,2000,0x5E0B,0,0"/>

                            <MasterProperty SymbolName="XV_Out"
                                PublicName="xv out voltage"
                                DataType="INTEGER32"
                                AccessType="ro"
                                Unit="centivolt"
                                Visibility="OEM"
                                ParameterClass="Runtime"
                                Remark="Current xv out voltage"	
                                ReadPeriod="Periodic,2000,0x5E0C,0,0"/>

                            <MasterProperty SymbolName="B_Plus"
                                PublicName="b plus voltage"
                                DataType="INTEGER32"
                                AccessType="ro"
                                Unit="centivolt"
                                Visibility="OEM"
                                ParameterClass="Runtime"
                                Remark="Current b plus voltage"	
                                ReadPeriod="Periodic,2000,0x5E0D,0,0"/>

                        </Properties>
                        <xsl:if test='$UseSpotAntennas = "true"'>
                            <ConnectionPoints>
                                <ConnectionPoint SymbolName="Spot1" DataType="SpotAntennaConnector" />
                                <ConnectionPoint SymbolName="Spot2" DataType="SpotAntennaConnector" />
                            </ConnectionPoints>
                        </xsl:if>
                    </ComponentSubType>
                </Configuration>
            </File>
    </xsl:template>
    </xsl:stylesheet>
</File>

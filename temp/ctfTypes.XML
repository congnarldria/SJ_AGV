<top xmlns:ctf="urn:NDC8ComponentTypeFile" xmlns:vc="urn:NDC8ComponentTemplateFile" xmlns="urn:NDC8AllComponentTypes"><comptypes><comptype compname="IntraVehicleLocation_T" remark="Position within a vehicle"><properties><property propname="X" propremark="Vehicle relative position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Vehicle relative position Y" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Vehicle relative angle" datatype="REAL64" symboladdress=""></property></properties></comptype><comptype compname="Device_T" remark="Generic device"><properties><property propname="DeviceType" propremark="Device type identifier" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="Vmc_T" remark="System information"><properties><property propname="AllOK" propremark="Vehicle controller AllOK signal" datatype="BOOLEAN" symboladdress=""></property><property propname="Clock" propremark="Vehicle clock (UTC). Seconds since 00:00:00 January 1 1970. Valid after the vehicle controller has connected to NT8000 followed by a restart of the vehicle controller." datatype="INTEGER32" symboladdress=""></property><property propname="LocalClock" propremark="Vehicle local clock adjusted for local timezone and daylight savings time. Seconds since 00:00:00 January 1 1970. Valid after the vehicle controller has connected to NT8000 followed by a restart of the vehicle controller." datatype="INTEGER32" symboladdress=""></property><property propname="PlcLoopTime" propremark="Time used for executing the last PLC loop." datatype="INTEGER32" symboladdress=""></property><property propname="PlcLoopTimeMax" propremark="Max time used for executing the PLC loop." datatype="INTEGER32" symboladdress=""></property><property propname="PlcLoopTimeAvg" propremark="Average time used for executing the PLC loop the last 100 times." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="Wlan_T" remark="WLAN information"><properties><property propname="AccessPoint" propremark="MAC address of the access point that is currently used." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SSID" propremark="SSID of the access point that is currently used. Set to - when we are not connected to an access point." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Channel" propremark="Currently used WLAN channel." datatype="INTEGER32" symboladdress=""></property><property propname="SignalLevel" propremark="Current signal level of the WLAN connection." datatype="INTEGER32" symboladdress=""></property><property propname="BitRate" propremark="Current WLAN bit rate." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="Master_T" remark="Master information"><properties><property propname="MasterLinkUp" propremark="Vehicle is connected to master controller" datatype="BOOLEAN" symboladdress=""></property><property propname="MasterCom" propremark="Vehicle communication to master controller" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="Vehicle_T" remark="Generic vehicle configuration"><properties><property propname="VehicleType" propremark="Vehicle type" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="VehicleID" propremark="Vehicle Identity in the NDC8 System. Configured in the vehicle web interface." datatype="INTEGER32" symboladdress=""></property><property propname="IndividualName" propremark="Name for this vehicle individual. Configured in the vehicle web interface. Only set when external individual parameter file is used." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="OptionClass" propremark="Defines vehicle option class. Used when verifying options with the master computer." datatype="INTEGER32" symboladdress=""></property><property propname="MaxSpeed" propremark="This symbol defines the maximum speed for the vehicle defined in mm/s" datatype="INTEGER32" symboladdress=""></property><property propname="SimulationMode" propremark="Vehicle simulation mode" datatype="BOOLEAN" symboladdress=""></property><property propname="StopTolerance" propremark="Distance before the stop point at which the speed is set to zero" datatype="INTEGER32" symboladdress=""></property><property propname="StopPointTrim" propremark="Moves the stop point to adjust for vehicle unique mechanics in the load handling. A positive value moves the stop point in the vehicles forward direction, i.e., the vehicle drives longer on a forward segment and stops earlier on a backward segment" datatype="INTEGER32" symboladdress=""></property><property propname="CreepSpeed" propremark="Speed used during CreepDistance. CreepSpeed is used in the end of a drive order to be able to stop as close at the destination point as possible. Used in conjunction with StopTolerance, this will give a high stop precision" datatype="INTEGER32" symboladdress=""></property><property propname="CreepDistance" propremark="The distance before the destination point where the vehicle shall drive with selected creep-speed" datatype="INTEGER32" symboladdress=""></property><property propname="AccSlope" propremark="Vehicle acceleration" datatype="INTEGER32" symboladdress=""></property><property propname="DecSlope" propremark="Deceleration used during slow down.&#xD;&#xA;Deceleration slope changes dynamically during ramping down to be able&#xD;&#xA;hit the target point or speed more precisely. The value of this&#xD;&#xA;parameter is used as the initial slope when ramping down is started.&#xD;&#xA;&#xD;&#xA;The controller can temporarily use a higher deceleration but not higher than&#xD;&#xA;Vehicle.EmcyDecSlope." datatype="INTEGER32" symboladdress=""></property><property propname="EmcyDecSlope" propremark="Deceleration used in automatic mode when outside safety-zone or position lost. This slope is also used when QuickStop symbol is set.&#xD;&#xA;Note that this slope is not normally used when the EStop button is pressed." datatype="INTEGER32" symboladdress=""></property><property propname="SpeedDelayCompensation" propremark="Delay between the vehicle controller commanding a lower speed and the vehicle actually starting to slow down." datatype="INTEGER32" symboladdress=""></property><property propname="SteeringDelayCompensation" propremark="Compensation for delay in the steering control loop" datatype="INTEGER32" symboladdress=""></property><property propname="Blocked" propremark="Blocked at the end of the last segment." datatype="BOOLEAN" symboladdress=""></property><property propname="CarrierType" propremark="Defines vehicle carriertype 1 to 8 (0 means any). Used in conjunction with segment carriertypes in the layout" datatype="INTEGER32" symboladdress=""></property><property propname="WaitForWheelTurnMaxAngle" propremark="Maximum difference between actual (enc) wheel angle and new (set) wheel angle to make vehicle start driving. In manual and semi-manual mode this function is applied only once each time entering the mode. Hence, if writing a new value to the parameter, it will not have effect until next time entering manual or semimanual-mode." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="BlockedInfo_T" remark="Blocked info"><properties><property propname="BlockedById" propremark="0 = Unknown, 1 = Not blocked, 2 = Blocked by SSIO, 3 = Blocked by other Agv(s)." datatype="INTEGER32" symboladdress=""></property><property propname="BlockedByText" propremark="Blocked by text." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="LogicalLine" propremark="Logical SSIO line. Valid only when blocked by SSIO." datatype="INTEGER32" symboladdress=""></property><property propname="UnitNumber" propremark="Unit id in a logical line. Valid only when blocked by SSIO." datatype="INTEGER32" symboladdress=""></property><property propname="IoId" propremark="ID of input/output in unit. Valid only when blocked by SSIO." datatype="INTEGER32" symboladdress=""></property><property propname="IoType" propremark="0 = Input, 1 = Output. Valid only when blocked by SSIO." datatype="INTEGER32" symboladdress=""></property><property propname="Status" propremark="0 = OFF, 1 = ON, 2 = Flash 1Hz. Valid only when blocked by SSIO." datatype="INTEGER32" symboladdress=""></property><property propname="Vehicle1" propremark="ID of blocking vehicle. Valid only when blocked by other AGV" datatype="INTEGER32" symboladdress=""></property><property propname="Vehicle2" propremark="ID of blocking vehicle. Valid only when blocked by other AGV" datatype="INTEGER32" symboladdress=""></property><property propname="Vehicle3" propremark="ID of blocking vehicle. Valid only when blocked by other AGV" datatype="INTEGER32" symboladdress=""></property><property propname="Vehicle4" propremark="ID of blocking vehicle. Valid only when blocked by other AGV" datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="VehicleOptions_T" remark="Vehicle dongle options"><properties><property propname="StatusID" propremark="Verfication of options. 0 = Valid, 1 = Unknown, 2 = Invalid option(s): 'number(s)'" datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="MaxNoVehicles" propremark="Number of vehicles in class supported by dongle and software options KEY CODE." datatype="INTEGER32" symboladdress=""></property><property propname="MaxSpeed" propremark="Maximum travel speed limit supported by dongle and software options KEY CODE." datatype="INTEGER32" symboladdress=""></property><property propname="VehicleOptClass" propremark="Acknowledged vehicle option class by master computer." datatype="INTEGER32" symboladdress=""></property><property propname="VehicleTypeQuad" propremark="Quad vehicle supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="VehicleTypeMultiWheel" propremark="Multi vehicle supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="RadioComm" propremark="Radio on serial port supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="NavLaser" propremark="Navigation method Laser supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="NavSpot" propremark="Navigation method Spot supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="NavMagnetic" propremark="Navigation method Magnetic supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="NavInductive" propremark="Navigation method Inductive supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="NavWall" propremark="Navigation method Wall supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="ExternalPath" propremark="Sending an external path to the vehicle supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="RangeAndWalls" propremark="Sending wall data to the vehicle or to read range sensor scan data supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="DualCANBus" propremark="A second CANbus supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="VehicleTypeMultiWheelerSD" propremark="Multi wheeler SD supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="VehicleTypeMultiWheelerQuad4" propremark="Multi wheeler Quad for max 4 steeringwheels supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="VehicleTypeMultiWheelerQuad8" propremark="Multi wheeler Quad for max 8 steeringwheels supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="VehicleTypeMultiWheelerQuad16" propremark="Multi wheeler Quad for max 16 steeringwheels supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="VehicleTypeMultiWheelerQuad20" propremark="Multi wheeler Quad for max 20 steeringwheels supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="IMUSupport" propremark="IMU supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="NetworkInterface" propremark="Vehicle controller TCP/UDP interface supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="NavBarcode" propremark="Navigation method Barcode supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property><property propname="ThirdPartyNavigationSensor" propremark="Third party navigation sensor(s) supported by dongle and software options KEY CODE." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="Wheel_T" remark="Generic wheel"><properties><property propname="MaxSpeed" propremark="Max speed allowed" datatype="INTEGER32" symboladdress=""></property><property propname="X" propremark="Wheel position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Wheel position Y" datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="LS2000Scanner_T" remark="Position sensor using rotating laser beam"><properties><property propname="DetectDistance" propremark="Sight distance for laser scanner" datatype="INTEGER32" symboladdress=""></property><property propname="Sensitivity" propremark="Detection sensitivity level. High sensitivity give more detections but also potentially increases number of false.&#xD;&#xA;Low sensitivity eliminates a lot of false detecions but also removes potentially real (good) detections." datatype="INTEGER32" symboladdress=""></property><property propname="ReflectorShadow" propremark="Defines the length (in mm) of a reflector shadow - the area&#xD;&#xA;immediately following a detected reflector where the LS2000&#xD;&#xA;ignores any new reflectors.  The recommended value for this&#xD;&#xA;parameter is 0.&#xD;&#xA;&#xD;&#xA;Note: This parameter is incompatible with the UpsideDown&#xD;&#xA;parameter." datatype="INTEGER32" symboladdress=""></property><property propname="X" propremark="Laser Scanner position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Laser Scanner position Y" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Laser Scanner position Angle" datatype="REAL64" symboladdress=""></property><property propname="UpsideDown" propremark="Indicates if the range sensor is mounted upside down.&#xD;&#xA;&#xD;&#xA;Set to False if the range sensor is mounted right side up.&#xD;&#xA;Set to True if the range sensor is mounted upside down." datatype="BOOLEAN" symboladdress=""></property><property propname="IP" propremark="The IP address used to connect to the scanner." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Field1_X1" propremark="Bottom X position in vehicle coordinate where the field starts. This value should be less than Field1_X2 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field1_X2" propremark="Top X position in vehicle coordinate where the field ends. This value should be greater than Field1_X1 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field1_Y1" propremark="Right Y position in vehicle coordinate where the field starts. This value should be less than Field1_Y2 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field1_Y2" propremark="Left Y position in vehicle coordinate where the field ends. This value should be greater than Field1_Y1 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field1_Triggered" propremark="True if something is inside field" datatype="BOOLEAN" symboladdress=""></property><property propname="Field1_Dist" propremark="Distance from sensor to nearest object inside field. Valid only if Field1_Triggered is true." datatype="INTEGER32" symboladdress=""></property><property propname="Field2_X1" propremark="Bottom X position in vehicle coordinate where the field starts. This value should be less than Field2_X2 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field2_X2" propremark="Top X position in vehicle coordinate where the field ends. This value should be greater than Field2_X1 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field2_Y1" propremark="Right Y position in vehicle coordinate where the field starts. This value should be less than Field2_Y2 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field2_Y2" propremark="Left Y position in vehicle coordinate where the field ends. This value should be greater than Field1_Y1 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field2_Triggered" propremark="True if something is inside field" datatype="BOOLEAN" symboladdress=""></property><property propname="Field2_Dist" propremark="Distance from sensor to nearest object inside field. Valid only if Field2_Triggered is true." datatype="INTEGER32" symboladdress=""></property><property propname="Sector1_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector1_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector1_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Sector2_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector2_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector2_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Sector3_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector3_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector3_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Sector4_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector4_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector4_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Sector5_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector5_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector5_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Connected" propremark="True when the communication with LS2000 is working." datatype="BOOLEAN" symboladdress=""></property><property propname="NavActive" propremark="Use this sensor for navigation at the moment" datatype="BOOLEAN" symboladdress=""></property><property propname="Attached" propremark="When set to false the vehicle controller will not try to communicate with this sensor nor use measurement from it." datatype="BOOLEAN" symboladdress=""></property><property propname="Temperature" propremark="The temperature reported by the LS2000, updated every 2 seconds when LS2000 is used. This value is only valid when Connected=1." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="MicroScan3Scanner_T" remark="Position sensor using rotating laser beam"><properties><property propname="DetectDistance" propremark="Sight distance for laser scanner. Increasing this may increase the risk of causing false reflector detecions from the sensor.&#xD;&#xA;Covering shiny objects at this range from the vehicle, or adjusting Sensitivity may be needed." datatype="INTEGER32" symboladdress=""></property><property propname="Sensitivity" propremark="Detection sensitivity level. At 100, all measurements detected as reflector by the sensor are used.&#xD;&#xA;Low sensitivity eliminates a lot of false detecions but also removes potentially real (good) detections.&#xD;&#xA;Note: The value depends on the strength of the received signal reported by the sensor, and may vary between models as well as individuals." datatype="INTEGER32" symboladdress=""></property><property propname="X" propremark="Laser Scanner position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Laser Scanner position Y" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Laser Scanner position Angle" datatype="REAL64" symboladdress=""></property><property propname="UpsideDown" propremark="Indicates if the range sensor is mounted upside down.&#xD;&#xA;&#xD;&#xA;Set to False if the range sensor is mounted right side up.&#xD;&#xA;Set to True if the range sensor is mounted upside down." datatype="BOOLEAN" symboladdress=""></property><property propname="IP" propremark="The IP address used to connect to the scanner." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Field1_X" propremark="Top of the field. Distance from the sensor where the field ends" datatype="INTEGER32" symboladdress=""></property><property propname="Field1_Y1" propremark="Right Y position where the field starts. This value should be less than Field1_Y2 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field1_Y2" propremark="Left Y position where the field ends. This value should be greater than Field1_Y1 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field1_Triggered" propremark="True if something is inside field" datatype="BOOLEAN" symboladdress=""></property><property propname="Field1_Dist" propremark="Distance to nearest object inside field. Valid only if Field1_Triggered is true." datatype="INTEGER32" symboladdress=""></property><property propname="Field2_X" propremark="Top of the field. Distance from the sensor where the field ends" datatype="INTEGER32" symboladdress=""></property><property propname="Field2_Y1" propremark="Right Y position where the field starts. This value should be less than Field2_Y2 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field2_Y2" propremark="Left Y position where the field ends. This value should be greater than Field2_Y1 to define a valid field." datatype="INTEGER32" symboladdress=""></property><property propname="Field2_Triggered" propremark="True if something is inside field" datatype="BOOLEAN" symboladdress=""></property><property propname="Field2_Dist" propremark="Distance to nearest object inside field. Valid only if Field2_Triggered is true." datatype="INTEGER32" symboladdress=""></property><property propname="Sector1_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector1_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector1_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Sector2_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector2_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector2_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Sector3_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector3_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector3_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Sector4_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector4_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector4_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Sector5_Ignore" propremark="If enabled bearings within sector will be ignored." datatype="BOOLEAN" symboladdress=""></property><property propname="Sector5_Heading" propremark="Heading of sector. Measured from the symmetry axis of the vehicle to the center of the sector." datatype="INTEGER32" symboladdress=""></property><property propname="Sector5_Size" propremark="Size of sector. The ignored sector is from Heading - Size/2 to Heading + Size/2." datatype="INTEGER32" symboladdress=""></property><property propname="Connected" propremark="True when the communication with the scanner is working." datatype="BOOLEAN" symboladdress=""></property><property propname="NavActive" propremark="Use this sensor for navigation at the moment" datatype="BOOLEAN" symboladdress=""></property><property propname="Attached" propremark="When set to false the vehicle controller will not try to communicate with this sensor nor use measurement from it." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="SpotAntenna_T" remark="Sensor for detecting spots in the floor"><properties><property propname="X" propremark="Antenna position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Antenna position Y" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Antenna position Angle" datatype="REAL64" symboladdress=""></property><property propname="IgnoreUnknown" propremark="If enabled, unknown spot will not cause navigation error." datatype="BOOLEAN" symboladdress=""></property><property propname="MeasurementX" propremark="X-coordinate of last detected spot" datatype="INTEGER32" symboladdress=""></property><property propname="MeasurementY" propremark="Y-coordinate of last detected spot" datatype="INTEGER32" symboladdress=""></property><property propname="SpotId" propremark="Identity of last detected spot. O means unknown spot" datatype="INTEGER32" symboladdress=""></property><property propname="ResidualX" propremark="X-coordinate residual of last detected spot in vehicle coordinate system. Only valid if SpotId is non-zero." datatype="INTEGER32" symboladdress=""></property><property propname="ResidualY" propremark="Y-coordinate residual of last detected spot in vehicle coordinate system. Only valid if SpotId is non-zero." datatype="INTEGER32" symboladdress=""></property><property propname="Connection" propremark="Name of the device the antenna is connected to and slot. Example: SDIO_1.Spot1." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="NavActive" propremark="If enabled the antenna will be used for navigation." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="MagneticAntenna_T" remark="Sensor for detecting magnetic tapes on the floor"><properties><property propname="X" propremark="Antenna position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Antenna position Y" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Antenna position Angle" datatype="REAL64" symboladdress=""></property><property propname="OffsetInput" propremark="Analog input used for the antennas offset signal. Example: SDIO_1.AnalogInput1" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="ValidInput" propremark="Digital input slot used for the antennas valid signal. Example: SDIO_1.DigitalInput1." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="IgnoreUnknown" propremark="If enabled, unknown wire will not cause navigation error." datatype="BOOLEAN" symboladdress=""></property><property propname="IgnoreMissing" propremark="If enabled, missed wire will not cause navigation error." datatype="BOOLEAN" symboladdress=""></property><property propname="NavActive" propremark="If enabled the antenna will be used for navigation. Does not effect semi manual guidance." datatype="BOOLEAN" symboladdress=""></property><property propname="SemiManual_ProportionalPart" propremark="P part of the PID controller" datatype="REAL64" symboladdress=""></property><property propname="SemiManual_IntegratingPart" propremark="I part of the PID controller." datatype="REAL64" symboladdress=""></property><property propname="SemiManual_DerivativePart" propremark="D part of the PID controller." datatype="REAL64" symboladdress=""></property><property propname="SemiManual_IntegratingLimit" propremark="Limit for I part." datatype="REAL64" symboladdress=""></property><property propname="WireId" propremark="Identity of wire." datatype="INTEGER32" symboladdress=""></property><property propname="StatusID" propremark="0 = no wire signal, 1 = good wire, 2 = missing wire signal, 3 = bad wire angle, 4 = multiple wires, 5 = unknown wire, 6 = antenna disabled." datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="InductiveAntenna_T" remark="Sensor for detecting inductive wires on the floor"><properties><property propname="X" propremark="Antenna position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Antenna position Y" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Antenna position Angle" datatype="REAL64" symboladdress=""></property><property propname="OffsetRef" propremark="Symbolic name for offset." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="AngleRef" propremark="Symbolic name for angle." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="FreqIndexRef" propremark="Symbolic name for frequency index." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SignalRef" propremark="Symbolic name for signal." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="OverloadRef" propremark="Symbolic name for overload." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="IgnoreUnknown" propremark="If enabled, unknown wire will not cause navigation error." datatype="BOOLEAN" symboladdress=""></property><property propname="IgnoreMissing" propremark="If enabled, missed wire will not cause navigation error." datatype="BOOLEAN" symboladdress=""></property><property propname="NavActive" propremark="If enabled the antenna will be used for navigation. Does not effect semi manual guidance." datatype="BOOLEAN" symboladdress=""></property><property propname="SemiManual_ProportionalPart" propremark="P part of the PID controller" datatype="REAL64" symboladdress=""></property><property propname="SemiManual_IntegratingPart" propremark="I part of the PID controller." datatype="REAL64" symboladdress=""></property><property propname="SemiManual_DerivativePart" propremark="D part of the PID controller." datatype="REAL64" symboladdress=""></property><property propname="SemiManual_IntegratingLimit" propremark="Limit for I part." datatype="REAL64" symboladdress=""></property><property propname="WireId" propremark="Identity of wire." datatype="INTEGER32" symboladdress=""></property><property propname="WireFrequency" propremark="Frequency of wire." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="StatusID" propremark="0 = no wire signal, 1 = good wire, 2 = missing wire signal, 3 = bad wire angle, 4 = multiple wires, 5 = unknown wire, 6 = antenna disabled." datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="DigitalSensor_T" remark="Sensor for distance markers"><properties><property propname="X" propremark="Sensor position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Sensor position Y" datatype="INTEGER32" symboladdress=""></property><property propname="TrimDistance" propremark="Distance between sensor at the time of an edge and centre of the target." datatype="INTEGER32" symboladdress=""></property><property propname="Delay" propremark="Compensation for delay in sensor." datatype="INTEGER32" symboladdress=""></property><property propname="DigitalInputEdge" propremark="Timestamped edge of digital signal provided by sdio. Example: SDIO_1.RisingEdge1 or SDIO_1.FallingEdge1" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="DigitalInput" propremark="Digital Input that uses the timestamped edge provided by sdio." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="StatusID" propremark="0 = no signal, 1 = good distance marker, 2 = missing signal, 3 = unknown distance marker, 4 = not moving, 5 = double detect" datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="NavActive" propremark="Use this digital sensor for navigation at the moment. A reason&#xD;&#xA;to set NavActive to false is if there are situations when the&#xD;&#xA;digital sensor do not give a good distance update. For example,&#xD;&#xA;when not passing over the distance marker in the normal direction,&#xD;&#xA;when driving off-wire, or when the magnetic- or wire-antennas are&#xD;&#xA;not enabled." datatype="BOOLEAN" symboladdress=""></property><property propname="IgnoreUnknown" propremark="If enabled, unknown distance marker will not cause navigation error." datatype="BOOLEAN" symboladdress=""></property><property propname="IgnoreMissing" propremark="If enabled, missed distance marker will not cause navigation error." datatype="BOOLEAN" symboladdress=""></property><property propname="DistanceMarkerId" propremark="Identity of distance marker." datatype="INTEGER32" symboladdress=""></property><property propname="MeasurementX" propremark="When Status = 1, x-coordinate of last detected distance marker, when Status = 2, x-coordinate where distance marker was excpected." datatype="INTEGER32" symboladdress=""></property><property propname="MeasurementY" propremark="When Status = 1, y-coordinate of last detected distance marker, when Status = 2, y-coordinate where distance marker was excpected." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="InertialSensor_T" remark="Sensor that measure rate of rotation"><properties><property propname="Axis" propremark="The axis in the IMU that gives the angular rate for vehicle." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="NavActive" propremark="Use the angular rate from the IMU when calculating the position of the vehicle." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="SDIOInertialSensor_T" remark="Sensor that measures the rate of rotation"><properties><property propname="IMUAxis" propremark="The axis in the IMU that gives the angular rate for vehicle." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="IMUNavActive" propremark="Use the angular rate from the IMU when calculating the position of the vehicle." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="BarcodeSensor_T" remark="Position marker sensor"><properties><property propname="X" propremark="Sensor position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Sensor position Y" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Sensor position Angle" datatype="REAL64" symboladdress=""></property><property propname="ResidualX" propremark="X-coordinate residual of last detected barcode in vehicle coordinate system.&#xD;&#xA;The residual is the difference between expected and actual barcode position." datatype="INTEGER32" symboladdress=""></property><property propname="ResidualY" propremark="Y-coordinate residual of last detected barcode in vehicle coordinate system.&#xD;&#xA;The residual is the difference between expected and actual barcode position." datatype="INTEGER32" symboladdress=""></property><property propname="ResidualAngle" propremark="Angle residual of last detected barcode.&#xD;&#xA;The residual is the difference between expected and actual barcode angle." datatype="INTEGER32" symboladdress=""></property><property propname="IgnoreMissing" propremark="If enabled, missed position marker will not cause navigation error." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="ReflectorInit_T" remark="Find initial postion of vehicle using reflectors"><properties><property propname="StatusID" propremark="0 = position found, 1 = too few angles, 2 = bad spread of angles,  3 = too many false angles (failed to associate angles with known reflectors within specified area), 4 = ambiguous position (alias point), 5 = aborted, 7 = vehicle is moving" datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="WallNavigator_T" remark="Positioning using straight wall segments"><properties><property propname="MissingWeight" propremark="Adjustment of navigation level when no range measurements could be associated to the navigation walls in the layout, although the walls should be within sight for the sensor." datatype="INTEGER32" symboladdress=""></property><property propname="GoodWeight" propremark="Adjustment of adjustment navigation level when some range measurements can be associated to one or more navigation walls in the layout." datatype="INTEGER32" symboladdress=""></property><property propname="NoWeight" propremark="Adjustment of navigation level when no navigation walls are in sight for the sensor." datatype="INTEGER32" symboladdress=""></property><property propname="GoodDistance" propremark="Acceptance window when associating range measurements to navigation walls. Only range measurements who lies at a distance less than GoodDistance from a navigation wall are considered to be observation of the wall." datatype="INTEGER32" symboladdress=""></property><property propname="GoodNumber" propremark="Lower limit on number of associated range measurement. Only of the number of associated range measurements to a navigation wall, in a single range scan, is equal or greater than GoodNumber it will be used for correction the vehicles position." datatype="INTEGER32" symboladdress=""></property><property propname="GoodAngleDev" propremark="Maximal angle deviation between navigation wall and measured wall. The direction of the measured wall is based on the regression line of associated range measurements. Only if the angle deviation is equal to or less than GoodAngleDev the associated range measurements will be used to update the vehicles position." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="NaturalNavigator_T" remark="Positioning using Natural navigation"><properties><property propname="MatchRatio" propremark="Ratio between points matched to map and total number of points in range scan." datatype="INTEGER32" symboladdress=""></property><property propname="LowMatchRatio" propremark="Limit for acceptable match ratio value. Navigation lost if lower and MaxDeadReckoningDistance travelled." datatype="INTEGER32" symboladdress=""></property><property propname="HighMatchRatio" propremark="Max navigation level if match ratio is higher than this. Note that for a Navigation Init to be valid, the match ratio value must be equal or higher than this limit." datatype="INTEGER32" symboladdress=""></property><property propname="Reliability" propremark="Quality of range scan as a position observation." datatype="INTEGER32" symboladdress=""></property><property propname="LowReliability" propremark="Low limit for acceptable reliability value. Navigation lost if lower and MaxDeadReckoningDistance travelled." datatype="INTEGER32" symboladdress=""></property><property propname="HighReliability" propremark="High limit for reliability value. If reliability value is higher than this it will not reduce the navigation level." datatype="INTEGER32" symboladdress=""></property><property propname="CorrectionXLimit" propremark="If VehicleNavigator.CorrectionX is higher than this, navigation is lost. Navlevel starts to decrease at half of this limit." datatype="INTEGER32" symboladdress=""></property><property propname="CorrectionYLimit" propremark="If VehicleNavigator.CorrectionY is higher than this, navigation is lost. Navlevel starts to decrease at half of this limit." datatype="INTEGER32" symboladdress=""></property><property propname="CorrectionAngleLimit" propremark="If VehicleNavigator.CorrectionAngle is higher than this, navigation is lost. Navlevel starts to decrease at half of this limit." datatype="INTEGER32" symboladdress=""></property><property propname="PointThreshold" propremark="Match point if the Mahalanobi distance is less than this." datatype="REAL64" symboladdress=""></property><property propname="VarScan" propremark="Models uncertainty in range measurement versus dead reckoning." datatype="REAL64" symboladdress=""></property><property propname="SensorTimeout" propremark="Sets navigation level to 0 if no new measurements are received from the sensor within this time limit." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="ReflectorNavigator_T" remark="Positioning using a reflector map and a laser scanner"><properties><property propname="RefStatValid" propremark="Reflector statistics file is valid" datatype="BOOLEAN" symboladdress=""></property><property propname="NumberOfAssociatedReflectors" propremark="Number of associated reflectors detected by the vehicle. Updated every 500 milliseconds." datatype="INTEGER32" symboladdress=""></property><property propname="SelectReflectorType" propremark="Decides the reflector type to be used for navigation.&#xD;&#xA;0 = Automatic, based on the reflectors in the layout.&#xD;&#xA;1 = Flat reflector, measuring center of reflector.&#xD;&#xA;2 = Flat reflector, measuring right edge of reflector.&#xD;&#xA;3 = Cylindrical reflector." datatype="INTEGER32" symboladdress=""></property></properties><operations></operations></comptype><comptype compname="SpotNavigator_T" remark="Positioning using a map of floor spots and a spot antenna"><properties><property propname="MaxSpotDistance" propremark="Max travelled distance without detecting a spot." datatype="INTEGER32" symboladdress=""></property><property propname="GoodSpotWindow" propremark="Acceptance window for observed spots." datatype="INTEGER32" symboladdress=""></property><property propname="MaxInitDistance" propremark="Max travelled distance without detecting two spots after init." datatype="INTEGER32" symboladdress=""></property><property propname="StatusID" propremark="0 = no error, 1 = Distance between spot too long, 2 = false spot detected, 3 = Moved too far without detecting first two spot, 4 = same spot detected twice, 5 = no spot init done" datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="MaxDetectTime" propremark="Upper limit for time between positive and negative flank on the detect signal." datatype="INTEGER32" symboladdress=""></property><property propname="MinDetectDistance" propremark="Lower limit for the distance that the antenna moves between positive and negative flank." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="WireNavigator_T" remark="Positioning using a map of wires"><properties><property propname="NoWireDistance" propremark="Max travelled distance without sensing a wire. This sets a limit on how far the vehicle can move off-wire and still report position known. Typically this will have effect when driving in automatic mode and negotiating a curve off-wire or when manually driving the vehicle off the wire." datatype="INTEGER32" symboladdress=""></property><property propname="MissingWireDistance" propremark="Max travelled distance without sensing an expected wire. The distance is measured from the point where the layout position of a wire for the first time is inside the expect window for the antenna. The expect window is defined by ExpectX and ExpectY around the estimated global position of the antenna. Once the vehicle has moved more then MissingWireDistance without the antenna sensing the wire it will report navigation error (missed wire). This value should be larger than ExpectX plus a margin for position error." datatype="INTEGER32" symboladdress=""></property><property propname="DetectCrossingWireSpeed" propremark="When the antenna is crossing a wire at this speed or slower, detection of the wire is required and a missed detection will stop the vehicle. If the antenna is crossing the wire at a higher speed then missed detection is allowed." datatype="INTEGER32" symboladdress=""></property><property propname="GoodX" propremark="Acceptance (good) window in antenna direction for wire. The acceptance window is defined by GoodX and GoodY around the estimated global position of the antenna. When the antenna is sensing a wire and there is a defined navigation wire in the layout, or part of it, that lies within the acceptance window then the antenna reading is used to update the vehicles position. If the antenna is sensing a wire but there is no wire defined in the layout inside the acceptance window then the vehicle will report navigation error (unknown wire)." datatype="INTEGER32" symboladdress=""></property><property propname="GoodY" propremark="Sideway acceptance (good) window. The acceptance window is defined by GoodX and GoodY around the estimated global position of the antenna. When the antenna is sensing a wire and there is a defined navigation wire in the layout, or part of it, that lies within the acceptance window then the antenna reading is used to update the vehicles position. If the antenna is sensing a wire but there is no wire defined in the layout inside the acceptance window then the vehicle will report navigation error (unknown wire)." datatype="INTEGER32" symboladdress=""></property><property propname="GoodAngle" propremark="Upper limit for deviation between orientation of wire and antenna. Used to decide wether to use the antenna reading or to discard it. The orientation of the antenna is compared with the tangent of associated wire in the layout." datatype="INTEGER32" symboladdress=""></property><property propname="ExpectX" propremark="Size of expect window in antenna-direction for wire. The expect window is defined by ExpectX and ExpectY around the estimated global position of the antenna in the shape of a rectangle with size 2*ExpectX times 2*ExpectY. The expect window is used to decide which wires that should be seen. This is done by picking out wires in the layout that lies within the window." datatype="INTEGER32" symboladdress=""></property><property propname="ExpectY" propremark="Sideway expect window size for wire. The expect window is defined by ExpectX and ExpectY around the estimated global position of the antenna in the shape of a rectangle with size 2*ExpectX times 2*ExpectY. The expect window is used to decide which wires that should be seen. This is done by picking out wires in the layout that lies within the window." datatype="INTEGER32" symboladdress=""></property><property propname="VarAntOffset" propremark="Variance in measured antenna offset" datatype="REAL64" symboladdress=""></property><property propname="MaxAntennaChange" propremark="The wire navigator only uses antenna readings that differ less than MaxAntennaChange compared to previous reading. This is used to filter out spurious measurements as the antenna enters or leaves the wire." datatype="INTEGER32" symboladdress=""></property><property propname="AllowMultipleWires" propremark="With this enabled the wire navigator will use measurements from the antenna even if two or more navigation wires are within the Good window around the antenna. The measurement will be used with less weight by assuming it is an observation of the nearest navigation wire." datatype="BOOLEAN" symboladdress=""></property><property propname="StatusID" propremark="Status identifier. 0 = no error, 1 = unknown wire, 2 = no wire, 3 = missed wire, 4 = unknown distance marker, 5 = missed distance marker, 6 = no init" datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="DistanceMarker_T" remark="Positioning using digital sensors to detenct distance markers"><properties><property propname="GoodMarkerWindow" propremark="Acceptance window size for good distance marker. The acceptance window is defined by GoodMarkerWindow around the estimated global position a distance marker detection. The acceptance window is used when a distance marker has been detected by a digital sensor. If there is a defined distance marker in the layout that lies within the acceptance window then the observation is used to update the vehicles position. Otherwise the vehicle will report navigation error (unknown marker).&#xD;&#xA;This window is also used to decide which distance markers that are expected to be seen. This is done by picking out the distance markers in the layout who lies within a range of this window from the estimated path for the sensor. If the vehicle does not detect a marker within the area where it is expected to be seen, it will report navigation error(missed distance marker)." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="BarcodeNavigator_T" remark="Positioning using a map of floor position markers and a barcode sensor"><properties><property propname="MaxMarkerDistance" propremark="Max travelled distance without detecting a position marker." datatype="INTEGER32" symboladdress=""></property><property propname="VarPosition" propremark="Modeled uncertainty of marker measurement in position." datatype="REAL64" symboladdress=""></property><property propname="GoodDistance" propremark="Acceptance window for the distance between measured and expected position (x, y) of a marker (i.e. upper acceptance limit for BarcodeSensor/ResidualX and ResidualY)." datatype="INTEGER32" symboladdress=""></property><property propname="GoodAngle" propremark="Acceptance window for the difference between measured and expected angle of a marker (i.e. upper acceptance limit for BarcodeSensor/ResidualAngle)." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="VehicleNavigator_T" remark="Estimates vehicle position using navigated position(s) and dead reckoning"><properties><property propname="NavMethod" propremark="Current navigation method, 1 = reflector, 2 = spot, 4 = wire, 5 = wall, 7 = natural, 8 = barcode" datatype="INTEGER32" symboladdress=""></property><property propname="NavMethodText" propremark="Current navigation method." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="StartupNavMethod" propremark="Vehicle navigation method at startup. 1 = reflector, 2 = spot, 4 = wire, 5 = wall, 7 = natural, 8 = barcode" datatype="INTEGER32" symboladdress=""></property><property propname="SetNavMethod" propremark="Set navigation method, 1 = reflector, 2 = spot, 4 = wire, 5 = wall, 7 = natural, 8 = barcode" datatype="INTEGER32" symboladdress=""></property><property propname="SetNavMethodEN" propremark="Set this to request current navigation method to change to SetNavMethod. Clear when SetNavMethodENO is cleared." datatype="BOOLEAN" symboladdress=""></property><property propname="SetNavMethodENO" propremark="Set by background program when SetNavModeError is properly set. Cleared when SetNavMethodEN is cleared." datatype="BOOLEAN" symboladdress=""></property><property propname="SetNavMethodErr" propremark="0 = no error, 1 = not supported by vehicle application." datatype="INTEGER32" symboladdress=""></property><property propname="SetNavMethodErrText" propremark="Error text." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="IgnoreAbnormalEncVal" propremark="When enabled a single sample with abnormal encoder values will not cause position unknown. Instead previous encoder values are used to update position." datatype="BOOLEAN" symboladdress=""></property><property propname="RangeLogInhibit" propremark="Minimal time between range scan sent to black box file and service tool. Only read on startup of vehicle controller." datatype="INTEGER32" symboladdress=""></property><property propname="NavLevelEventLimit" propremark="A system event will be sent if Position.NavLevel goes below NavLevelEventLimit when the vehicle is in Automatic mode. Set to 0 to disable." datatype="INTEGER32" symboladdress=""></property><property propname="SleepTime" propremark="No position updates from sensor data when the vehicle has been standing still this time or longer. If SleepTime is set to -1 then the position will always be updated." datatype="INTEGER32" symboladdress=""></property><property propname="CorrectionX" propremark="Accumulated correction in vehicle local coordinates, with 5 s exponential decay." datatype="INTEGER32" symboladdress=""></property><property propname="CorrectionY" propremark="Accumulated correction in vehicle local coordinates, with 5 s exponential decay." datatype="INTEGER32" symboladdress=""></property><property propname="CorrectionAngle" propremark="Accumulated correction in vehicle local coordinates, with 5 s exponential decay." datatype="INTEGER32" symboladdress=""></property></properties><operations></operations></comptype><comptype compname="NavInit_T" remark="Used by application to to set parameters related to navigation init and to command a new navigation init"><properties><property propname="Method" propremark="Navigation init methods:&#xD;&#xA;0. NavAreaInit. The vehicle controller will search for a&#xD;&#xA;   position within the given navigation area. If navigation area is&#xD;&#xA;   set to 0 the vehicle controller will search the whole layout. Only&#xD;&#xA;   supported by laser (reflector) navigation and natural navigation.&#xD;&#xA;&#xD;&#xA;1. PointInit. The vehicle controller will search for a position in an&#xD;&#xA;   area around the given NDC point. The size of the search area is&#xD;&#xA;   defined by PointSearchLimit and PointAngleSearchLimit. Only&#xD;&#xA;   supported by laser (reflector) navigation and natural navigation.&#xD;&#xA;&#xD;&#xA;2. SetPosition. The vehicle controller will set its position to that&#xD;&#xA;   of the given NDC point. The vehicle must be in manual or semi manual&#xD;&#xA;   mode and standing still.&#xD;&#xA;&#xD;&#xA;3. CoordinatesInit. The vehicle controller will search for a position&#xD;&#xA;   in an area around the given coordinates. The size of the search&#xD;&#xA;   area is defined by PointSearchLimit and PointAngleSearchLimit. Only&#xD;&#xA;   supported by laser (reflector) navigation and natural navigation.&#xD;&#xA;&#xD;&#xA;4. SetCoordinates. The vehicle controller will set its position to&#xD;&#xA;   that of the given given coordinates. The vehicle must be in manual&#xD;&#xA;   or semi manual mode and standing still." datatype="INTEGER32" symboladdress=""></property><property propname="Target" propremark="Target is point id in case of PointInit or SetPosition methods. For&#xD;&#xA;NavAreaInit it is the area id. Not used for other init methods." datatype="INTEGER32" symboladdress=""></property><property propname="TargetX" propremark="Target X coordinate, only used if init method is SetCoordinates or CoordinatesInit" datatype="INTEGER32" symboladdress=""></property><property propname="TargetY" propremark="Target Y coordinate, only used if init method is SetCoordinates or CoordinatesInit" datatype="INTEGER32" symboladdress=""></property><property propname="TargetAngle" propremark="Target Angle coordinate in cdeg, only used in case of SetCoordinates or CoordinatesInit" datatype="INTEGER32" symboladdress=""></property><property propname="RequestEN" propremark="Input valid" datatype="BOOLEAN" symboladdress=""></property><property propname="RequestENO" propremark="Output valid" datatype="BOOLEAN" symboladdress=""></property><property propname="Error" propremark="Error codes&#xD;&#xA;0 = Navigation initialization succeeded.&#xD;&#xA;1 = Unknown method.&#xD;&#xA;3 = Target does not exist.&#xD;&#xA;4 = Not supported.&#xD;&#xA;5 = Not in manual mode or semi manual.&#xD;&#xA;6 = Too few reflector bearings.&#xD;&#xA;7 = Bad distribution of bearings.&#xD;&#xA;8 = Reflector init failed in current search area.&#xD;&#xA;9 = Ambiguous position. More than one valid position found in current search&#xD;&#xA;    area.&#xD;&#xA;10 = Init calculation aborted.&#xD;&#xA;11 = Vehicle is moving.&#xD;&#xA;12 = Position outside search area.&#xD;&#xA;15 = No range measurements.&#xD;&#xA;16 = Bad range match.&#xD;&#xA;17 = Empty init area.&#xD;&#xA;18 = Multi oriented point.&#xD;&#xA;19 = Unknown position marker.&#xD;&#xA;20 = No position marker measurements." datatype="INTEGER32" symboladdress=""></property><property propname="PointSearchLimit" propremark="Max distance from the target point in PointInit and CoordinatesInit.&#xD;&#xA;If no position is found within the limits, the vehicle will redo the init-process until it finds one." datatype="INTEGER32" symboladdress=""></property><property propname="PointSearchAngleLimit" propremark="Maximum angular deviation allowed from the target point in PointInit&#xD;&#xA;and CoordinatesInit. If no position is found within the limits, the&#xD;&#xA;vehicle will redo the init-process until it finds one." datatype="INTEGER32" symboladdress=""></property><property propname="LostSearchLimit" propremark="Max distance from old position when doing init after navigation&#xD;&#xA;lost. If no position is found within the distance, the vehicle will&#xD;&#xA;redo the init-process until it finds one." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="Position_T" remark="Vehicle position in the global coordinate system"><properties><property propname="X" propremark="Vehicle position X" datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Vehicle position Y" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Vehicle position angle" datatype="INTEGER32" symboladdress=""></property><property propname="Angle2" propremark="Vehicle position angle" datatype="INTEGER32" symboladdress=""></property><property propname="NavLevel" propremark="Navigation quality in percent. 0 = lost, 100 = superb" datatype="INTEGER32" symboladdress=""></property><property propname="Valid" propremark="Valid signal (property values are valid)" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="Guidance_T" remark="Low-level driving control"><properties><property propname="SafetyZoneX" propremark="This parameter defines the safety zone for the segment end-points. The value is defined in mm." datatype="INTEGER32" symboladdress=""></property><property propname="SafetyZoneY" propremark="This parameter defines the safety zone on the sides of the segment. The value is defined in mm." datatype="INTEGER32" symboladdress=""></property><property propname="SafetyZoneTh" propremark="This parameter defines the safety zone for the vehicle angle deviation from the segment. The value is defined in degrees." datatype="INTEGER32" symboladdress=""></property><property propname="OutsideSafetyZone" propremark="The vehicle is outside the Safety Zone" datatype="BOOLEAN" symboladdress=""></property><property propname="LateralWeight" propremark="Weight for lateral error in the cost function used to compute control gains for path following.  A higher value will reduce lateral errors faster but makes the steering less smoth." datatype="REAL64" symboladdress=""></property><property propname="HeadingWeight" propremark="Weight for heading error in the cost function used to compute control gains for path following. A higher value will reduce heading errors faster but makes the steering less smoth." datatype="REAL64" symboladdress=""></property><property propname="UsePredictedPosition" propremark="Use a predicted position to guide the vehicle. The predicted position is computed using the vehicles current velocity and the time Vehicle.SteeringDelayCompensation." datatype="BOOLEAN" symboladdress=""></property><property propname="CurvatureLimitsControl" propremark="When enabled the guidance feedback control is limited in such a way that the sum of feedforward part due to curvature and the control part neved exceed 90 degrees for a wheel on the symmetry axis. This will reduce the risk of unstable steering in cases of large guidance errors in sharp curves." datatype="BOOLEAN" symboladdress=""></property><property propname="StrictDiffMode" propremark="No wheel turn when driving on diff-segment with a Quad vehicle.This&#xD;&#xA;will prevent the vehicle controller from trying to rotate the wheels&#xD;&#xA;more than +/- 90 degrees but will probably increase the guidance&#xD;&#xA;error.&#xD;&#xA;&#xD;&#xA;To be able to steer the vehicle correctly with this flag activated the&#xD;&#xA;wheels must be mounted on the center line, that is the y-coordinates for&#xD;&#xA;the wheels must be 0.&#xD;&#xA;&#xD;&#xA;This parameter has only effect if the vehicle is of type Quad." datatype="BOOLEAN" symboladdress=""></property><property propname="LoopTime" propremark="Time between updates of setvalues." datatype="INTEGER32" symboladdress=""></property><property propname="StatusTrigDistance" propremark="When the vehicle has this distance left to drive a guide status (and also a nav status) is trigged and sent to host and application (PLC). 0 (default) means the function is disabled" datatype="INTEGER32" symboladdress=""></property><property propname="DevPosValid" propremark="True when the vehicle is not moving and the Guidance.DevX, Guidance.DevY and Guidance.DevAngle are updated for the current position." datatype="BOOLEAN" symboladdress=""></property><property propname="DevX" propremark="Distance to end point on current command, positive value if beyond point." datatype="INTEGER32" symboladdress=""></property><property propname="DevY" propremark="The vehicle y deviation from the segment." datatype="INTEGER32" symboladdress=""></property><property propname="DevAngle" propremark="The vehicle angle deviation from the segment." datatype="INTEGER32" symboladdress=""></property><property propname="DistanceToStop" propremark="Distance to drive until the vehicle has to stop. The reason for the stop is indicated in the StopReason property. Valid when the vehicle is in Automatic mode." datatype="INTEGER32" symboladdress=""></property><property propname="StopReason" propremark="Reason for stop. Valid when the vehicle is in Automatic mode.&#xD;&#xA;0 = Vehicle will stop because it has not received any more drive commands&#xD;&#xA;1 = Vehicle will stop and change travel direction&#xD;&#xA;2 = Vehicle will stop and change steer mode&#xD;&#xA;3 = Vehicle must stop and turn the wheels before continuing to drive&#xD;&#xA;4 = Vehicle will stop before or after a rotation&#xD;&#xA;5 = Vehicle will stop at a z-segment" datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="TurnSignal_T" remark="Indication of upcoming turn"><properties><property propname="CurvatureLimit" propremark="The minimum curvature regarded as start of turn. The curvature value is defined as 1 / (turn radius in km). For an SD vehicle the relation between steer angle and curvature is: curvature = tan (steer angle) / wheel base." datatype="INTEGER32" symboladdress=""></property><property propname="RightTurn" propremark="True if a RightTurnDistance value is available, or if the vehicle is currently turning." datatype="BOOLEAN" symboladdress=""></property><property propname="RightTurnDistance" propremark="The distance to the next upcoming right turn, will be set to 0 when the vehicle is in the turn. Only valid if RightTurn is true." datatype="INTEGER32" symboladdress=""></property><property propname="RightTurnCurvature" propremark="The curvature of an upcoming turn, value defined as 1 / (turn radius in km). The presented curvature is the max curvature for the complete turn." datatype="INTEGER32" symboladdress=""></property><property propname="LeftTurn" propremark="True if a LeftTurnDistance value is available, or if the vehicle is currently turning." datatype="BOOLEAN" symboladdress=""></property><property propname="LeftTurnDistance" propremark="The distance to the next upcoming left turn, will be set to 0 when the vehicle is in the turn. Only valid if LeftTurn is true." datatype="INTEGER32" symboladdress=""></property><property propname="LeftTurnCurvature" propremark="The curvature of an upcoming turn, value defined as 1 / (turn radius in km). The presented curvature is the max curvature for the complete turn." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="VehicleApplication_T" remark="Vehicle Application information"><properties><property propname="Name" propremark="Vehicle application name" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="ModificationDate" propremark="Date when last edit" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="ModificationTime" propremark="Time when last edit" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="CompilationID" propremark="Generated at last export" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="TimeStamp" propremark="Time stamp" datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="Layout_T" remark="Layout information"><properties><property propname="LayoutName" propremark="Name of Layout" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SystemName" propremark="Name of System" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="ModificationDate" propremark="Date when last edit" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="ModificationTime" propremark="Time when last edit" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="FileRevision" propremark="Layout revision number" datatype="INTEGER32" symboladdress=""></property><property propname="NewLayoutAvailable" propremark="Indicates that a new layout has been downloaded to the vehicle." datatype="BOOLEAN" symboladdress=""></property><property propname="ReloadNewLayout" propremark="When set to true and a new layout is available, the vehicle controller&#xD;&#xA;will load the new layout when the vehicle is standing still. This&#xD;&#xA;parameter allows the PLC to control when the reload will happen." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="Autoinsert_T" remark="Guides the vehicle into the layout"><properties><property propname="Speed" propremark="Autoinsert speed. This speed is used during the whole autoinsert" datatype="INTEGER32" symboladdress=""></property><property propname="AllowBackwards" propremark="Allows the vehicle to autoinsert backwards" datatype="BOOLEAN" symboladdress=""></property><property propname="SearchAngleLimit" propremark="From vehicle, the maximum angle where to search for a point to autoinsert to" datatype="INTEGER32" symboladdress=""></property><property propname="SearchDistance" propremark="The maximum distance from the vehicle where to search for a point to autoinsert to" datatype="INTEGER32" symboladdress=""></property><property propname="PointAngleLimit" propremark="Maximum angle deviation to consider the vehicle to be on point or segment. If this value exceeds 0.75*Guidance.SafetyZoneTh then 0.75*Guidance.SafetyZoneY will be used instead." datatype="INTEGER32" symboladdress=""></property><property propname="PointTolerance" propremark="The maximum distance to a point/segment to consider the vehicle to be on that point/segment. If this value exceeds 0.75*Guidance.SafetyZoneY then 0.75*Guidance.SafetyZoneY will be used instead." datatype="INTEGER32" symboladdress=""></property><property propname="PointInsertInhibit" propremark="PointInsertInhibit&#xD;&#xA;This flag has only effect if none of the segments leading into a potential&#xD;&#xA;insert point are autoinsert segments. If so, and an insert point is found when&#xD;&#xA;the flag is set, the vehicle will not insert to the point, and not to any&#xD;&#xA;other point in the layout. The insert is aborted and the vehicle will remain&#xD;&#xA;&quot;not in system&quot;" datatype="BOOLEAN" symboladdress=""></property><property propname="OnSegment" propremark="Is set if the vehicle is inside the safetyzone, during an autoinsert. When OnSegment, the user can release the override button on the MCD" datatype="BOOLEAN" symboladdress=""></property><property propname="Target" propremark="The point the vehicle is inserting to." datatype="INTEGER32" symboladdress=""></property><property propname="QuickEnable" propremark="Allows new orders to execute as soon as the vehicle is on segment during an autoinsert. Also make vehicle use the layout speed instead of autoinsert speed when on segment. If this flag is set, when an autoinsert is running, a new order will be accepted and the vehicle will immediately drive to the destination without stopping on the aimed autoinsert point. Requires a NDC8 2.4 compatible Master." datatype="BOOLEAN" symboladdress=""></property><property propname="StatusID" propremark="Autoinsert states:&#xD;&#xA;0 = Idle. Enters this state when switched to manual mode. Leaves the state when switched to auto or semi-automatic mode.&#xD;&#xA;1 = Searching. Searching for a point or segment to insert to.&#xD;&#xA;2 = InProgressForward. Autoinserting in forward direction. Need a positive manual speed as long as not on segment.&#xD;&#xA;3 = InProgressBackward. Autoinserting in backward direction. Need a negative manual speed as long as not on segment.&#xD;&#xA;4 = Finished. The vehicle is in system. Will keep this state until switched to manual mode.&#xD;&#xA;5 = Failed. The autoinsert failed. Will keep this state until switched to manual mode." datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Autoinsert state text. See StatusID." datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="GenericDisplay_T" remark="Generic interface to operator terminal display"><properties><property propname="VehicleStatusID" propremark="Background choosen id of current vehicle status" datatype="INTEGER32" symboladdress=""></property><property propname="VehicleStatusInlineValue" propremark="The value that the Background can insert into the vehicle status string" datatype="INTEGER32" symboladdress=""></property><property propname="PlcVehicleStatusID" propremark="Plc choosen id of current vehicle status" datatype="INTEGER32" symboladdress=""></property><property propname="PlcVehicleStatusInlineValue" propremark="The value that the PLC optionally can insert into the vehicle status string" datatype="INTEGER32" symboladdress=""></property><property propname="PlcEnable" propremark="Enable PLC rights to use set vehicle status" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="LayoutPosition_T" remark="The vehicles position in the layout"><properties><property propname="InSystem" propremark="Set to true when the vehicle is in the system, after a successful auto insert." datatype="BOOLEAN" symboladdress=""></property><property propname="Point" propremark="Current point. When not on point, the value is set to zero" datatype="INTEGER32" symboladdress=""></property><property propname="Segment" propremark="The segment that the vehicle is currently traveling on. When the current segment is unknown the value is set to zero." datatype="INTEGER32" symboladdress=""></property><property propname="Distance" propremark="Traveled distance on current segment. Valid if LayoutPosition.Segment is non-zero." datatype="INTEGER32" symboladdress=""></property><property propname="RemainingDistance" propremark="Remaining distance on current segment. Valid if LayoutPosition.Segment is non-zero." datatype="INTEGER32" symboladdress=""></property><property propname="MaxSpeed" propremark="By the layout allowed maximum speed on current segment. Valid if LayoutPosition.Segment is non-zero." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="ExternalPath_T" remark="External path"><properties><property propname="ReqExtSegment" propremark="Requesting a new external segment when true" datatype="BOOLEAN" symboladdress=""></property><property propname="ReqSegmentId" propremark="Id of the requested external segment." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="Automatic_T" remark="Automatic driving in the layout"><properties><property propname="DestPoint" propremark="The endpoint of current order" datatype="INTEGER32" symboladdress=""></property><property propname="ExecDriveCommand" propremark="Vehicle executes a drive mission (or has one in queue)" datatype="BOOLEAN" symboladdress=""></property><property propname="CurrentOrderMode" propremark="1 = Master mode, 2 = Local mode, 3 = Local mode with TM" datatype="INTEGER32" symboladdress=""></property><property propname="StartupOrderMode" propremark="Vehicle order mode at startup. 1 = Master mode, 2 = Local mode, 3 = Local mode with TM" datatype="INTEGER32" symboladdress=""></property><property propname="SetOrderMode" propremark="Set new vehicle order mode . 1 = Master mode, 2 = Local mode, 3 = Local mode with TM" datatype="INTEGER32" symboladdress=""></property><property propname="SetOrderModeError" propremark="Error codes from background program when trying to set order mode. 0 = Ok, 1 = Undefined mode, 2 = Order in progress" datatype="INTEGER32" symboladdress=""></property><property propname="SetOrderModeEN" propremark="Set this when proper value is assigned to SetOrderMode. Clear it when SetOrderModeENO is set" datatype="BOOLEAN" symboladdress=""></property><property propname="SetOrderModeENO" propremark="Set by background program when SetOrderModeError is properly set. Cleared when SetOrderModeEN is cleared" datatype="BOOLEAN" symboladdress=""></property><property propname="StatusID" propremark="Order status:&#xD;&#xA;0 = No order.&#xD;&#xA;1 = Have order with no operation and the vehicle is driving to the destination point.&#xD;&#xA;2 = Have order with operation and the vehicle is driving to the destination point.&#xD;&#xA;3 = Standing on the operation point and wait for operation to finish.&#xD;&#xA;4 = Master has canceled the non operation order and the vehicle is driving to the end of the last ordered segment.&#xD;&#xA;5 = Master has canceled the operation order and the vehicle is driving to the end of the operation segment.&#xD;&#xA;6 = Master has canceled the operation order and the vehicle is standing on the operation point, waiting for the PLC to cancel the order." datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property></properties><operations></operations></comptype><comptype compname="Manual_T" remark="Manual driving"><properties><property propname="PlcAngle" propremark="Manual angle set by Plc to background software if proper bit in PlcSelectMask and PlcSelected is set" datatype="INTEGER32" symboladdress=""></property><property propname="PlcSpeed" propremark="Manual speed set by Plc to background software if proper bit in PlcSelectMask and PlcSelected is set." datatype="INTEGER32" symboladdress=""></property><property propname="PlcSteerMode" propremark="Manual steer mode for a Quad/2xSD vehicle set by Plc to background software if proper bit in PlcSelectMask and PlcSelected is set. 0: 2*SD Anti-parallel, 1: 2*SD Parallel, 2: DiffDrive" datatype="INTEGER32" symboladdress=""></property><property propname="PlcSetOperationMode" propremark="Operation mode set by Plc to background software if proper bit in PlcSelectMask and PlcSelected is set. 0 = Automatic, 1 = Manual, 2 = SemiAutomatic, 3 = SemiManual" datatype="INTEGER32" symboladdress=""></property><property propname="PlcSelectMask" propremark="Individually select mask: Bit0:PlcAngle Bit1:PlcSpeed Bit2:PlcSetOperationMode Bit3:Reserved Bit4:PlcSteerMethod" datatype="INTEGER32" symboladdress=""></property><property propname="PlcSelect" propremark="PLC overrides MCD signals" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="SemiManual_T" remark="Semi Manual driving"><properties><property propname="MaxDistanceWireLost" propremark="Max distance the vehicle can travel without antenna updates before it behave as the wire is lost." datatype="INTEGER32" symboladdress=""></property><property propname="StatusID" propremark="0:Off wire, 1:Guiding, 2:Wire lost" datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="BlackBox_T" remark="Black Box"><properties><property propname="TrigENO" propremark="Set when a BlackBox is trigged manually.  Cleared when EN is cleared" datatype="BOOLEAN" symboladdress=""></property><property propname="TrigEN" propremark="Set this when you want to trig a BlackBox. Clear it when ENO is set" datatype="BOOLEAN" symboladdress=""></property><property propname="TrigReason" propremark="Short description why blackbox was trigged. Used as title in the vehicle controller web interface." datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="PointTrigger_T" remark="Point attribute trigger. The attribute triggers are valid when LayoutPosition.Point is NOT zero. If LayoutPosition.Point is zero then the attributes are not valid and shall not be used."><properties><property propname="Value" propremark="Point attribute value" datatype="INTEGER32" symboladdress=""></property><property propname="Value2" propremark="Point attribute value" datatype="INTEGER32" symboladdress=""></property><property propname="Bit0_DepoST_Att" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit0"></property><property propname="Bit1_ShutEQ_Att" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit1"></property><property propname="Bit2" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit3" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit4_Area1_Pnt" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit4"></property><property propname="Bit5_Area2_Pnt" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit5"></property><property propname="Bit6_Area4_Pnt" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit6"></property><property propname="Bit7_Area8_Pnt" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit7"></property><property propname="Bit8_HP_Pnt" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit8"></property><property propname="Bit9_Chrg_Right" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit9"></property><property propname="Bit10_Chrg_Left" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit10"></property><property propname="Bit11" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit12" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit13" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit14_Full_Chrg" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress="Bit14"></property><property propname="Bit15" propremark="Point attribute bit" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="SegmentTrigger_T" remark="Segment attribute trigger. The attributes are valid when InSystem is set"><properties><property propname="Value" propremark="Segment attribute value" datatype="INTEGER32" symboladdress=""></property><property propname="Value2" propremark="Segment attribute value" datatype="INTEGER32" symboladdress=""></property><property propname="Bit0_StartDDAtt" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit0"></property><property propname="Bit1" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit2" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit3" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit4_Area1_Seg" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit4"></property><property propname="Bit5_Area2_Seg" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit5"></property><property propname="Bit6_Area4_Seg" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit6"></property><property propname="Bit7_Area8_Seg" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit7"></property><property propname="Bit8" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit9" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress=""></property><property propname="Bit10_DDLeft_A" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit10"></property><property propname="Bit11_DDRight_A" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit11"></property><property propname="Bit12_TurnLeft_A" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit12"></property><property propname="Bit13_TurnRght_A" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit13"></property><property propname="Bit14_DisIrSlow" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit14"></property><property propname="Bit15_DisIrStop" propremark="Segment attribute bit" datatype="BOOLEAN" symboladdress="Bit15"></property></properties></comptype><comptype compname="LoadDocking_T" remark="Load docking"><properties><property propname="OnLastSegment" propremark="Vehicle is driving on the segment leading to the operation point" datatype="BOOLEAN" symboladdress=""></property><property propname="DistOpPoint" propremark="Remaining distance to the operation point. The distance is measured as the crow flies.&#xD;&#xA;The value is updated each half second if the delta distance is greater than 150mm +-50mm. The delta distance is&#xD;&#xA;the calculated distance between the current position and the position used last time the parameter was updated." datatype="INTEGER32" symboladdress=""></property><property propname="RequestDistance" propremark="Set by background program to request the PLC for a distance to drive on a flexible segment" datatype="BOOLEAN" symboladdress=""></property><property propname="PlcDistError" propremark="Error reported during a plc distance sequence:&#xD;&#xA;0 = Ok.&#xD;&#xA;1 = Distance error. The distance is probably longer than distance left on the segment. or PlcDistFromEnd flag is not properly set.&#xD;&#xA;2 = Wrong mode. A plc distance sequence is started by the PLC, but the background program has not requested one (RequestDistance is not set).&#xD;&#xA;3 = No line. A plc distance sequence is started on a segment that is not a line.&#xD;&#xA;4 = Wrong segment. The symbol ArrivedEN has been set on a segment that is either not flexible or not the last commanded segment." datatype="INTEGER32" symboladdress=""></property><property propname="PlcDistENO" propremark="Function executed by background and error is properly set. Cleared when EN is cleared." datatype="BOOLEAN" symboladdress=""></property><property propname="PlcDistance" propremark="Set the distance to drive on the flexible segment" datatype="INTEGER32" symboladdress=""></property><property propname="PlcDistFromEnd" propremark="Set if PlcDistance shall be measured from the endpoint of the flexible segment. Otherwise it will be from the startpoint" datatype="BOOLEAN" symboladdress=""></property><property propname="PlcDistEN" propremark="Set this when the other plc dist parameters are set properly. Clear it when ENO is set" datatype="BOOLEAN" symboladdress=""></property><property propname="OnTarget" propremark="Set by background program when standing on the operation point. This is the start signal to the PLC for the load operation. It is cleared when the PLC sets LoadOpDoneEN and the background program responds with LoadOpDoneENO." datatype="BOOLEAN" symboladdress=""></property><property propname="ArrivedEN" propremark="Set arrived on a flexible segment, when the vehicle stands still, to force the LoadDocking.OnTarget signal. Clear when ENO is set" datatype="BOOLEAN" symboladdress=""></property><property propname="ArrivedENO" propremark="Respond to PLC arrived is executed. Clear when EN is cleared" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="LoadOperation_T" remark="Load handling"><properties><property propname="OperationCode" propremark="Operation code. Used by the PLC to perform some application defined action at the operation point" datatype="INTEGER32" symboladdress=""></property><property propname="OperationParam1" propremark="Operation parameter 1. Additional operation data" datatype="INTEGER32" symboladdress=""></property><property propname="OperationParam2" propremark="Operation parameter 2. Additional operation data" datatype="INTEGER32" symboladdress=""></property><property propname="CancelOperation" propremark="Cancel operation is requested. This does not necessarily mean that the operation will be canceled. The PLC determine if to do or not. If the PLC cancels the operation it shall answer with a nonzero LoadOpError value in the LoadOpDone function" datatype="BOOLEAN" symboladdress=""></property><property propname="LoadOpDoneError" propremark="0 = load operation ok, 1.. = load operation failed" datatype="INTEGER32" symboladdress=""></property><property propname="LoadOpDoneResult" propremark="Operation result code" datatype="INTEGER32" symboladdress=""></property><property propname="LoadOpDoneEN" propremark="Set this when error and result is set properly. Clear when ENO is set. This must not be set/used if not OnTarget is set" datatype="BOOLEAN" symboladdress=""></property><property propname="LoadOpDoneENO" propremark="Function is executed by background" datatype="BOOLEAN" symboladdress=""></property></properties><operations></operations></comptype><comptype compname="CANBus_T" remark="CAN bus"><properties><property propname="BusID" propremark="Physical CAN ID" datatype="INTEGER32" symboladdress=""></property><property propname="MasterNodeID" propremark="Node ID for the CanOpen Master. If the buses are interconnected make sure they don't have the same MasterNodeID." datatype="INTEGER32" symboladdress=""></property><property propname="LoadBase" propremark="This property specifies the amount of CAN bus load that is allocated as margin and for background communication." datatype="INTEGER32" symboladdress=""></property><property propname="Bitrate" propremark="Bitrate (kBit/s)" datatype="INTEGER32" symboladdress=""></property><property propname="NMTMaster" propremark="Set to true if this unit is NMT master in a CANOpen network" datatype="BOOLEAN" symboladdress=""></property><property propname="SlaveComponent" propremark="Name of the component that represent the vehicle controller slave. Ignored if NMTMaster is true" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SyncGeneration" propremark="Set to true if syncs should be sent on this can channel. Ignored if NMTMaster is false" datatype="BOOLEAN" symboladdress=""></property><property propname="ReadSDO_NodeID" propremark="Node ID" datatype="INTEGER32" symboladdress=""></property><property propname="ReadSDO_ObjectIndex" propremark="Object Index" datatype="INTEGER32" symboladdress=""></property><property propname="ReadSDO_SubIndex" propremark="Sub Index" datatype="INTEGER32" symboladdress=""></property><property propname="ReadSDO_Value" propremark="Output value" datatype="INTEGER32" symboladdress=""></property><property propname="ReadSDO_StrValue" propremark="String output value" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="ReadSDO_DataType" propremark="Data type of value to read. Valid datatypes are:&#xD;&#xA;BOOLEAN, UNSIGNED8, INTEGER8, UNSIGNED16, INTEGER16, UNSIGNED32, INTEGER32, VISIBLE_STRING.&#xD;&#xA;For the type VISIBLE_STRING the value is passed in ReadSDO_StrValue parameter." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="ReadSDO_Valid" propremark="True if the returned Value is valid" datatype="BOOLEAN" symboladdress=""></property><property propname="ReadSDO_ErrorText" propremark="Error description. Empty if no error" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="ReadSDO_EN" propremark="Trigger of SDO read operation" datatype="BOOLEAN" symboladdress=""></property><property propname="ReadSDO_ENO" propremark="Trigger of operation done" datatype="BOOLEAN" symboladdress=""></property><property propname="WriteSDO_NodeID" propremark="Node ID" datatype="INTEGER32" symboladdress=""></property><property propname="WriteSDO_ObjectIndex" propremark="Object Index" datatype="INTEGER32" symboladdress=""></property><property propname="WriteSDO_SubIndex" propremark="Sub Index" datatype="INTEGER32" symboladdress=""></property><property propname="WriteSDO_Value" propremark="Input value" datatype="INTEGER32" symboladdress=""></property><property propname="WriteSDO_StrValue" propremark="Input value" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="WriteSDO_DataType" propremark="Data type of value to read. Valid datatypes are:&#xD;&#xA;BOOLEAN, UNSIGNED8, INTEGER8, UNSIGNED16, INTEGER16, UNSIGNED32, INTEGER32, VISIBLE_STRING.&#xD;&#xA;For the type VISIBLE_STRING the value is passed in WriteSDO_StrValue parameter." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="WriteSDO_Valid" propremark="True if the returned Value is valid" datatype="BOOLEAN" symboladdress=""></property><property propname="WriteSDO_ErrorText" propremark="Error description. Empty if no error" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="WriteSDO_EN" propremark="Trigger of SDO write operation" datatype="BOOLEAN" symboladdress=""></property><property propname="WriteSDO_ENO" propremark="Trigger of operation done" datatype="BOOLEAN" symboladdress=""></property><property propname="State" propremark="CAN channel state 0=disabled, 1=active, 2=error passive, 3=bus off" datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="CanChannelStatus_T" remark="CAN Channel Status"><properties></properties></comptype><comptype compname="GenericCanDevice_T" remark="Generic CAN device"><properties><property propname="BusID" propremark="CAN bus ID" datatype="INTEGER32" symboladdress=""></property><property propname="NodeID" propremark="CAN node ID" datatype="INTEGER32" symboladdress=""></property><property propname="FailureAction" propremark="0 = Background, the background programs takes action when an error occur in the device. 1 = PLC, no action from background program. The error should be handled by the PLC application." datatype="INTEGER32" symboladdress=""></property><property propname="ActiveInSafeState" propremark="Decides if the device will start up in safe state." datatype="BOOLEAN" symboladdress=""></property><property propname="NMTState" propremark="The current CANopen state of the device." datatype="UNSIGNED32" symboladdress=""></property><property propname="SdoBufferSize" propremark="The current size of the client SDO buffer (read/write SDO's from the vehicle controller to this device)." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="VehicleControl_T" remark="Vehicle steer and drive control device"><properties><property propname="SetSpeed" propremark="Current commanded vehicle set-speed" datatype="INTEGER32" symboladdress=""></property><property propname="TravelDir" propremark="Current, and latest, travel direction. 1 = forward, 0 = backward" datatype="INTEGER32" symboladdress=""></property><property propname="Moving" propremark="Vehicle is moving" datatype="BOOLEAN" symboladdress=""></property><property propname="Estop" propremark="Set when the vehicle is emergency stopped" datatype="BOOLEAN" symboladdress=""></property><property propname="Stop" propremark="The PLC sets this to stop the vehicle using the normal Vehicle.DecSlope." datatype="BOOLEAN" symboladdress=""></property><property propname="QuickStop" propremark="The PLC sets this to stop the vehicle using the Vehicle.EmcyDecSlope." datatype="BOOLEAN" symboladdress=""></property><property propname="SlowDown" propremark="The PLC sets this to make the vehicle enter SlowDownSpeed. Typically used on flexible segments when using sensor stop" datatype="BOOLEAN" symboladdress=""></property><property propname="SlowDownSpeed" propremark="Slowdown speed. See SlowDown" datatype="INTEGER32" symboladdress=""></property><property propname="OperationMode" propremark="Current operation mode. 0 = Automatic, 1 = Manual, 2 = SemiAutomatic, 3 = SemiManual" datatype="INTEGER32" symboladdress=""></property><property propname="SensorStopInputSignal" propremark="Symbolic name for digital input to be used as sensor stop. Also see SensorStopEnable" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SensorStopInputPolarity" propremark="Polarity switch for SensorStopInputSignal. Also see SensorStopEnable" datatype="BOOLEAN" symboladdress=""></property><property propname="SensorStopEnable" propremark="Enable / Disable of SensorStopInput 0=disable, 1=enable. The intention is to use this to stop the vehicle on a sensor, at an operation point on a flexible segment and in conjunction with the LoadDocking.Arrived function. Though, there are no limits to use it in other situations too. When enabled, the vehicle will stop and stand still, as long as the selected sensor, SensorStopInputSignal, is active, due to its polarity, SensorStopInputPolarity. When the signal is not active, the vehicle goes on driving (if commanded of course)" datatype="BOOLEAN" symboladdress=""></property><property propname="BrakeOutputSignal" propremark="Symbolic name for digital output where brake is connected, to disable type NotUsed" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="BrakeOutputPolarity" propremark="Polarity setting for brake digital output" datatype="BOOLEAN" symboladdress=""></property><property propname="BrakeOnDelay" propremark="Delay before the brakes are applied" datatype="INTEGER32" symboladdress=""></property><property propname="BrakeOffDelay" propremark="Delay before trying to move the vehicle after the brakes have been released. To allow for the brakes to mechanically release." datatype="INTEGER32" symboladdress=""></property><property propname="EstopInputSignal" propremark="Symbolic name for digital input where Estop is connected, to disable type NotUsed. If you have not set this correct you can get emcy on the Can-Bus. This happens when the regulators try to move the wheels and there's no power on the servos." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="EstopInputPolarity" propremark="Polarity setting for estop digital input" datatype="BOOLEAN" symboladdress=""></property><property propname="HaltRequest" propremark="Halt request to PLC application, used in detour function" datatype="BOOLEAN" symboladdress=""></property><property propname="HaltRequestDone" propremark="Halt request done, set by PLC application, used in detour function" datatype="BOOLEAN" symboladdress=""></property><property propname="PreventAppDownload" propremark="When true will an application transfer from AppDesigner and halt and restart from web interface be prevented." datatype="BOOLEAN" symboladdress=""></property><property propname="PlcSetSteerEnable" propremark="Set by PLC to enable/disable external steer regulator if proper bit in PlcSelectMask and PlcSelect is set. If vehicle is e-stopped the regulator must be disabled." datatype="BOOLEAN" symboladdress=""></property><property propname="PlcSetDriveEnable" propremark="Set by PLC to enable/disable external drive regulator if proper bit in PlcSelectMask and PlcSelect is set. If vehicle is e-stopped the regulator must be disabled." datatype="BOOLEAN" symboladdress=""></property><property propname="PlcSelectMask" propremark="Select mask: Bit0:PlcSetAngle Bit1:PlcSetSpeed Bit2:PlcSetSteerEnable Bit3:PlcSetDriveEnable (PlcSetAngle and PlcSetSpeed is controlled per defined wheel)" datatype="INTEGER32" symboladdress=""></property><property propname="PlcSelect" propremark="PLC overrides bits selected by mask." datatype="BOOLEAN" symboladdress=""></property><property propname="VeryLateSSIO" propremark="Request for PLC application to stop movement, due to late SSIO blocking" datatype="BOOLEAN" symboladdress=""></property><property propname="CollisionRisk" propremark="When the System Manager detects there is a collision risk for the vehicle, it will&#xD;&#xA;transfer this information to the vehicle and the CollisionRisk parameter will be set. The parameter can only&#xD;&#xA;be set in automatic and master mode. In all other cases the parameter is cleared." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="GenericMcdDevice_T" remark="Generic signals from mcd"><properties><property propname="Speed" propremark="Speed from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Angle from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="Buttons" propremark="Buttons from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="Button1" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button2" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button3" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button4" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button5" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button6" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button7" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button8" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button9" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button10" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button11" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button12" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button13" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button14" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button15" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="Button16" propremark="Button from Mcd" datatype="BOOLEAN" symboladdress=""></property><property propname="McdHighSpeed" propremark="Mcd high or max speed" datatype="INTEGER32" symboladdress=""></property><property propname="DeviceType" propremark="A Manual Control Device" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="MCD7P_T" remark="Manual control device"><properties><property propname="Speed" propremark="Speed from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Angle from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="Buttons" propremark="Buttons from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="DeviceType" propremark="A Manual Control Device" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Button1" propremark="Auto mode button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button2" propremark="Semi mode button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button3" propremark="Man mode button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button4" propremark="Forward backward button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button5" propremark="Low speed button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button6" propremark="High speed button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button7" propremark="Override button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button8" propremark="Load1 up button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button9" propremark="Load1 down button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button10" propremark="Load2 left button" datatype="BOOLEAN" symboladdress=""></property><property propname="Button11" propremark="Load2 right button" datatype="BOOLEAN" symboladdress=""></property><property propname="McdHighSpeed" propremark="Mcd high or max speed" datatype="INTEGER32" symboladdress=""></property><property propname="McdLowSpeed" propremark="Mcd low speed" datatype="INTEGER32" symboladdress=""></property><property propname="Valid" propremark="Set when an MCD device is up and running" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="GenericRemoteJoystick_T" remark="Remote manual control device"><properties><property propname="Speed" propremark="Speed from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="Angle" propremark="Angle from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="Buttons" propremark="Buttons from Mcd" datatype="INTEGER32" symboladdress=""></property><property propname="Button1" propremark="Button1 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button2" propremark="Button2 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button3" propremark="Button3 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button4" propremark="Button4 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button5" propremark="Button5 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button6" propremark="Button6 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button7" propremark="Button7 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button8" propremark="Button8 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button9" propremark="Button9 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button10" propremark="Button10 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button11" propremark="Button11 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button12" propremark="Button12 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button13" propremark="Button13 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button14" propremark="Button14 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button15" propremark="Button15 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="Button16" propremark="Button16 from Joystick" datatype="BOOLEAN" symboladdress=""></property><property propname="McdHighSpeed" propremark="Mcd high or max speed" datatype="INTEGER32" symboladdress=""></property><property propname="Valid" propremark="Set when a joystick is connected and communicating with the background program" datatype="BOOLEAN" symboladdress=""></property><property propname="Port" propremark="TCP port connected to joystick" datatype="INTEGER32" symboladdress=""></property><property propname="DeviceType" propremark="OEM joysticks from WingMan, Logitech etc" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="PLC_Application_T" remark="Application program logic"><properties><property propname="TxStatusBit0_Load" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit0"></property><property propname="TxStatusBit1_EaLD" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit1"></property><property propname="TxStatusBit2_HaveCmd" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit2"></property><property propname="TxStatusBit3_RelBRK" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit3"></property><property propname="TxStatusBit4_LowBatt" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit4"></property><property propname="TxStatusBit5_WaitLow" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit5"></property><property propname="TxStatusBit6_Charge" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit6"></property><property propname="TxStatusBit7_ChgComp" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit7"></property><property propname="TxStatusBit8_Manual" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit8"></property><property propname="TxStatusBit9_EStop" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit9"></property><property propname="TxStatusBit10_Blocked" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit10"></property><property propname="TxStatusBit11_IrStop" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit11"></property><property propname="TxStatusBit12_LostP" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress="TxStatusBit12"></property><property propname="TxStatusBit13" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress=""></property><property propname="TxStatusBit14" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress=""></property><property propname="TxStatusBit15" propremark="Application status bit to Master" datatype="BOOLEAN" symboladdress=""></property><property propname="UserEventEN" propremark="Set this flag to send a User Event. Clear when ENO is set" datatype="BOOLEAN" symboladdress=""></property><property propname="UserEventENO" propremark="Response to PLC User Event is executed. Clear when EN is cleared" datatype="BOOLEAN" symboladdress=""></property><property propname="UserEventCode" propremark="User Event code" datatype="INTEGER32" symboladdress=""></property><property propname="UserEventPar1" propremark="User Event parameter 1" datatype="INTEGER32" symboladdress=""></property><property propname="UserEventPar2" propremark="User Event parameter 2" datatype="INTEGER32" symboladdress=""></property><property propname="UserEventPar3" propremark="User Event parameter 3" datatype="INTEGER32" symboladdress=""></property><property propname="UserEventPar4" propremark="User Event parameter 4" datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="Rcu_T" remark="Radio controll unit"><properties><property propname="Protocol" propremark="Protocol" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SetRcuChannel" propremark="Set RCU Channel" datatype="INTEGER32" symboladdress=""></property><property propname="CurRcuChannel" propremark="Current RCU Channel" datatype="INTEGER32" symboladdress=""></property><property propname="TraceEnable" propremark="Enable SCC trace" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="Satel_T" remark="Satel radio"><properties><property propname="Protocol" propremark="Protocol" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="TraceEnable" propremark="Enable SCC trace" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="IRModem_T" remark="IR Modem"><properties><property propname="Protocol" propremark="Protocol" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="TraceEnable" propremark="Enable SCC trace" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="SerialPort_T" remark="Generic serial interface"><properties><property propname="Baudrate" propremark="Baudrate (bits/second)" datatype="INTEGER32" symboladdress=""></property><property propname="Databits" propremark="Number of data bits" datatype="INTEGER32" symboladdress=""></property><property propname="Parity" propremark="Parity (None, Even, Odd)" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Stopbits" propremark="Number of stopbits" datatype="INTEGER32" symboladdress=""></property><property propname="Protocol" propremark="Protocol" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="SerialPort_RS232_T" remark="Serial interface RS232"><properties><property propname="Baudrate" propremark="Baudrate (bits/second)" datatype="INTEGER32" symboladdress=""></property><property propname="Databits" propremark="Number of data bits" datatype="INTEGER32" symboladdress=""></property><property propname="Parity" propremark="Parity (None, Even, Odd)" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Stopbits" propremark="Number of stopbits" datatype="INTEGER32" symboladdress=""></property><property propname="Protocol" propremark="Protocol" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="SerialPort_RS422_T" remark="Serial interface RS422"><properties><property propname="Baudrate" propremark="Baudrate (bits/second)" datatype="INTEGER32" symboladdress=""></property><property propname="Databits" propremark="Number of data bits" datatype="INTEGER32" symboladdress=""></property><property propname="Parity" propremark="Parity (None, Even, Odd)" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Stopbits" propremark="Number of stopbits" datatype="INTEGER32" symboladdress=""></property><property propname="Protocol" propremark="Protocol" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="SerialPort_RS485_T" remark="Serial interface RS485"><properties><property propname="Baudrate" propremark="Baudrate (bits/second)" datatype="INTEGER32" symboladdress=""></property><property propname="Databits" propremark="Number of data bits" datatype="INTEGER32" symboladdress=""></property><property propname="Parity" propremark="Parity (None, Even, Odd)" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Stopbits" propremark="Number of stopbits" datatype="INTEGER32" symboladdress=""></property><property propname="Protocol" propremark="Protocol" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="WheelSD_T" remark="Steer/drive wheel"><properties><property propname="MaxAngularSpeed" propremark="Max steer angular speed allowed" datatype="INTEGER32" symboladdress=""></property><property propname="MinSteerAngle" propremark="Min steer angle allowed" datatype="INTEGER32" symboladdress=""></property><property propname="MaxSteerAngle" propremark="Max steer angle allowed" datatype="INTEGER32" symboladdress=""></property><property propname="X" propremark="Wheel position X (lengthwise along the symmetry axis). Positive in the forwards direction." datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Wheel position Y (perpendicular to the symmetry axis). Positive to the left." datatype="INTEGER32" symboladdress=""></property><property propname="SetSpeedRef" propremark="Symbolic name for wheel set speed" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SetAngleRef" propremark="Symbolic name for wheel set angle" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SetSpeedEnableRef" propremark="Symbolic name for wheel speed regulator enable" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SetAngleEnableRef" propremark="Symbolic name for wheel angle regulator enable" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="EncSpeedRef" propremark="Symbolic name for wheel speed feedback" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="EncDistRef" propremark="Symbolic name for wheel distance feedback. If set to NotUsed EncSpeedRef will be used for distance feedback." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="EncAngleRef" propremark="Symbolic name for wheel angle feedback" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="EncSpeedPlcInputRef" propremark="If EncSpeedRef or EncDistRef points to a symbol that is computed by PLC then this should point to the variable that the PLC uses as input for the calculation. The encoder value is then considered to be ready when the input variable has been received over the CAN bus (or otherwised updated) and the PLC has been executed." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="EncAnglePlcInputRef" propremark="If EncAngleRef points to a symbol that is computed by PLC then this should point to the variable that the PLC uses as input for the calculation. The encoder value is then considered to be ready when the input variable has been received over the CAN bus (or otherwised updated) and the PLC has been executed." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="WheelType" propremark="Type of wheel, Possible values are Steer, Drive and SD" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="PlcSetAngle" propremark="Set by PLC to control steering. Sent directly to external steer regulator&#xD;&#xA;                if proper bit in PlcSelectMask and PlcSelect is set." datatype="INTEGER32" symboladdress=""></property><property propname="PlcSetSpeed" propremark="Set by PLC to control speed. Sent directly to external drive regulator&#xD;&#xA;                if proper bit in PlcSelectMask and PlcSelect is set." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="WheelDD_T" remark="Drive/drive wheel"><properties><property propname="MaxAngularSpeed" propremark="Max steer angular speed of allowed" datatype="INTEGER32" symboladdress=""></property><property propname="MinSteerAngle" propremark="Min steer angle allowed" datatype="INTEGER32" symboladdress=""></property><property propname="MaxSteerAngle" propremark="Max steer angle allowed" datatype="INTEGER32" symboladdress=""></property><property propname="X" propremark="Wheel position X (lengthwise along the symmetry axis). Positive in the forwards direction." datatype="INTEGER32" symboladdress=""></property><property propname="Y" propremark="Wheel position Y (perpendicular to the symmetry axis). Positive to the left." datatype="INTEGER32" symboladdress=""></property><property propname="Gauge" propremark="Distance between the individual wheels of type DD." datatype="INTEGER32" symboladdress=""></property><property propname="SteerRegP" propremark="Propotional control parameter for DD-wheel." datatype="INTEGER32" symboladdress=""></property><property propname="SteerRegI" propremark="Integral control parameter for DD-wheel." datatype="INTEGER32" symboladdress=""></property><property propname="SteerRegILimit" propremark="Limit for integral error in PID steer controller." datatype="INTEGER32" symboladdress=""></property><property propname="SteerRegD" propremark="Derivative control parameter for DD-wheel." datatype="INTEGER32" symboladdress=""></property><property propname="SteerRegPIDLimit" propremark="Limit for part of wheel speed due to steer controller PID." datatype="INTEGER32" symboladdress=""></property><property propname="SteerRegCheckOutHysteres" propremark="Threshold for steer encoder supervision. When the set angle for the wheelpair changes at a higher rate than this it is required that the encoder reports change of angle in the same direction." datatype="INTEGER32" symboladdress=""></property><property propname="SteerRegCheckError" propremark="Threshold for steer encoder supervision. It is required that the encoder reports an angle that differ less than this from the set angle." datatype="INTEGER32" symboladdress=""></property><property propname="SteerRegFailureDelay" propremark="Delay before safe state in absence of correct steer encoder feedback movement. A zero value means that steer encoder supervision is disabled." datatype="INTEGER32" symboladdress=""></property><property propname="WheelType" propremark="Type of wheel, Possible values are Steer, Drive, SD and DD" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="PlcLeftSetSpeed" propremark="Set by PLC to control speed of left wheel. Sent directly to external drive regulator if proper bit in PlcSelectMask and PlcSelect is set." datatype="INTEGER32" symboladdress=""></property><property propname="PlcRightSetSpeed" propremark="Set by PLC to control speed of right wheel. Sent directly to external drive regulator if proper bit in PlcSelectMask and PlcSelect is set." datatype="INTEGER32" symboladdress=""></property><property propname="LeftSetSpeedRef" propremark="Symbolic name for left wheel set speed" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="LeftSetSpeedEnableRef" propremark="Symbolic name for left wheel speed regulator enable" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="LeftEncSpeedRef" propremark="Symbolic name for left wheel speed feedback" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="LeftEncDistRef" propremark="Symbolic name for left wheel distance feedback" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="LeftReverse" propremark="Set to true if mounted with positive speed in backward direction" datatype="BOOLEAN" symboladdress=""></property><property propname="RightSetSpeedRef" propremark="Symbolic name for left wheel set speed" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="RightSetSpeedEnableRef" propremark="Symbolic name for right wheel speed regulator enable" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="RightEncSpeedRef" propremark="Symbolic name for left wheel speed feedback" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="RightEncDistRef" propremark="Symbolic name for left wheel distance feedback" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="RightReverse" propremark="Set to true if mounted with positive speed in backward direction" datatype="BOOLEAN" symboladdress=""></property><property propname="EncAngleRef" propremark="Symbolic name for wheel angle feedback" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="SoftwareModule_T" remark="Background application"><properties></properties></comptype><comptype compname="CanServer_T" remark="CanOpen master component"><properties></properties></comptype><comptype compname="OMPLC_T" remark="OM / PLC data exchange"><properties><property propname="ChargeOM" propremark="Data1" datatype="INTEGER16" symboladdress="Data1"></property><property propname="Stop_OM" propremark="" datatype="INTEGER16" symboladdress="Data2"></property><property propname="R_BCD1" propremark="" datatype="INTEGER16" symboladdress="Data3"></property><property propname="R_BCD2" propremark="" datatype="INTEGER16" symboladdress="Data4"></property><property propname="R_BCD3" propremark="" datatype="INTEGER16" symboladdress="Data5"></property><property propname="Cur_Pnt" propremark="" datatype="INTEGER16" symboladdress="Data6"></property><property propname="Drv_Area" propremark="" datatype="INTEGER16" symboladdress="Data7"></property><property propname="Cur_Seg" propremark="" datatype="INTEGER16" symboladdress="Data8"></property><property propname="Data9" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="IKEY" propremark="Data10" datatype="INTEGER16" symboladdress="Data10"></property><property propname="Phase" propremark="Data11" datatype="INTEGER16" symboladdress="Data11"></property><property propname="Fetch" propremark="Data12" datatype="INTEGER16" symboladdress="Data12"></property><property propname="Delivery" propremark="Data13" datatype="INTEGER16" symboladdress="Data13"></property><property propname="Data14" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data15" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data16" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data17" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="OrderState" propremark="Data18" datatype="INTEGER16" symboladdress="Data18"></property><property propname="OrderStateValue" propremark="Data19" datatype="INTEGER16" symboladdress="Data19"></property><property propname="DebugLevel" propremark="Data20" datatype="INTEGER16" symboladdress="Data20"></property><property propname="StopWord" propremark="Data21" datatype="INTEGER16" symboladdress="Data21"></property><property propname="Data22" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data23" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data24" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data25" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data26" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data27" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data28" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data29" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data30" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data31" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data32" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data33" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data34" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data35" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data36" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data37" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data38" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data39" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Fire_alarm" propremark="Data40" datatype="INTEGER16" symboladdress="Data40"></property><property propname="Data41" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data42" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data43" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data44" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data45" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data46" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data47" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data48" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data49" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data50" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data51" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data52" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data53" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data54" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data55" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data56" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data57" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data58" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data59" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data60" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data61" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data62" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data63" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data64" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data65" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data66" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data67" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data68" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data69" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data70" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data71" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data72" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data73" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data74" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data75" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data76" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data77" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data78" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data79" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data80" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data81" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data82" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data83" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data84" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data85" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data86" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data87" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data88" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data89" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data90" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data91" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data92" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data93" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data94" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data95" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data96" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data97" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data98" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data99" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="LastUnload" propremark="Data100" datatype="INTEGER16" symboladdress="Data100"></property><property propname="Data101" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data102" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data103" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data104" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data105" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data106" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data107" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data108" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data109" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data110" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data111" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data112" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data113" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data114" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data115" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data116" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data117" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data118" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data119" propremark="" datatype="INTEGER16" symboladdress=""></property><property propname="Data120" propremark="" datatype="INTEGER16" symboladdress=""></property></properties></comptype><comptype compname="WGUController_T" remark="WGU, Narrow-Aisle Wire Guidance Controller"><properties><property propname="Enabled" propremark="Enable Narrow Aisle Wire Guidance" datatype="BOOLEAN" symboladdress=""></property><property propname="MaxPickupTime" propremark="Max time to pickup wire (s)" datatype="INTEGER32" symboladdress=""></property><property propname="Pickup" propremark="Trying to lock on a wire" datatype="BOOLEAN" symboladdress=""></property><property propname="PickupTimeout" propremark="Timeout during pickup" datatype="BOOLEAN" symboladdress=""></property><property propname="Locked" propremark="Locked on wire" datatype="BOOLEAN" symboladdress=""></property><property propname="Unlocked" propremark="Unlocked from wire" datatype="BOOLEAN" symboladdress=""></property><property propname="NavError" propremark="Nav error on transition" datatype="BOOLEAN" symboladdress=""></property><property propname="ModeID" propremark="Current WGU mode. 0=Normal, 1=Narrow Aisle" datatype="INTEGER32" symboladdress=""></property><property propname="ModeText" propremark="Descriptive mode string" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Valid" propremark="Valid signal (property values are valid)" datatype="BOOLEAN" symboladdress=""></property><property propname="Error" propremark="Error signal" datatype="BOOLEAN" symboladdress=""></property><property propname="StatusID" propremark="Status identifier" datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Status text" datatype="VISIBLE_STRING" symboladdress=""></property></properties></comptype><comptype compname="LocalOrder_T" remark="Local order from PLC"><properties><property propname="DestPoint" propremark="Destination point" datatype="INTEGER32" symboladdress=""></property><property propname="OpCode" propremark="Operation code if there is an operation to be performed at the destination point" datatype="INTEGER32" symboladdress=""></property><property propname="OpParam1" propremark="Additional operation parameter" datatype="INTEGER32" symboladdress=""></property><property propname="OpParam2" propremark="Additional operation parameter" datatype="INTEGER32" symboladdress=""></property><property propname="Error" propremark="Error codes set by background. Only valid when OrderENO is set.&#xD;&#xA;0  = Ok.&#xD;&#xA;1  = General nack.&#xD;&#xA;2  = Destination point does not exist.&#xD;&#xA;3  = Sync point not ok. Probably zero. The sync point is where the last order stopped, and from where the new order starts.&#xD;&#xA;4  = No way to reach the destination point.&#xD;&#xA;10 = Not in system.&#xD;&#xA;11 = Master mode.&#xD;&#xA;12 = Wrong operation mode. The vehicle must be in Auto mode to accept local orders.&#xD;&#xA;20 = Invalid destination point.&#xD;&#xA;21 = Order in progress." datatype="INTEGER32" symboladdress=""></property><property propname="OrderEN" propremark="Set when proper values are assigned to the local order parameters. Cleared when ENO is set" datatype="BOOLEAN" symboladdress=""></property><property propname="OrderENO" propremark="Set by background program when Error is assigned. Cleared when EN is cleared" datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="SSIO_T" remark="Access to SSIO from PLC"><properties><property propname="LogicalLine" propremark="Logical SSIO line." datatype="INTEGER32" symboladdress=""></property><property propname="UnitNumber" propremark="Unit id in a logical line." datatype="INTEGER32" symboladdress=""></property><property propname="InputOutputID" propremark="ID of input/output in unit." datatype="INTEGER32" symboladdress=""></property><property propname="RequestType" propremark="0:Read input status, 1:Read output status, 2:Set output status." datatype="INTEGER32" symboladdress=""></property><property propname="SetStatus" propremark="The status to set in case of a Set output status request, 0:OFF, 1:ON, 2:Flash 1Hz." datatype="INTEGER32" symboladdress=""></property><property propname="Status" propremark="The returned status in case of a read request. Valid only when SSIO_ENO is set." datatype="INTEGER32" symboladdress=""></property><property propname="SSIO_EN" propremark="First set SSIO address and request type then set this property to initiate a SSIO request. Clear when SSIO_ENO is set and Status has been read." datatype="BOOLEAN" symboladdress=""></property><property propname="SSIO_ENO" propremark="Set by background software when the SSIO request has been executed. For a read request this means that the reply can be read from the Status property." datatype="BOOLEAN" symboladdress=""></property><property propname="Error" propremark="0:No error, 1:Timeout." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="CanOpenMaster_T" remark="CANopen Master Component"><properties><property propname="MasterExecutionPeriod" propremark="Execution period for the CANopen master component. Unit is [ms]." datatype="INTEGER32" symboladdress=""></property><property propname="SyncPeriod" propremark="Sync producer period given in multiples of MasterExecutionPeriod." datatype="INTEGER32" symboladdress=""></property><property propname="CollectTimeout" propremark="Collect timeout before can server enters safe state" datatype="INTEGER32" symboladdress=""></property><property propname="CanMasterCmd" propremark="Command to CAN master when CanMasterEN is set, 1 = RestartCan, 2 = GoToSafeState" datatype="INTEGER32" symboladdress=""></property><property propname="CanMasterCmdEN" propremark="Commands CAN master to CanMasterCmd. Clear it when CanMasterCmdENO is set." datatype="BOOLEAN" symboladdress=""></property><property propname="CanMasterCmdENO" propremark="Set by background when commands CAN master to CanMasterCmd. Cleared when CanMasterEN is cleared." datatype="BOOLEAN" symboladdress=""></property><property propname="NMTState" propremark="The current CANopen state of the vehicle controller. Interpretation:&#xD;&#xA;                        Initializing (0) = loading definition,&#xD;&#xA;                        Stopped (4) = unable to start due to fatal definition error,&#xD;&#xA;                        Operational (5) = The vehicle controller fully operational either in normal state or in safestate,&#xD;&#xA;                        PreOperational (127) = pre-operational, configuration of slave devices,&#xD;&#xA;                        Unknown (255) = state undefined, no communication with node" datatype="UNSIGNED32" symboladdress=""></property><property propname="State" propremark="Current state of the CanOpenMaster application, 0 = NormalState, 1 = SafeState. When any error is detected that PLC does not handle, the vehicle controller will enter SafeState. Information about the error causing SafeState is available in properties StatusText, EMCY_NodeID, EMCY_Code, EMCY_ErrReg, EMCY_Byte1, etc. SafeState is a passive/diagnostic state and AllOk will be set to false." datatype="INTEGER32" symboladdress=""></property><property propname="StatusText" propremark="Text description of error that caused the vehicle controller to enter SafeState. Only valid when State = SafeState." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="EMCY_BusID" propremark="Bus ID that reported the error. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property><property propname="EMCY_NodeID" propremark="Node ID that reported the error. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property><property propname="EMCY_Code" propremark="CANopen emergency code, see device documentation. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property><property propname="EMCY_ErrReg" propremark="Error registry. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property><property propname="EMCY_Byte1" propremark="Manufacturer specific field, byte 1. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property><property propname="EMCY_Byte2" propremark="Manufacturer specific field, byte 2. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property><property propname="EMCY_Byte3" propremark="Manufacturer specific field, byte 3. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property><property propname="EMCY_Byte4" propremark="Manufacturer specific field, byte 4. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property><property propname="EMCY_Byte5" propremark="Manufacturer specific field, byte 5. Only valid when State = SafeState." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="CanOpenEmergency_T" remark="CANopen emergency data to PLC"><properties><property propname="EmcyEN" propremark="Set by background when emergency data is available for a CAN device that has FailureAction set to PLC. Cleared when ENO is set." datatype="BOOLEAN" symboladdress=""></property><property propname="EmcyENO" propremark="Set by PLC when read emergency data, cleared when EN is cleared." datatype="BOOLEAN" symboladdress=""></property><property propname="BusID" propremark="CAN bus id." datatype="INTEGER32" symboladdress=""></property><property propname="NodeID" propremark="CAN node id." datatype="INTEGER32" symboladdress=""></property><property propname="Code" propremark="Error code according to CANopen standard. When an emergency is generated by background program (node id is negative), the node id for the node it concerns is the last 5 bits of the code." datatype="INTEGER32" symboladdress=""></property><property propname="ErrReg" propremark="Error register according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte1" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte2" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte3" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte4" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte5" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property></properties></comptype><comptype compname="PLCEmergency_T" remark="CANOpen emergency data from PLC"><properties><property propname="Canbus" propremark="Bus to send emergency on. 0 = first bus, 1 = second bus." datatype="INTEGER32" symboladdress=""></property><property propname="Code" propremark="Error code according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="ErrReg" propremark="Error register according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte1" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte2" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte3" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte4" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="Byte5" propremark="Manufacturer specific error field according to CANopen standard." datatype="INTEGER32" symboladdress=""></property><property propname="EmcyEN" propremark="Set by PLC when emergency data is available. Cleared by PLC when ENO is set." datatype="BOOLEAN" symboladdress=""></property><property propname="EmcyENO" propremark="Set by the vehicle controller when emergency data has been read. Cleared by the vehicle controller when EN is cleared." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="SlavebusControl_T" remark="PLC interface to grant/deny slave bus request to enter NMT state pre-operational"><properties><property propname="EnterPreOpEN" propremark="Set by background when requesting to enter NMT state pre-operational. Cleared when ENO is set." datatype="BOOLEAN" symboladdress=""></property><property propname="EnterPreOpENO" propremark="Set by PLC when transition to NMT state pre-operational is granted. Cleared when EN is cleared." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="PPA_T" remark="Physical Parameter Adjust"><properties><property propname="LaserScannerRef" propremark="Reference to the Laser scanner component" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="FrontWheelRef" propremark="Reference to the front wheel component" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="SteerEncRef" propremark="Symbol address where the steer encoder offset is defined. Ex: SDIO_1.SteerEncOffset" datatype="VISIBLE_STRING" symboladdress=""></property><property propname="CurrentState" propremark="Current or last state of action:&#xD;&#xA;0 = Idle&#xD;&#xA;1 = Driving sequence 1&#xD;&#xA;2 = Driving sequence 2&#xD;&#xA;3 = Driving sequence 3&#xD;&#xA;4 = Driving sequence 4&#xD;&#xA;5 = Driving sequence 5&#xD;&#xA;6 = Estimation in progress&#xD;&#xA;7 = Estimation done result ok" datatype="INTEGER32" symboladdress=""></property><property propname="EstimationProgress" propremark="Progressbar during calculation" datatype="INTEGER32" symboladdress=""></property><property propname="CmdID" propremark="ID of current movement 1-5" datatype="INTEGER32" symboladdress=""></property><property propname="ErrorID" propremark="Error Id for error condition. 0 = no error" datatype="INTEGER32" symboladdress=""></property><property propname="CmdDone" propremark="Indicates completion of requested command." datatype="INTEGER32" symboladdress=""></property><property propname="SteerEncOffset" propremark="Calculated value" datatype="INTEGER32" symboladdress=""></property><property propname="LaserScannerX" propremark="Calculated value" datatype="INTEGER32" symboladdress=""></property><property propname="LaserScannerY" propremark="Calculated value" datatype="INTEGER32" symboladdress=""></property><property propname="LaserScannerAngle" propremark="Calculated value" datatype="REAL64" symboladdress=""></property></properties><operations></operations></comptype><comptype compname="LanSerialPort_T" remark="Serial port server"><properties><property propname="Protocol" propremark="Protocol used for IP communication." datatype="INTEGER32" symboladdress=""></property><property propname="IP" propremark="In case of Protocol set to UDP client or TCP client this should be set&#xD;&#xA;to the IP address of the UDP/TCP server that the PLC connects to. With&#xD;&#xA;Protocol set to UDP server or TCP server this specify the IP address of&#xD;&#xA;the vehicle controller which clients should use.&#xD;&#xA;&#xD;&#xA;In the case of Protocol set to UDP server or TCP server, the special&#xD;&#xA;value &quot;LAN&quot; means that connections are only allowed on the&#xD;&#xA;LAN interface and the special value &quot;ANY&quot; allows connections&#xD;&#xA;on both the LAN interface and the WLAN interface.&#xD;&#xA;&#xD;&#xA;Changing the address from the PLC will result in the connection being&#xD;&#xA;closed. The new IP address will be used in the next PLC loop serial&#xD;&#xA;read/write.  Note! It is not possible to change the address for a&#xD;&#xA;range sensor connected using a LAN-serial-adapter." datatype="VISIBLE_STRING" symboladdress=""></property><property propname="Port" propremark="In case of Protocol set to UDP client or TCP client this should be set&#xD;&#xA;to the port of the UDP/TCP server that the PLC connects to. With&#xD;&#xA;Protocol set to UDP server or TCP server this specify the port on the&#xD;&#xA;vehicle controller that the PLC opens for connections.&#xD;&#xA;&#xD;&#xA;Changing the port from the PLC will result in the connection being&#xD;&#xA;closed. The new port will be used in the next PLC loop serial&#xD;&#xA;read/write.  Note! It is not possible to change the port for a range&#xD;&#xA;sensor connected using a LAN-serial-adapter." datatype="INTEGER32" symboladdress=""></property><property propname="SendBuffer" propremark="With SendBuffer set, outgoing data is sent over IP when the PLC&#xD;&#xA;function block NDC_SERIAL_WRITE is called with argument&#xD;&#xA;LENGTH=0. Without SendBuffer set, data is sent immediately but each IP&#xD;&#xA;packet will contain at most 32 bytes data with more IP traffic as a&#xD;&#xA;result." datatype="BOOLEAN" symboladdress=""></property></properties></comptype><comptype compname="UserDefined_T" remark="Component with properties to be defined and used by the application"><properties><property propname="DoNavInit" propremark="Boolean_1" datatype="BOOLEAN" symboladdress="Boolean_1"></property><property propname="Braker_Signal" propremark="Boolean_2" datatype="BOOLEAN" symboladdress="Boolean_2"></property><property propname="DoLocalOrder" propremark="Boolean_3" datatype="BOOLEAN" symboladdress="Boolean_3"></property><property propname="ChangeOrderMode" propremark="Boolean_4" datatype="BOOLEAN" symboladdress="Boolean_4"></property><property propname="LowBatSim" propremark="Boolean_5" datatype="BOOLEAN" symboladdress="Boolean_5"></property><property propname="Boolean_6" propremark="Boolean_6" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_7" propremark="Boolean_7" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_8" propremark="Boolean_8" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_9" propremark="Boolean_9" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_10_BlockPowOffEn" propremark="Boolean_10" datatype="BOOLEAN" symboladdress="Boolean_10"></property><property propname="Boolean_11_LostPosPowOffEn" propremark="" datatype="BOOLEAN" symboladdress="Boolean_11"></property><property propname="Boolean_12" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_13" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_14" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_15" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_16" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_17" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_18" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_19" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_20_OnlineOrderMode" propremark="1 = Local Mode; 0 = Host Mode" datatype="BOOLEAN" symboladdress="Boolean_20"></property><property propname="Boolean_21" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_22" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_23" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_24" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_25" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_26" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_27" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_28" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_29" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="Boolean_30" propremark="" datatype="BOOLEAN" symboladdress=""></property><property propname="StopWord" propremark="Integer32_1" datatype="INTEGER32" symboladdress="Integer32_1"></property><property propname="Integer32_2" propremark="Integer32_2" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_3" propremark="Integer32_3" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_4" propremark="Integer32_4" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_5" propremark="Integer32_5" datatype="INTEGER32" symboladdress=""></property><property propname="SlowDownDisable" propremark="Integer32_6" datatype="INTEGER32" symboladdress="Integer32_6"></property><property propname="PPAEnable" propremark="Integer32_7" datatype="INTEGER32" symboladdress="Integer32_7"></property><property propname="SafetyScannerTurnAngle" propremark="Integer32_8" datatype="INTEGER32" symboladdress="Integer32_8"></property><property propname="NormalCreepDistance" propremark="Integer32_9" datatype="INTEGER32" symboladdress="Integer32_9"></property><property propname="Integer32_10_PCLMODBUS" propremark="Integer32_10" datatype="INTEGER32" symboladdress="Integer32_10"></property><property propname="Integer32_11" propremark="Integer32_11" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_12" propremark="Integer32_12" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_13" propremark="Integer32_13" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_14" propremark="Integer32_14" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_15" propremark="Integer32_15" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_16" propremark="Integer32_16" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_17" propremark="Integer32_17" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_18" propremark="Integer32_18" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_19" propremark="Integer32_19" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_20" propremark="Integer32_20" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_21" propremark="Integer32_21" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_22" propremark="Integer32_22" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_23" propremark="Integer32_23" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_24" propremark="Integer32_24" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_25" propremark="Integer32_25" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_26" propremark="Integer32_26" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_27" propremark="Integer32_27" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_28" propremark="Integer32_28" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_29" propremark="Integer32_29" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_30" propremark="Integer32_30" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_31" propremark="Integer32_31" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_32" propremark="Integer32_32" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_33" propremark="Integer32_33" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_34" propremark="Integer32_34" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_35" propremark="Integer32_35" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_36" propremark="Integer32_36" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_37" propremark="Integer32_37" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_38" propremark="Integer32_38" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_39" propremark="Integer32_39" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_40" propremark="Integer32_40" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_41" propremark="Integer32_41" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_42" propremark="Integer32_42" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_43" propremark="Integer32_43" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_44" propremark="Integer32_44" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_45" propremark="Integer32_45" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_46" propremark="Integer32_46" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_47" propremark="" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_48" propremark="" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_49" propremark="" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_50_BattLowVol" propremark="" datatype="INTEGER32" symboladdress="Integer32_50"></property><property propname="Integer32_51_BattLowSel" propremark="1=L or M or H, 2=M or H, 3=H" datatype="INTEGER32" symboladdress="Integer32_51"></property><property propname="Integer32_52_PowOffTm" propremark="ms" datatype="INTEGER32" symboladdress="Integer32_52"></property><property propname="Integer32_53_OverVESTOPTm" propremark="" datatype="INTEGER32" symboladdress="Integer32_53"></property><property propname="Integer32_54" propremark="" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_55_TravelDistance" propremark="" datatype="INTEGER32" symboladdress="Integer32_55"></property><property propname="Integer32_56" propremark="" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_57" propremark="" datatype="INTEGER32" symboladdress=""></property><property propname="Integer32_58_LS2000_Attached_D" propremark="" datatype="INTEGER32" symboladdress="Integer32_58"></property><property propname="Integer32_59_LS2000_Attached_H" propremark="" datatype="INTEGER32" symboladdress="Integer32_59"></property><property propname="Integer32_60_LS2000_Attached_M" propremark="" datatype="INTEGER32" symboladdress="Integer32_60"></property></properties></comptype></comptypes></top>